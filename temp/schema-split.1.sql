-- changeset angelchang:246
CREATE INDEX IF NOT EXISTS "idx_api_log_app_version_idx" ON "api_log"("app_version");
-- rollback: DROP INDEX idx_api_log_app_version_idx;

-- changeset angelchang:247
CREATE INDEX IF NOT EXISTS "idx_api_log_created_at" ON "api_log"("created_at" DESC);
-- rollback: DROP INDEX idx_api_log_created_at;

-- changeset angelchang:248
CREATE INDEX IF NOT EXISTS "idx_api_log_endpoint_idx" ON "api_log"("endpoint");
-- rollback: DROP INDEX idx_api_log_endpoint_idx;

-- changeset angelchang:249
CREATE INDEX IF NOT EXISTS "idx_app_log_created_at" ON "app_log"("created_at");
-- rollback: DROP INDEX idx_app_log_created_at;

-- changeset angelchang:250
ALTER TABLE "auth_apple" ADD CONSTRAINT "auth_apple_user_identifier_key" UNIQUE ("user_identifier");
-- rollback: ALTER TABLE auth_apple DROP CONSTRAINT auth_apple_user_identifier_key;

-- changeset angelchang:251
CREATE INDEX IF NOT EXISTS "idx_care_connect_clinic_id_role_status" ON "care_connect"("clinic_id", "role", "status");
-- rollback: DROP INDEX idx_care_connect_clinic_id_role_status;

-- changeset angelchang:252
CREATE INDEX IF NOT EXISTS idx_care_connect_role_user_id ON public.care_connect USING btree (role, user_id) WHERE (status = 'active'::text);
-- rollback: DROP INDEX idx_care_connect_role_user_id;

-- changeset angelchang:253
CREATE INDEX IF NOT EXISTS idx_care_connect_user_clinic_role ON public.care_connect USING btree (user_id, clinic_id, role) WHERE (status = 'active'::text);
-- rollback: DROP INDEX idx_care_connect_user_clinic_role;

-- changeset angelchang:254
CREATE INDEX IF NOT EXISTS idx_cvc_care_connect_id_user_stream_id ON public.care_viewed_connect USING btree (care_connect_id, user_stream_id) WHERE (NOT active);
-- rollback: DROP INDEX idx_cvc_care_connect_id_user_stream_id;

-- changeset angelchang:255
CREATE INDEX IF NOT EXISTS "idx_cvc_ids" ON "care_viewed_connect"("user_id", "care_connect_id", "user_stream_id");
-- rollback: DROP INDEX idx_cvc_ids;

-- changeset angelchang:256
CREATE INDEX IF NOT EXISTS idx_cvc_section ON public.care_viewed_connect USING btree (section) WHERE (active = true);
-- rollback: DROP INDEX idx_cvc_section;

-- changeset angelchang:257
CREATE INDEX IF NOT EXISTS "idx_cvc_section_user_stream_id" ON "care_viewed_connect"("section", "user_stream_id");
-- rollback: DROP INDEX idx_cvc_section_user_stream_id;

-- changeset angelchang:258
CREATE INDEX IF NOT EXISTS "idx_user_stream_id" ON "care_viewed_connect"("user_stream_id");
-- rollback: DROP INDEX idx_user_stream_id;

-- changeset angelchang:259
CREATE TYPE bgunit AS enum ('mg_dl', 'mmol_l');
CREATE TABLE IF NOT EXISTS "cgm_config" ("id" INTEGER GENERATED BY DEFAULT AS IDENTITY NOT NULL, "created_at" TIMESTAMP WITH TIME ZONE, "deleted_at" TIMESTAMP WITH TIME ZONE, "updated_at" TIMESTAMP WITH TIME ZONE, "user_id" INTEGER NOT NULL, "carer_id" INTEGER NOT NULL, "upper_range" FLOAT8, "lower_range" FLOAT8, "unit" BGUNIT, CONSTRAINT "cgm_config_pkey" PRIMARY KEY ("id"));
-- rollback: DROP TABLE cgm_config;

-- changeset angelchang:260
CREATE INDEX IF NOT EXISTS idx_active_clinic_chart ON public.clinic_chart USING btree (care_connect_id, status) WHERE (status = 'active'::text);
-- rollback: DROP INDEX idx_active_clinic_chart;

-- changeset angelchang:261
CREATE INDEX IF NOT EXISTS "idx_clinic_chart_clinic_id_user_id" ON "clinic_chart"("clinic_id", "user_id");
-- rollback: DROP INDEX idx_clinic_chart_clinic_id_user_id;

-- changeset angelchang:262
CREATE TABLE IF NOT EXISTS "oral_medicine" ("id" INTEGER GENERATED BY DEFAULT AS IDENTITY NOT NULL, "created_at" TIMESTAMP WITHOUT TIME ZONE DEFAULT NOW(), "updated_at" TIMESTAMP WITHOUT TIME ZONE DEFAULT NOW(), "name" TEXT NOT NULL, "uid" INTEGER DEFAULT 0 NOT NULL, "languages" VARCHAR DEFAULT '[]' NOT NULL, "deprecated" BOOLEAN DEFAULT FALSE, CONSTRAINT "oral_medicine_pkey" PRIMARY KEY ("id"));
-- rollback: DROP TABLE oral_medicine;

-- changeset angelchang:263
CREATE INDEX IF NOT EXISTS "idx_clinic_monthly_year_month_is_pseudo_included_country" ON "clinic_default_analytics_monthly_stats"("year", "month", "is_pseudo_included", "country_iso_2");
-- rollback: DROP INDEX idx_clinic_monthly_year_month_is_pseudo_included_country;

-- changeset angelchang:264
CREATE INDEX IF NOT EXISTS "idx_clinic_quarterly_year_quarter_is_pseudo_included_country" ON "clinic_default_analytics_quarterly_stats"("year", "quarter", "is_pseudo_included", "country_iso_2");
-- rollback: DROP INDEX idx_clinic_quarterly_year_quarter_is_pseudo_included_country;

-- changeset angelchang:265
CREATE INDEX IF NOT EXISTS "idx_clinic_yearly_year_is_pseudo_included_country" ON "clinic_default_analytics_yearly_stats"("year", "is_pseudo_included", "country_iso_2");
-- rollback: DROP INDEX idx_clinic_yearly_year_is_pseudo_included_country;

-- changeset angelchang:266
ALTER TABLE "clinic_discount_code" ADD CONSTRAINT "clinic_discount_code_code_key" UNIQUE ("code");
-- rollback: ALTER TABLE clinic_discount_code DROP CONSTRAINT clinic_discount_code_code_key;

-- changeset angelchang:267
CREATE INDEX IF NOT EXISTS "idx_clinic_exam_chart_clinic_id" ON "clinic_exam_chart"("clinic_id");
-- rollback: DROP INDEX idx_clinic_exam_chart_clinic_id;

-- changeset angelchang:268
CREATE INDEX IF NOT EXISTS "idx_clinic_exam_unit_clinic_id" ON "clinic_exam_unit"("clinic_id");
-- rollback: DROP INDEX idx_clinic_exam_unit_clinic_id;

-- changeset angelchang:269
ALTER TABLE "clinic_group_connect" ADD CONSTRAINT "clinic_group_connect_unique_key" UNIQUE ("user_id", "clinic_group_id");
-- rollback: ALTER TABLE clinic_group_connect DROP CONSTRAINT clinic_group_connect_unique_key;

-- changeset angelchang:270
CREATE INDEX IF NOT EXISTS "idx_clinic_loyalty_transaction_clinic_id_user_id" ON "clinic_loyalty_transaction"("clinic_id", "user_id");
-- rollback: DROP INDEX idx_clinic_loyalty_transaction_clinic_id_user_id;

-- changeset angelchang:271
CREATE INDEX IF NOT EXISTS "idx_clinic_loyalty_transaction_diary_id" ON "clinic_loyalty_transaction"("diary_id");
-- rollback: DROP INDEX idx_clinic_loyalty_transaction_diary_id;

-- changeset angelchang:272
CREATE INDEX IF NOT EXISTS "idx_clinic_id_deleted_at_pm_display_name" ON "clinic_medicine"("clinic_id", "deleted_at", "pm_display_name");
-- rollback: DROP INDEX idx_clinic_id_deleted_at_pm_display_name;

-- changeset angelchang:273
CREATE INDEX IF NOT EXISTS "idx_clinic_notification_setting_clinic_id_user_id" ON "clinic_notification_setting"("clinic_id", "user_id");
-- rollback: DROP INDEX idx_clinic_notification_setting_clinic_id_user_id;

-- changeset angelchang:274
CREATE INDEX IF NOT EXISTS "idx_clinic_prescription_clinic_id_user_id" ON "clinic_prescription"("clinic_id", "user_id");
-- rollback: DROP INDEX idx_clinic_prescription_clinic_id_user_id;

-- changeset angelchang:275
CREATE INDEX IF NOT EXISTS "idx_clinic_prescription_clinic_id_user_id_start_date_deleted_at" ON "clinic_prescription"("clinic_id", "user_id", "start_date", "deleted_at");
-- rollback: DROP INDEX idx_clinic_prescription_clinic_id_user_id_start_date_deleted_at;

-- changeset angelchang:276
CREATE INDEX IF NOT EXISTS "idx_clinic_prescription_parent_clinic_prescription_id" ON "clinic_prescription"("parent_clinic_prescription_id");
-- rollback: DROP INDEX idx_clinic_prescription_parent_clinic_prescription_id;

-- changeset angelchang:277
CREATE INDEX IF NOT EXISTS idx_clinic_reminder_cache ON public.clinic_reminder USING btree (clinic_id) WHERE (((status)::text = 'active'::text) AND ((category)::text = 'cache'::text));
-- rollback: DROP INDEX idx_clinic_reminder_cache;

-- changeset angelchang:278
CREATE INDEX IF NOT EXISTS "idx_clinic_reminder_examine_at_user_clinic_v2" ON "clinic_reminder"("user_id", "clinic_id", "examine_at");
-- rollback: DROP INDEX idx_clinic_reminder_examine_at_user_clinic_v2;

-- changeset angelchang:279
CREATE TABLE IF NOT EXISTS "feedback" ("id" INTEGER GENERATED BY DEFAULT AS IDENTITY NOT NULL, "created_at" TIMESTAMP WITHOUT TIME ZONE DEFAULT NOW(), "type" VARCHAR NOT NULL, "values" TEXT DEFAULT '{}' NOT NULL, "user_id" INTEGER NOT NULL, CONSTRAINT "feedback_pkey" PRIMARY KEY ("id"));
-- rollback: DROP TABLE feedback;

-- changeset angelchang:280
CREATE INDEX IF NOT EXISTS idx_clinic_subscription_clinic_id_user_id_with_status_active ON public.clinic_subscription USING btree (clinic_id, user_id) WHERE (status = 'active'::text);
-- rollback: DROP INDEX idx_clinic_subscription_clinic_id_user_id_with_status_active;

-- changeset angelchang:281
ALTER TABLE "collaboration_content" ADD CONSTRAINT "collaboration_content_clinic_id_key" UNIQUE ("clinic_id");
-- rollback: ALTER TABLE collaboration_content DROP CONSTRAINT collaboration_content_clinic_id_key;

-- changeset angelchang:282
CREATE INDEX IF NOT EXISTS "idx_custom_diary_tag_user_id_type" ON "custom_diary_tag"("user_id", "type");
-- rollback: DROP INDEX idx_custom_diary_tag_user_id_type;

-- changeset angelchang:283
CREATE INDEX IF NOT EXISTS "idx_custom_medicine_user_id" ON "custom_medicine"("user_id");
-- rollback: DROP INDEX idx_custom_medicine_user_id;

-- changeset angelchang:284
CREATE INDEX IF NOT EXISTS "idx_daily_step_user_id_recorded_date" ON "daily_step"("user_id", "recorded_date");
-- rollback: DROP INDEX idx_daily_step_user_id_recorded_date;

-- changeset angelchang:285
CREATE UNIQUE INDEX IF NOT EXISTS "idx_unique_dashboard_cache_user_id_ctype" ON "dashboard_cache"("user_id", "ctype");
-- rollback: DROP INDEX idx_unique_dashboard_cache_user_id_ctype;

-- changeset angelchang:286
ALTER TABLE "dashboard_setting" ADD CONSTRAINT "dashboard_setting_care_connect_id_unique_key" UNIQUE ("care_connect_id");
-- rollback: ALTER TABLE dashboard_setting DROP CONSTRAINT dashboard_setting_care_connect_id_unique_key;

-- changeset angelchang:287
ALTER TABLE "dashboard_status" ADD CONSTRAINT "dashboard_status_user_id_care_connect_id_ukey" UNIQUE ("user_id", "care_connect_id");
-- rollback: ALTER TABLE dashboard_status DROP CONSTRAINT dashboard_status_user_id_care_connect_id_ukey;

-- changeset angelchang:288
CREATE INDEX IF NOT EXISTS "diary_user_id_recorded_at_idx" ON "diary"("user_id", "recorded_at");
-- rollback: DROP INDEX diary_user_id_recorded_at_idx;

-- changeset angelchang:289
CREATE INDEX IF NOT EXISTS "idx_diary_batch_uuid" ON "diary"("batch_uuid");
-- rollback: DROP INDEX idx_diary_batch_uuid;

-- changeset angelchang:290
CREATE INDEX IF NOT EXISTS "idx_diary_created_at" ON "diary"("created_at" DESC);
-- rollback: DROP INDEX idx_diary_created_at;

-- changeset angelchang:291
CREATE INDEX IF NOT EXISTS "idx_diary_glucose_value_in_mg_dl" ON "diary"("glucose_value_in_mg_dl");
-- rollback: DROP INDEX idx_diary_glucose_value_in_mg_dl;

-- changeset angelchang:292
CREATE INDEX IF NOT EXISTS "idx_diary_glucose_value_user_id" ON "diary"("glucose_value", "user_id");
-- rollback: DROP INDEX idx_diary_glucose_value_user_id;

-- changeset angelchang:293
CREATE INDEX IF NOT EXISTS "idx_diary_recorded_created_at" ON "diary"("recorded_at", "created_at");
-- rollback: DROP INDEX idx_diary_recorded_created_at;

-- changeset angelchang:294
CREATE INDEX IF NOT EXISTS "idx_diary_setting_id" ON "diary"("setting_id");
-- rollback: DROP INDEX idx_diary_setting_id;

-- changeset angelchang:295
CREATE INDEX IF NOT EXISTS "idx_diary_updated_at" ON "diary"("updated_at");
-- rollback: DROP INDEX idx_diary_updated_at;

-- changeset angelchang:296
CREATE INDEX IF NOT EXISTS "idx_diary_user_id_created_at_idx" ON "diary"("user_id", "created_at" DESC);
-- rollback: DROP INDEX idx_diary_user_id_created_at_idx;

-- changeset angelchang:297
CREATE INDEX IF NOT EXISTS "idx_diary_user_id_glucose_recorded_at" ON "diary"("user_id", "glucose_value", "recorded_at");
-- rollback: DROP INDEX idx_diary_user_id_glucose_recorded_at;

-- changeset angelchang:298
CREATE INDEX IF NOT EXISTS "idx_diary_user_id_glucose_value_in_mg_dl_recorded_at" ON "diary"("user_id", "glucose_value_in_mg_dl", "recorded_at");
-- rollback: DROP INDEX idx_diary_user_id_glucose_value_in_mg_dl_recorded_at;

-- changeset angelchang:299
CREATE INDEX IF NOT EXISTS "idx_diary_user_id_systolic_recorded_at" ON "diary"("user_id", "systolic", "recorded_at");
-- rollback: DROP INDEX idx_diary_user_id_systolic_recorded_at;

-- changeset angelchang:300
CREATE INDEX IF NOT EXISTS "idx_diary_user_id_updated_at" ON "diary"("user_id", "updated_at");
-- rollback: DROP INDEX idx_diary_user_id_updated_at;

-- changeset angelchang:301
CREATE INDEX IF NOT EXISTS "idx_diary_user_id_weight_recorded_at" ON "diary"("user_id", "weight", "recorded_at");
-- rollback: DROP INDEX idx_diary_user_id_weight_recorded_at;

-- changeset angelchang:302
CREATE INDEX IF NOT EXISTS "idx_diary_attachment_diary_id" ON "diary_attachment"("diary_id");
-- rollback: DROP INDEX idx_diary_attachment_diary_id;

-- changeset angelchang:303
ALTER TABLE "diary_batch_record" ADD CONSTRAINT "diary_batch_record_batch_uuid_key" UNIQUE ("batch_uuid");
-- rollback: ALTER TABLE diary_batch_record DROP CONSTRAINT diary_batch_record_batch_uuid_key;

-- changeset angelchang:304
CREATE INDEX IF NOT EXISTS idx_diary_logged_cache_user_id_recorded_date ON public.diary_logged_data_cache USING btree (user_id, recorded_date) WHERE (deleted_at IS NULL);
-- rollback: DROP INDEX idx_diary_logged_cache_user_id_recorded_date;

-- changeset angelchang:305
CREATE INDEX IF NOT EXISTS "diary_tag_diary_id_type" ON "diary_tag"("diary_id", "type");
-- rollback: DROP INDEX diary_tag_diary_id_type;

-- changeset angelchang:306
CREATE INDEX IF NOT EXISTS "idx_email_reminder_event_user_id" ON "email_reminder_event"("user_id");
-- rollback: DROP INDEX idx_email_reminder_event_user_id;

-- changeset angelchang:307
CREATE INDEX IF NOT EXISTS "idx_institution_patient_date" ON "emr_record"("medical_institution_code", "patient_chart_number", "date");
-- rollback: DROP INDEX idx_institution_patient_date;

-- changeset angelchang:308
CREATE INDEX IF NOT EXISTS "idx_examination_care_connect_id_source_id_diagnosed_at" ON "examination"("care_connect_id", "source_id", "diagnosed_at");
-- rollback: DROP INDEX idx_examination_care_connect_id_source_id_diagnosed_at;

-- changeset angelchang:309
CREATE INDEX IF NOT EXISTS "idx_examination_clinic_id_user_id_diagnosed_at" ON "examination"("clinic_id", "user_id", "diagnosed_at");
-- rollback: DROP INDEX idx_examination_clinic_id_user_id_diagnosed_at;

-- changeset angelchang:310
CREATE UNIQUE INDEX IF NOT EXISTS "name_ukey" ON "feature_toggle"("name");
-- rollback: DROP INDEX name_ukey;

-- changeset angelchang:311
CREATE INDEX IF NOT EXISTS "idx_food_database_source_id" ON "food_database"("source_id");
-- rollback: DROP INDEX idx_food_database_source_id;

-- changeset angelchang:312
CREATE INDEX IF NOT EXISTS "idx_food_db_user_id" ON "food_database"("user_id");
-- rollback: DROP INDEX idx_food_db_user_id;

-- changeset angelchang:313
CREATE INDEX IF NOT EXISTS "food_database_connect_diary_id_idx" ON "food_database_connect"("diary_id");
-- rollback: DROP INDEX food_database_connect_diary_id_idx;

-- changeset angelchang:314
CREATE INDEX IF NOT EXISTS "idx_food_db_connect_user_id" ON "food_database_connect"("user_id");
-- rollback: DROP INDEX idx_food_db_connect_user_id;

-- changeset angelchang:315
ALTER TABLE "food_database_favorited" ADD CONSTRAINT "user_food_database_favorite_unique_key" UNIQUE ("user_id", "food_database_id");
-- rollback: ALTER TABLE food_database_favorited DROP CONSTRAINT user_food_database_favorite_unique_key;

-- changeset angelchang:316
ALTER TABLE "friend_notification_setting" ADD CONSTRAINT "friend_notification_setting_from_id_to_id_key" UNIQUE ("from_id", "to_id");
-- rollback: ALTER TABLE friend_notification_setting DROP CONSTRAINT friend_notification_setting_from_id_to_id_key;

-- changeset angelchang:317
CREATE INDEX IF NOT EXISTS "idx_friends_from_id" ON "friends"("from_id");
-- rollback: DROP INDEX idx_friends_from_id;

-- changeset angelchang:318
CREATE INDEX IF NOT EXISTS "idx_friends_to_id" ON "friends"("to_id");
-- rollback: DROP INDEX idx_friends_to_id;

-- changeset angelchang:319
ALTER TABLE "friends" ADD CONSTRAINT "friends_from_id_to_id_key" UNIQUE ("from_id", "to_id");
-- rollback: ALTER TABLE friends DROP CONSTRAINT friends_from_id_to_id_key;

-- changeset angelchang:320
CREATE INDEX IF NOT EXISTS "idx_user_identity" ON "fubon_insurance_promotion"("user_identity");
-- rollback: DROP INDEX idx_user_identity;

-- changeset angelchang:321
CREATE TABLE IF NOT EXISTS "email_verify" ("id" INTEGER GENERATED BY DEFAULT AS IDENTITY NOT NULL, "created_at" TIMESTAMP WITHOUT TIME ZONE DEFAULT NOW(), "updated_at" TIMESTAMP WITHOUT TIME ZONE DEFAULT NOW(), "email" TEXT NOT NULL, "code" TEXT NOT NULL, "user_id" INTEGER NOT NULL, "status" TEXT NOT NULL, CONSTRAINT "email_verify_pkey" PRIMARY KEY ("id"));
-- rollback: DROP TABLE email_verify;

-- changeset angelchang:322
CREATE INDEX IF NOT EXISTS "idx_health_user_avatar_id" ON "health_user"("avatar_id");
-- rollback: DROP INDEX idx_health_user_avatar_id;

-- changeset angelchang:323
CREATE INDEX IF NOT EXISTS "idx_health_user_created_at_country" ON "health_user"("created_at", "country");
-- rollback: DROP INDEX idx_health_user_created_at_country;

-- changeset angelchang:324
CREATE INDEX IF NOT EXISTS "idx_health_user_identity" ON "health_user"("identity");
-- rollback: DROP INDEX idx_health_user_identity;

-- changeset angelchang:325
CREATE INDEX IF NOT EXISTS "idx_health_user_tester_pseudo_status" ON "health_user"("is_tester", "is_pseudo", "status");
-- rollback: DROP INDEX idx_health_user_tester_pseudo_status;

-- changeset angelchang:326
ALTER TABLE "health_user" ADD CONSTRAINT "health_user_email_key" UNIQUE ("email");
-- rollback: ALTER TABLE health_user DROP CONSTRAINT health_user_email_key;

-- changeset angelchang:327
CREATE INDEX IF NOT EXISTS "idx_heartbeat_user_id_sync_time" ON "heartbeat"("user_id", "sync_time");
-- rollback: DROP INDEX idx_heartbeat_user_id_sync_time;

-- changeset angelchang:328
CREATE INDEX IF NOT EXISTS "idx_hl_cgm_1m_message_event_user_id" ON "hl_cgm_1m_message_event"("user_id");
-- rollback: DROP INDEX idx_hl_cgm_1m_message_event_user_id;

-- changeset angelchang:329
CREATE INDEX IF NOT EXISTS "idx_hl_cgm_1m_v2_message_event_user_id" ON "hl_cgm_1m_v2_message_event"("user_id");
-- rollback: DROP INDEX idx_hl_cgm_1m_v2_message_event_user_id;

-- changeset angelchang:330
CREATE INDEX IF NOT EXISTS "idx_hl_cgm_2m_message_event_user_id" ON "hl_cgm_2m_message_event"("user_id");
-- rollback: DROP INDEX idx_hl_cgm_2m_message_event_user_id;

-- changeset angelchang:331
CREATE INDEX IF NOT EXISTS "idx_hl_cgm_3m_message_event_user_id" ON "hl_cgm_3m_message_event"("user_id");
-- rollback: DROP INDEX idx_hl_cgm_3m_message_event_user_id;

-- changeset angelchang:332
CREATE INDEX IF NOT EXISTS "idx_hl_cgm_message_event_user_id" ON "hl_cgm_message_event"("user_id");
-- rollback: DROP INDEX idx_hl_cgm_message_event_user_id;

-- changeset angelchang:333
CREATE INDEX IF NOT EXISTS "idx_hl_cgm_policyholder_message_event_user_id" ON "hl_cgm_policyholder_message_event"("user_id");
-- rollback: DROP INDEX idx_hl_cgm_policyholder_message_event_user_id;

-- changeset angelchang:334
CREATE INDEX IF NOT EXISTS "idx_hourly_steps_created_at" ON "hourly_steps"("created_at");
-- rollback: DROP INDEX idx_hourly_steps_created_at;

-- changeset angelchang:335
CREATE INDEX IF NOT EXISTS "idx_hourly_steps_recorded_at" ON "hourly_steps"("recorded_at");
-- rollback: DROP INDEX idx_hourly_steps_recorded_at;

-- changeset angelchang:336
CREATE UNIQUE INDEX IF NOT EXISTS "idx_step_user_id_recorded_at_source" ON "hourly_steps"("user_id", "recorded_at", "source");
-- rollback: DROP INDEX idx_step_user_id_recorded_at_source;

-- changeset angelchang:337
CREATE INDEX IF NOT EXISTS "idx_insulin_conn_diary_ids" ON "insulin_connect"("diary_id");
-- rollback: DROP INDEX idx_insulin_conn_diary_ids;

-- changeset angelchang:338
ALTER TABLE "insulin_connect" ADD CONSTRAINT "insulin_connect_ukey" UNIQUE ("user_id", "role", "insulin_id", "diary_id");
-- rollback: ALTER TABLE insulin_connect DROP CONSTRAINT insulin_connect_ukey;

-- changeset angelchang:339
CREATE INDEX IF NOT EXISTS "idx_interactive_form_created_at_status" ON "interactive_form"("created_at" DESC, "status");
-- rollback: DROP INDEX idx_interactive_form_created_at_status;

-- changeset angelchang:340
CREATE INDEX IF NOT EXISTS "idx_interactive_form_connect_ifid_status" ON "interactive_form_connect"("interactive_form_id", "status");
-- rollback: DROP INDEX idx_interactive_form_connect_ifid_status;

-- changeset angelchang:341
CREATE INDEX IF NOT EXISTS "idx_interactive_form_connect_send_to" ON "interactive_form_connect"("send_to");
-- rollback: DROP INDEX idx_interactive_form_connect_send_to;

-- changeset angelchang:342
CREATE INDEX IF NOT EXISTS "idx_interactive_form_connect_status" ON "interactive_form_connect"("status");
-- rollback: DROP INDEX idx_interactive_form_connect_status;

-- changeset angelchang:343
CREATE INDEX IF NOT EXISTS "idx_invitation_invitee_id" ON "invitation"("invitee_id");
-- rollback: DROP INDEX idx_invitation_invitee_id;

-- changeset angelchang:344
CREATE UNIQUE INDEX IF NOT EXISTS unique_unused_invite_code ON public.invitation USING btree (invite_code) WHERE (invite_code IS NOT NULL);
-- rollback: DROP INDEX unique_unused_invite_code;

-- changeset angelchang:345
CREATE INDEX IF NOT EXISTS idx_lab_result_identify ON public.lab_result USING btree (identify) WHERE (NOT exported);
-- rollback: DROP INDEX idx_lab_result_identify;

-- changeset angelchang:346
ALTER TABLE "libreview_subscription_plan" ADD CONSTRAINT "libreview_subscription_plan_product_id_key" UNIQUE ("product_id");
-- rollback: ALTER TABLE libreview_subscription_plan DROP CONSTRAINT libreview_subscription_plan_product_id_key;

-- changeset angelchang:347
CREATE UNIQUE INDEX IF NOT EXISTS "unique_medicine_reminder_user_id_medicine_type_uid" ON "medicine_reminder"("user_id", "medicine_type", "uid");
-- rollback: DROP INDEX unique_medicine_reminder_user_id_medicine_type_uid;

-- changeset angelchang:348
ALTER TABLE "meter" ADD CONSTRAINT "meter_brand_model_unique_key" UNIQUE ("brand", "model");
-- rollback: ALTER TABLE meter DROP CONSTRAINT meter_brand_model_unique_key;

-- changeset angelchang:349
ALTER TABLE "meter" ADD CONSTRAINT "meter_refer_number_unique_key" UNIQUE ("refer_number");
-- rollback: ALTER TABLE meter DROP CONSTRAINT meter_refer_number_unique_key;

-- changeset angelchang:350
CREATE INDEX IF NOT EXISTS idx_moshi_campaign_id ON public.moshi USING btree (moshi_campaign_id, status) WHERE (moshi_campaign_id IS NOT NULL);
-- rollback: DROP INDEX idx_moshi_campaign_id;

-- changeset angelchang:351
CREATE INDEX IF NOT EXISTS "idx_moshi_clinic_receiver_status_created_at_sender" ON "moshi"("clinic_id", "receiver_id", "status", "created_at" DESC, "sender_id");
-- rollback: DROP INDEX idx_moshi_clinic_receiver_status_created_at_sender;

-- changeset angelchang:352
CREATE INDEX IF NOT EXISTS idx_moshi_receiver_created_at_status ON public.moshi USING btree (receiver_id, created_at DESC) WHERE (status <> ALL (ARRAY['deleted'::text, 'archived'::text]));
-- rollback: DROP INDEX idx_moshi_receiver_created_at_status;

-- changeset angelchang:353
CREATE INDEX IF NOT EXISTS "idx_moshi_receiver_sender_status" ON "moshi"("receiver_id", "sender_id", "status");
-- rollback: DROP INDEX idx_moshi_receiver_sender_status;

-- changeset angelchang:354
CREATE INDEX IF NOT EXISTS "idx_moshi_sender_created_at" ON "moshi"("created_at", "sender_id");
-- rollback: DROP INDEX idx_moshi_sender_created_at;

-- changeset angelchang:355
CREATE INDEX IF NOT EXISTS "idx_moshi_sender_receiver_clinic_created_at_status" ON "moshi"("sender_id", "receiver_id", "clinic_id", "status", "created_at");
-- rollback: DROP INDEX idx_moshi_sender_receiver_clinic_created_at_status;

-- changeset angelchang:356
CREATE INDEX IF NOT EXISTS "idx_moshi_attachment_moshi_id" ON "moshi_attachment"("moshi_id");
-- rollback: DROP INDEX idx_moshi_attachment_moshi_id;

-- changeset angelchang:357
CREATE INDEX IF NOT EXISTS "idx_niigata_dm_message_event_user_id" ON "niigata_dm_message_event"("user_id");
-- rollback: DROP INDEX idx_niigata_dm_message_event_user_id;

-- changeset angelchang:358
CREATE INDEX IF NOT EXISTS "idx_om_conn_diary_id" ON "oral_medicine_connect"("diary_id");
-- rollback: DROP INDEX idx_om_conn_diary_id;

-- changeset angelchang:359
ALTER TABLE "oral_medicine_connect" ADD CONSTRAINT "oral_medicine_connect_ukey" UNIQUE ("user_id", "role", "oral_medicine_id", "diary_id");
-- rollback: ALTER TABLE oral_medicine_connect DROP CONSTRAINT oral_medicine_connect_ukey;

-- changeset angelchang:360
CREATE INDEX IF NOT EXISTS "idx_data_monthly_stats_year_month_care_connect_id" ON "origin_medical_data_monthly_stats"("year", "month", "care_connect_id");
-- rollback: DROP INDEX idx_data_monthly_stats_year_month_care_connect_id;

-- changeset angelchang:361
CREATE INDEX IF NOT EXISTS "idx_data_monthly_stats_year_month_clinic_id_is_pseudo" ON "origin_medical_data_monthly_stats"("year", "month", "clinic_id", "is_pseudo");
-- rollback: DROP INDEX idx_data_monthly_stats_year_month_clinic_id_is_pseudo;

-- changeset angelchang:362
CREATE INDEX IF NOT EXISTS "idx_data_monthly_stats_year_month_clinic_id_user_id_is_pseudo" ON "origin_medical_data_monthly_stats"("year", "month", "clinic_id", "user_id", "is_pseudo");
-- rollback: DROP INDEX idx_data_monthly_stats_year_month_clinic_id_user_id_is_pseudo;

-- changeset angelchang:363
CREATE INDEX IF NOT EXISTS "idx_data_quarterly_stats_year_quarter_care_connect_id" ON "origin_medical_data_quarterly_stats"("year", "quarter", "care_connect_id");
-- rollback: DROP INDEX idx_data_quarterly_stats_year_quarter_care_connect_id;

-- changeset angelchang:364
CREATE INDEX IF NOT EXISTS "idx_data_quarterly_year_quarter_clinic_id_is_pseudo" ON "origin_medical_data_quarterly_stats"("year", "quarter", "clinic_id", "is_pseudo");
-- rollback: DROP INDEX idx_data_quarterly_year_quarter_clinic_id_is_pseudo;

-- changeset angelchang:365
CREATE INDEX IF NOT EXISTS "idx_data_quarterly_year_quarter_clinic_id_user_id_is_pseudo" ON "origin_medical_data_quarterly_stats"("year", "quarter", "clinic_id", "user_id", "is_pseudo");
-- rollback: DROP INDEX idx_data_quarterly_year_quarter_clinic_id_user_id_is_pseudo;

-- changeset angelchang:366
CREATE INDEX IF NOT EXISTS "idx_data_yearly_stats_year_care_connect_id" ON "origin_medical_data_yearly_stats"("year", "care_connect_id");
-- rollback: DROP INDEX idx_data_yearly_stats_year_care_connect_id;

-- changeset angelchang:367
CREATE INDEX IF NOT EXISTS "idx_self_measured_monthly_year_month_user_id" ON "origin_self_measured_monthly_stats"("year", "month", "user_id");
-- rollback: DROP INDEX idx_self_measured_monthly_year_month_user_id;

-- changeset angelchang:368
CREATE INDEX IF NOT EXISTS "idx_self_measured_quarterly_year_quarter_user_id" ON "origin_self_measured_quarterly_stats"("year", "quarter", "user_id");
-- rollback: DROP INDEX idx_self_measured_quarterly_year_quarter_user_id;

-- changeset angelchang:369
ALTER TABLE "partner_nanshan_policy_score" ADD CONSTRAINT "partner_nanshan_policy_score_policy_no_key" UNIQUE ("policy_no");
-- rollback: ALTER TABLE partner_nanshan_policy_score DROP CONSTRAINT partner_nanshan_policy_score_policy_no_key;

-- changeset angelchang:370
ALTER TABLE "partner_quaker_user_info" ADD CONSTRAINT "partner_quaker_user_info_user_id_key" UNIQUE ("user_id");
-- rollback: ALTER TABLE partner_quaker_user_info DROP CONSTRAINT partner_quaker_user_info_user_id_key;

-- changeset angelchang:371
ALTER TABLE "password_reset" ADD CONSTRAINT "password_reset_code_key" UNIQUE ("code");
-- rollback: ALTER TABLE password_reset DROP CONSTRAINT password_reset_code_key;

-- changeset angelchang:372
CREATE INDEX IF NOT EXISTS idx_peer_profile_user_id_enabled ON public.peer_profile USING btree (user_id) WHERE enabled;
-- rollback: DROP INDEX idx_peer_profile_user_id_enabled;

-- changeset angelchang:373
CREATE INDEX IF NOT EXISTS "idx_owner_id" ON "peer_recommend_connect"("owner_id");
-- rollback: DROP INDEX idx_owner_id;

-- changeset angelchang:374
CREATE INDEX IF NOT EXISTS idx_owner_recommended_at ON public.peer_recommend_connect USING btree (owner_id, recommended_at) WHERE (recommended_at IS NOT NULL);
-- rollback: DROP INDEX idx_owner_recommended_at;

-- changeset angelchang:375
CREATE INDEX IF NOT EXISTS "idx_peer_recommend_connect_owner_user_id" ON "peer_recommend_connect"("user_id", "owner_id");
-- rollback: DROP INDEX idx_peer_recommend_connect_owner_user_id;

-- changeset angelchang:376
CREATE INDEX IF NOT EXISTS "idx_peer_recommend_connect_recommended_at" ON "peer_recommend_connect"("recommended_at");
-- rollback: DROP INDEX idx_peer_recommend_connect_recommended_at;

-- changeset angelchang:377
CREATE TABLE IF NOT EXISTS "notification" ("id" INTEGER GENERATED BY DEFAULT AS IDENTITY NOT NULL, "created_at" TIMESTAMP WITHOUT TIME ZONE DEFAULT NOW(), "type" TEXT NOT NULL, "receiver_id" INTEGER NOT NULL, "data" TEXT, "model" TEXT NOT NULL, "model_id" INTEGER, "viewed_at" TIMESTAMP WITHOUT TIME ZONE, CONSTRAINT "notification_pkey" PRIMARY KEY ("id"));
-- rollback: DROP TABLE notification;

-- changeset angelchang:378
CREATE INDEX IF NOT EXISTS "idx_peer_status_user_id" ON "peer_status"("user_id");
-- rollback: DROP INDEX idx_peer_status_user_id;

-- changeset angelchang:379
CREATE INDEX IF NOT EXISTS idx_pm_alert_conn_patient_id ON public.pm_alert USING btree (care_connect_id, patient_id) WHERE (status = 'unread'::text);
-- rollback: DROP INDEX idx_pm_alert_conn_patient_id;

-- changeset angelchang:380
CREATE INDEX IF NOT EXISTS "pm_alert_care_connect_scheduled_at_idx" ON "pm_alert"("care_connect_id", "scheduled_at");
-- rollback: DROP INDEX pm_alert_care_connect_scheduled_at_idx;

-- changeset angelchang:381
CREATE INDEX IF NOT EXISTS "pm_alert_created_at_patient_idx_category" ON "pm_alert"("created_at", "patient_id", "category");
-- rollback: DROP INDEX pm_alert_created_at_patient_idx_category;

-- changeset angelchang:382
CREATE INDEX IF NOT EXISTS "idx_premium_subscriptio_user_id" ON "premium_subscription"("user_id");
-- rollback: DROP INDEX idx_premium_subscriptio_user_id;

-- changeset angelchang:383
ALTER TABLE "pseudo_account_history" ADD CONSTRAINT "pseudo_account_history_user_id_key" UNIQUE ("user_id");
-- rollback: ALTER TABLE pseudo_account_history DROP CONSTRAINT pseudo_account_history_user_id_key;

-- changeset angelchang:384
CREATE INDEX IF NOT EXISTS "idx_report_history_owner_id" ON "report_history"("owner_id");
-- rollback: DROP INDEX idx_report_history_owner_id;

-- changeset angelchang:385
CREATE INDEX IF NOT EXISTS "idx_token" ON "si_access_token"("token");
-- rollback: DROP INDEX idx_token;

-- changeset angelchang:386
CREATE INDEX IF NOT EXISTS "idx_slider_event_user_id_expiration_date" ON "slider_event"("user_id", "expiration_date");
-- rollback: DROP INDEX idx_slider_event_user_id_expiration_date;

-- changeset angelchang:387
CREATE INDEX IF NOT EXISTS "idx_slider_record_user_id_expiration_date" ON "slider_record"("user_id", "expiration_date");
-- rollback: DROP INDEX idx_slider_record_user_id_expiration_date;

-- changeset angelchang:388
CREATE INDEX IF NOT EXISTS "idx_step_created_at_user_id" ON "step"("created_at", "user_id");
-- rollback: DROP INDEX idx_step_created_at_user_id;

-- changeset angelchang:389
CREATE INDEX IF NOT EXISTS "idx_step_start_time" ON "step"("start_time");
-- rollback: DROP INDEX idx_step_start_time;

-- changeset angelchang:390
CREATE INDEX IF NOT EXISTS "idx_step_user_id_start_time_end_time" ON "step"("user_id", "start_time", "end_time");
-- rollback: DROP INDEX idx_step_user_id_start_time_end_time;

-- changeset angelchang:391
CREATE INDEX IF NOT EXISTS "idx_step_user_id_sync_time" ON "step"("user_id", "sync_time");
-- rollback: DROP INDEX idx_step_user_id_sync_time;

-- changeset angelchang:392
CREATE INDEX IF NOT EXISTS "idx_client_id" ON "system_integrator"("client_id");
-- rollback: DROP INDEX idx_client_id;

-- changeset angelchang:393
ALTER TABLE "system_integrator" ADD CONSTRAINT "system_integrator_client_id_key" UNIQUE ("client_id");
-- rollback: ALTER TABLE system_integrator DROP CONSTRAINT system_integrator_client_id_key;

-- changeset angelchang:394
CREATE UNIQUE INDEX IF NOT EXISTS toolbox_answer_campaign_user_form_id_key ON public.toolbox_answer USING btree (moshi_campaign_id, toolbox_form_id, user_id) WHERE (deleted_at IS NULL);
-- rollback: DROP INDEX toolbox_answer_campaign_user_form_id_key;

-- changeset angelchang:395
CREATE UNIQUE INDEX IF NOT EXISTS toolbox_answer_program_user_form_id_key ON public.toolbox_answer USING btree (toolbox_program_id, toolbox_form_id, user_id) WHERE (deleted_at IS NULL);
-- rollback: DROP INDEX toolbox_answer_program_user_form_id_key;

-- changeset angelchang:396
CREATE UNIQUE INDEX IF NOT EXISTS toolbox_attachment_producer_id_filename_deleted_at_null_key ON public.toolbox_attachment USING btree (producer_id, filename) WHERE (deleted_at IS NULL);
-- rollback: DROP INDEX toolbox_attachment_producer_id_filename_deleted_at_null_key;

-- changeset angelchang:397
CREATE UNIQUE INDEX IF NOT EXISTS toolbox_form_producer_id_name_deleted_at_null_key ON public.toolbox_form USING btree (producer_id, name) WHERE (deleted_at IS NULL);
-- rollback: DROP INDEX toolbox_form_producer_id_name_deleted_at_null_key;

-- changeset angelchang:398
CREATE INDEX IF NOT EXISTS idx_toolbox_form_connect_form_id_user_connect_id_status ON public.toolbox_form_connect USING btree (user_id, toolbox_form_id, status) WHERE (deleted_at IS NULL);
-- rollback: DROP INDEX idx_toolbox_form_connect_form_id_user_connect_id_status;

-- changeset angelchang:399
CREATE UNIQUE INDEX IF NOT EXISTS toolbox_form_connect_campaign_user_form_id_key ON public.toolbox_form_connect USING btree (moshi_campaign_id, user_id, toolbox_form_id) WHERE (deleted_at IS NULL);
-- rollback: DROP INDEX toolbox_form_connect_campaign_user_form_id_key;

-- changeset angelchang:400
CREATE UNIQUE INDEX IF NOT EXISTS toolbox_form_connect_program_user_form_id_key ON public.toolbox_form_connect USING btree (toolbox_program_id, user_id, toolbox_form_id) WHERE (deleted_at IS NULL);
-- rollback: DROP INDEX toolbox_form_connect_program_user_form_id_key;

-- changeset angelchang:401
CREATE UNIQUE INDEX IF NOT EXISTS toolbox_message_group_producer_id_name_deleted_at_null_key ON public.toolbox_message_group USING btree (producer_id, name) WHERE (deleted_at IS NULL);
-- rollback: DROP INDEX toolbox_message_group_producer_id_name_deleted_at_null_key;

-- changeset angelchang:402
CREATE INDEX IF NOT EXISTS "toolbox_message_group_connect_toolbox_message_group_id" ON "toolbox_message_group_connect"("toolbox_message_group_id");
-- rollback: DROP INDEX toolbox_message_group_connect_toolbox_message_group_id;

-- changeset angelchang:403
CREATE UNIQUE INDEX IF NOT EXISTS toolbox_message_group_id_seq_deleted_at_null_key ON public.toolbox_message_group_connect USING btree (toolbox_message_group_id, seq) WHERE (deleted_at IS NULL);
-- rollback: DROP INDEX toolbox_message_group_id_seq_deleted_at_null_key;

-- changeset angelchang:404
CREATE UNIQUE INDEX IF NOT EXISTS toolbox_program_producer_id_internal_name_deleted_at_null_key ON public.toolbox_program USING btree (producer_id, name) WHERE (deleted_at IS NULL);
-- rollback: DROP INDEX toolbox_program_producer_id_internal_name_deleted_at_null_key;

-- changeset angelchang:405
CREATE INDEX IF NOT EXISTS "idx_toolbox_program_article_connect_article_user_status" ON "toolbox_program_article_connect"("toolbox_program_user_connect_id", "toolbox_article_id", "status");
-- rollback: DROP INDEX idx_toolbox_program_article_connect_article_user_status;

-- changeset angelchang:406
CREATE INDEX IF NOT EXISTS "idx_toolbox_program_moshi_connect_moshi_status" ON "toolbox_program_moshi_connect"("moshi_id", "status");
-- rollback: DROP INDEX idx_toolbox_program_moshi_connect_moshi_status;

-- changeset angelchang:407
CREATE INDEX IF NOT EXISTS "idx_toolbox_program_user_connect_clinic_sub_user_status" ON "toolbox_program_user_connect"("clinic_subscription_id", "status");
-- rollback: DROP INDEX idx_toolbox_program_user_connect_clinic_sub_user_status;

-- changeset angelchang:408
CREATE INDEX IF NOT EXISTS "idx_toolbox_program_user_connect_user_status" ON "toolbox_program_user_connect"("user_id", "status");
-- rollback: DROP INDEX idx_toolbox_program_user_connect_user_status;

-- changeset angelchang:409
CREATE INDEX IF NOT EXISTS "toolbox_schedule_toolbox_program_id" ON "toolbox_schedule"("toolbox_program_id");
-- rollback: DROP INDEX toolbox_schedule_toolbox_program_id;

-- changeset angelchang:410
CREATE INDEX IF NOT EXISTS "idx_user_a1c_source_id" ON "user_a1c"("source", "source_id");
-- rollback: DROP INDEX idx_user_a1c_source_id;

-- changeset angelchang:411
CREATE INDEX IF NOT EXISTS "idx_user_a1c_user_id_recorded_at" ON "user_a1c"("user_id", "recorded_at");
-- rollback: DROP INDEX idx_user_a1c_user_id_recorded_at;

-- changeset angelchang:412
CREATE INDEX IF NOT EXISTS "idx_user_analysis_user_id" ON "user_analysis"("user_id");
-- rollback: DROP INDEX idx_user_analysis_user_id;

-- changeset angelchang:413
CREATE INDEX IF NOT EXISTS "idx_user_cache_user_id" ON "user_cache"("user_id");
-- rollback: DROP INDEX idx_user_cache_user_id;

-- changeset angelchang:414
CREATE UNIQUE INDEX IF NOT EXISTS user_consent_document_null_clinic_id_unique_key ON user_consent_document (category, (clinic_id IS NULL), language, fingerprint) WHERE clinic_id is NULL;
-- rollback: DROP INDEX user_consent_document_null_clinic_id_unique_key;

-- changeset angelchang:415
ALTER TABLE "user_consent_document" ADD CONSTRAINT "user_consent_document_unique_key" UNIQUE ("category", "clinic_id", "language", "fingerprint");
-- rollback: ALTER TABLE user_consent_document DROP CONSTRAINT user_consent_document_unique_key;

-- changeset angelchang:416
CREATE INDEX IF NOT EXISTS "idx_user_consent_history_user_id_category" ON "user_consent_history"("user_id", "category");
-- rollback: DROP INDEX idx_user_consent_history_user_id_category;

-- changeset angelchang:417
CREATE INDEX IF NOT EXISTS "idx_user_daily_routine_user_id_status" ON "user_daily_routine"("user_id", "status");
-- rollback: DROP INDEX idx_user_daily_routine_user_id_status;

-- changeset angelchang:418
CREATE INDEX IF NOT EXISTS "idx_user_exam_unit_user_id" ON "user_exam_unit"("user_id");
-- rollback: DROP INDEX idx_user_exam_unit_user_id;

-- changeset angelchang:419
CREATE INDEX IF NOT EXISTS idx_user_measurement_plan_active_user_id ON public.user_measurement_plan USING btree (user_id) WHERE (status = 'active'::text);
-- rollback: DROP INDEX idx_user_measurement_plan_active_user_id;

-- changeset angelchang:420
ALTER TABLE "user_meter" ADD CONSTRAINT "user_meter_unique_key" UNIQUE ("user_id", "meter_id", "user_tag_id", "serial_number", "mac_address");
-- rollback: ALTER TABLE user_meter DROP CONSTRAINT user_meter_unique_key;

-- changeset angelchang:421
CREATE INDEX IF NOT EXISTS "idx_unt_user_token_id_v1" ON "user_notification_token"("user_token_id");
-- rollback: DROP INDEX idx_unt_user_token_id_v1;

-- changeset angelchang:422
CREATE INDEX IF NOT EXISTS idx_user_pref_user_id_with_status_active ON public.user_pref USING btree (user_id) WHERE ((status)::text = 'active'::text);
-- rollback: DROP INDEX idx_user_pref_user_id_with_status_active;

-- changeset angelchang:423
CREATE INDEX IF NOT EXISTS idx_created_at_user_id_category_clinic_id ON public.user_stream USING btree (created_at DESC, user_id, category, clinic_id) WHERE (active = true);
-- rollback: DROP INDEX idx_created_at_user_id_category_clinic_id;

-- changeset angelchang:424
CREATE UNIQUE INDEX IF NOT EXISTS "idx_unique_user_stream_source_id_category" ON "user_stream"("source_id", "category");
-- rollback: DROP INDEX idx_unique_user_stream_source_id_category;

-- changeset angelchang:425
CREATE INDEX IF NOT EXISTS idx_user_id_created_at ON public.user_stream USING btree (user_id, created_at DESC) WHERE (active = true);
-- rollback: DROP INDEX idx_user_id_created_at;

-- changeset angelchang:426
CREATE INDEX IF NOT EXISTS idx_user_stream_clinic_id_active ON public.user_stream USING btree (clinic_id) WHERE (active AND (clinic_id IS NOT NULL));
-- rollback: DROP INDEX idx_user_stream_clinic_id_active;

-- changeset angelchang:427
CREATE INDEX IF NOT EXISTS idx_user_stream_user_id_active ON public.user_stream USING btree (user_id) WHERE active;
-- rollback: DROP INDEX idx_user_stream_user_id_active;

-- changeset angelchang:428
CREATE INDEX IF NOT EXISTS "idx_user_token_device_user_id" ON "user_token"("device_id", "user_id");
-- rollback: DROP INDEX idx_user_token_device_user_id;

-- changeset angelchang:429
CREATE INDEX IF NOT EXISTS idx_user_token_idx ON public.user_token USING btree (device_id, access_token) WHERE (is_valid = true);
-- rollback: DROP INDEX idx_user_token_idx;

-- changeset angelchang:430
CREATE INDEX IF NOT EXISTS idx_user_token_user_id ON public.user_token USING btree (user_id) WHERE is_valid;
-- rollback: DROP INDEX idx_user_token_user_id;

-- changeset angelchang:431
CREATE INDEX IF NOT EXISTS "idx_avatar_id" ON "warp_session"("avatar_id");
-- rollback: DROP INDEX idx_avatar_id;

-- changeset angelchang:432
CREATE INDEX IF NOT EXISTS "idx_avatar_id_uid" ON "warp_session"("avatar_id", "uid");
-- rollback: DROP INDEX idx_avatar_id_uid;

-- changeset angelchang:433
CREATE INDEX IF NOT EXISTS "idx_web_log_created_at" ON "web_log"("created_at" DESC);
-- rollback: DROP INDEX idx_web_log_created_at;

-- changeset angelchang:434
CREATE INDEX IF NOT EXISTS "idx_web_log_endpoint_btree" ON "web_log"("endpoint");
-- rollback: DROP INDEX idx_web_log_endpoint_btree;

-- changeset angelchang:435
CREATE INDEX IF NOT EXISTS "idx_web_log_user_id_created_at" ON "web_log"("user_id", "created_at" DESC);
-- rollback: DROP INDEX idx_web_log_user_id_created_at;

-- changeset angelchang:436
CREATE INDEX IF NOT EXISTS "idx_web_session_touched" ON "web_session"("touched");
-- rollback: DROP INDEX idx_web_session_touched;

-- changeset angelchang:437
CREATE INDEX IF NOT EXISTS "idx_web_session_uid" ON "web_session"("uid");
-- rollback: DROP INDEX idx_web_session_uid;

-- changeset angelchang:438
ALTER TABLE "diary_tag_name" ADD CONSTRAINT "diary_tag_name_tag_value_type_key" UNIQUE ("tag_value", "type");
-- rollback: ALTER TABLE diary_tag_name DROP CONSTRAINT diary_tag_name_tag_value_type_key;

-- changeset angelchang:439
ALTER TABLE "country" ADD CONSTRAINT "country_iso_2_key" UNIQUE ("iso_2");
-- rollback: ALTER TABLE country DROP CONSTRAINT country_iso_2_key;

-- changeset angelchang:440
ALTER TABLE "country" ADD CONSTRAINT "country_name_key" UNIQUE ("name");
-- rollback: ALTER TABLE country DROP CONSTRAINT country_name_key;

-- changeset angelchang:441
ALTER TABLE "warp_avatar" ADD CONSTRAINT "warp_avatar_email_key" UNIQUE ("email");
-- rollback: ALTER TABLE warp_avatar DROP CONSTRAINT warp_avatar_email_key;

-- changeset angelchang:442
ALTER TABLE "warp_avatar" ADD CONSTRAINT "warp_avatar_phone_number_key" UNIQUE ("phone_number");
-- rollback: ALTER TABLE warp_avatar DROP CONSTRAINT warp_avatar_phone_number_key;

-- changeset angelchang:443
CREATE INDEX IF NOT EXISTS "idx_notification_created_at" ON "notification"("created_at");
-- rollback: DROP INDEX idx_notification_created_at;

-- changeset angelchang:444
CREATE TABLE IF NOT EXISTS "alembic_version" ("version_num" VARCHAR(32) NOT NULL, CONSTRAINT "alembic_version_pkc" PRIMARY KEY ("version_num"));
-- rollback: DROP TABLE alembic_version;

-- changeset angelchang:445
CREATE TABLE IF NOT EXISTS "awsdms_ddl_audit" ("c_key" BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL, "c_time" TIMESTAMP WITHOUT TIME ZONE, "c_user" VARCHAR(64), "c_txn" VARCHAR(16), "c_tag" VARCHAR(24), "c_oid" INTEGER, "c_name" VARCHAR(64), "c_schema" VARCHAR(64), "c_ddlqry" TEXT, CONSTRAINT "awsdms_ddl_audit_pkey" PRIMARY KEY ("c_key"));
-- rollback: DROP TABLE awsdms_ddl_audit;

-- changeset angelchang:446
CREATE TABLE IF NOT EXISTS "clinic_promotion_profile" ("id" INTEGER GENERATED BY DEFAULT AS IDENTITY NOT NULL, "clinic_id" INTEGER NOT NULL, "area_id" INTEGER, "city_id" INTEGER, "district_id" INTEGER, "address" TEXT, "outpatient_time" TEXT DEFAULT '[]', "phone" TEXT, "registered_url" TEXT, "introduction" TEXT, "lat" numeric, "lon" numeric, "temporary_flag" BOOLEAN DEFAULT TRUE, "usable_flag" BOOLEAN DEFAULT FALSE, "good_clinic_flag" BOOLEAN DEFAULT FALSE, "created_at" TIMESTAMP WITHOUT TIME ZONE DEFAULT NOW(), "updated_at" TIMESTAMP WITHOUT TIME ZONE DEFAULT NOW(), "deleted_at" TIMESTAMP WITHOUT TIME ZONE, "rating_count" INTEGER DEFAULT 0 NOT NULL, "total_rating" INTEGER DEFAULT 0 NOT NULL, "average_rating" numeric DEFAULT 0 NOT NULL, "geog_point" GEOGRAPHY, CONSTRAINT "clinic_promotion_profile_pkey" PRIMARY KEY ("id"));
-- rollback: DROP TABLE clinic_promotion_profile;

-- changeset angelchang:447
CREATE TABLE IF NOT EXISTS "examination_backup" ("id" INTEGER, "created_at" TIMESTAMP WITHOUT TIME ZONE, "updated_at" TIMESTAMP WITHOUT TIME ZONE, "hba1c" numeric, "total_cholesterol" numeric, "ldl_c" numeric, "hdl_c" numeric, "tg" numeric, "creatinine" numeric, "egfr" numeric, "gpt" VARCHAR(128), "urine_acr" numeric, "urine_pcr" numeric, "ckd_stage" TEXT, "alb" numeric, "bun" numeric, "type" TEXT, "diagnosed_at" date, "care_connect_id" INTEGER, "created_by" INTEGER, "fpg" numeric, "ppg" numeric, "got" numeric, "lab_result_id" INTEGER, "units" TEXT);
-- rollback: DROP TABLE examination_backup;

-- changeset angelchang:448
CREATE TABLE IF NOT EXISTS "user_picture" ("id" INTEGER GENERATED BY DEFAULT AS IDENTITY NOT NULL, "url" TEXT, "user_id" INTEGER NOT NULL, CONSTRAINT "user_picture_pkey" PRIMARY KEY ("id"));
-- rollback: DROP TABLE user_picture;

-- changeset angelchang:449
ALTER TABLE "admin_role" ADD CONSTRAINT "admin_role_user_id_fkey" FOREIGN KEY ("user_id") REFERENCES "health_user" ("id") ON UPDATE NO ACTION ON DELETE RESTRICT;
-- rollback: ALTER TABLE admin_role DROP CONSTRAINT admin_role_user_id_fkey;

-- changeset angelchang:450
ALTER TABLE "affiliate_code" ADD CONSTRAINT "affiliate_code_affiliate_id_fkey" FOREIGN KEY ("affiliate_id") REFERENCES "affiliate" ("id") ON UPDATE NO ACTION ON DELETE RESTRICT;
-- rollback: ALTER TABLE affiliate_code DROP CONSTRAINT affiliate_code_affiliate_id_fkey;

-- changeset angelchang:451
ALTER TABLE "affiliate_connect" ADD CONSTRAINT "affiliate_connect_affiliate_code_id_fkey" FOREIGN KEY ("affiliate_code_id") REFERENCES "affiliate_code" ("id") ON UPDATE NO ACTION ON DELETE RESTRICT;
-- rollback: ALTER TABLE affiliate_connect DROP CONSTRAINT affiliate_connect_affiliate_code_id_fkey;

-- changeset angelchang:452
ALTER TABLE "affiliate_connect" ADD CONSTRAINT "affiliate_connect_affiliate_id_fkey" FOREIGN KEY ("affiliate_id") REFERENCES "affiliate" ("id") ON UPDATE NO ACTION ON DELETE RESTRICT;
-- rollback: ALTER TABLE affiliate_connect DROP CONSTRAINT affiliate_connect_affiliate_id_fkey;

-- changeset angelchang:453
ALTER TABLE "affiliate_connect" ADD CONSTRAINT "affiliate_connect_user_id_fkey" FOREIGN KEY ("user_id") REFERENCES "health_user" ("id") ON UPDATE NO ACTION ON DELETE RESTRICT;
-- rollback: ALTER TABLE affiliate_connect DROP CONSTRAINT affiliate_connect_user_id_fkey;

-- changeset angelchang:454
ALTER TABLE "alert_setting" ADD CONSTRAINT "alert_setting_care_connect_id_fkey" FOREIGN KEY ("care_connect_id") REFERENCES "care_connect" ("id") ON UPDATE NO ACTION ON DELETE RESTRICT;
-- rollback: ALTER TABLE alert_setting DROP CONSTRAINT alert_setting_care_connect_id_fkey;

-- changeset angelchang:455
ALTER TABLE "android_device_pattern" ADD CONSTRAINT "android_device_pattern_user_id_fkey" FOREIGN KEY ("user_id") REFERENCES "health_user" ("id") ON UPDATE NO ACTION ON DELETE RESTRICT;
-- rollback: ALTER TABLE android_device_pattern DROP CONSTRAINT android_device_pattern_user_id_fkey;

-- changeset angelchang:456
ALTER TABLE "antz" ADD CONSTRAINT "antz_subscribed_id_fkey" FOREIGN KEY ("subscribed_id") REFERENCES "health_user" ("id") ON UPDATE NO ACTION ON DELETE RESTRICT;
-- rollback: ALTER TABLE antz DROP CONSTRAINT antz_subscribed_id_fkey;

-- changeset angelchang:457
ALTER TABLE "antz" ADD CONSTRAINT "antz_user_id_fkey" FOREIGN KEY ("user_id") REFERENCES "health_user" ("id") ON UPDATE NO ACTION ON DELETE RESTRICT;
-- rollback: ALTER TABLE antz DROP CONSTRAINT antz_user_id_fkey;

-- changeset angelchang:458
ALTER TABLE "app_alert_setting" ADD CONSTRAINT "app_alert_setting_user_id_fkey" FOREIGN KEY ("user_id") REFERENCES "health_user" ("id") ON UPDATE NO ACTION ON DELETE RESTRICT;
-- rollback: ALTER TABLE app_alert_setting DROP CONSTRAINT app_alert_setting_user_id_fkey;

-- changeset angelchang:459
ALTER TABLE "app_log" ADD CONSTRAINT "app_log_user_id_fkey" FOREIGN KEY ("user_id") REFERENCES "health_user" ("id") ON UPDATE NO ACTION ON DELETE RESTRICT;
-- rollback: ALTER TABLE app_log DROP CONSTRAINT app_log_user_id_fkey;

-- changeset angelchang:460
ALTER TABLE "care_connect" ADD CONSTRAINT "care_connect_clinic_code_id_fkey" FOREIGN KEY ("clinic_code_id") REFERENCES "clinic_code" ("id") ON UPDATE NO ACTION ON DELETE RESTRICT;
-- rollback: ALTER TABLE care_connect DROP CONSTRAINT care_connect_clinic_code_id_fkey;

-- changeset angelchang:461
ALTER TABLE "care_connect" ADD CONSTRAINT "care_connect_clinic_id_fkey" FOREIGN KEY ("clinic_id") REFERENCES "clinic" ("id") ON UPDATE NO ACTION ON DELETE RESTRICT;
-- rollback: ALTER TABLE care_connect DROP CONSTRAINT care_connect_clinic_id_fkey;

-- changeset angelchang:462
ALTER TABLE "care_connect" ADD CONSTRAINT "care_connect_educator_id_fkey" FOREIGN KEY ("educator_id") REFERENCES "health_user" ("id") ON UPDATE NO ACTION ON DELETE RESTRICT;
-- rollback: ALTER TABLE care_connect DROP CONSTRAINT care_connect_educator_id_fkey;

-- changeset angelchang:463
ALTER TABLE "care_connect" ADD CONSTRAINT "care_connect_last_viewed_user_id_fkey" FOREIGN KEY ("last_viewed_user_id") REFERENCES "health_user" ("id") ON UPDATE NO ACTION ON DELETE RESTRICT;
-- rollback: ALTER TABLE care_connect DROP CONSTRAINT care_connect_last_viewed_user_id_fkey;

-- changeset angelchang:464
ALTER TABLE "care_connect" ADD CONSTRAINT "care_connect_user_id_fkey" FOREIGN KEY ("user_id") REFERENCES "health_user" ("id") ON UPDATE NO ACTION ON DELETE RESTRICT;
-- rollback: ALTER TABLE care_connect DROP CONSTRAINT care_connect_user_id_fkey;

-- changeset angelchang:465
ALTER TABLE "care_viewed_connect" ADD CONSTRAINT "care_viewed_connect_care_connect_id_fkey" FOREIGN KEY ("care_connect_id") REFERENCES "care_connect" ("id") ON UPDATE NO ACTION ON DELETE RESTRICT;
-- rollback: ALTER TABLE care_viewed_connect DROP CONSTRAINT care_viewed_connect_care_connect_id_fkey;

-- changeset angelchang:466
ALTER TABLE "care_viewed_connect" ADD CONSTRAINT "care_viewed_connect_user_id_fkey" FOREIGN KEY ("user_id") REFERENCES "health_user" ("id") ON UPDATE NO ACTION ON DELETE RESTRICT;
-- rollback: ALTER TABLE care_viewed_connect DROP CONSTRAINT care_viewed_connect_user_id_fkey;

-- changeset angelchang:467
ALTER TABLE "cgm_sync_history" ADD CONSTRAINT "cgm_sync_history_clinic_id_fkey" FOREIGN KEY ("clinic_id") REFERENCES "clinic" ("id") ON UPDATE NO ACTION ON DELETE RESTRICT;
-- rollback: ALTER TABLE cgm_sync_history DROP CONSTRAINT cgm_sync_history_clinic_id_fkey;

-- changeset angelchang:468
ALTER TABLE "cgm_sync_history" ADD CONSTRAINT "cgm_sync_history_updated_by_fkey" FOREIGN KEY ("updated_by") REFERENCES "health_user" ("id") ON UPDATE NO ACTION ON DELETE RESTRICT;
-- rollback: ALTER TABLE cgm_sync_history DROP CONSTRAINT cgm_sync_history_updated_by_fkey;

-- changeset angelchang:469
ALTER TABLE "cgm_sync_history" ADD CONSTRAINT "cgm_sync_history_user_id_fkey" FOREIGN KEY ("user_id") REFERENCES "health_user" ("id") ON UPDATE NO ACTION ON DELETE RESTRICT;
-- rollback: ALTER TABLE cgm_sync_history DROP CONSTRAINT cgm_sync_history_user_id_fkey;

-- changeset angelchang:470
ALTER TABLE "clinic" ADD CONSTRAINT "clinic_account_manager_id_fkey" FOREIGN KEY ("account_manager_id") REFERENCES "health_user" ("id") ON UPDATE NO ACTION ON DELETE RESTRICT;
-- rollback: ALTER TABLE clinic DROP CONSTRAINT clinic_account_manager_id_fkey;

-- changeset angelchang:471
ALTER TABLE "clinic_chart" ADD CONSTRAINT "clinic_chart_care_connect_id_fkey" FOREIGN KEY ("care_connect_id") REFERENCES "care_connect" ("id") ON UPDATE NO ACTION ON DELETE RESTRICT;
-- rollback: ALTER TABLE clinic_chart DROP CONSTRAINT clinic_chart_care_connect_id_fkey;

-- changeset angelchang:472
ALTER TABLE "clinic_chart" ADD CONSTRAINT "clinic_chart_clinic_id_fkey" FOREIGN KEY ("clinic_id") REFERENCES "clinic" ("id") ON UPDATE NO ACTION ON DELETE RESTRICT;
-- rollback: ALTER TABLE clinic_chart DROP CONSTRAINT clinic_chart_clinic_id_fkey;

-- changeset angelchang:473
ALTER TABLE "clinic_chart" ADD CONSTRAINT "clinic_chart_created_by_fkey" FOREIGN KEY ("created_by") REFERENCES "health_user" ("id") ON UPDATE NO ACTION ON DELETE RESTRICT;
-- rollback: ALTER TABLE clinic_chart DROP CONSTRAINT clinic_chart_created_by_fkey;

-- changeset angelchang:474
ALTER TABLE "clinic_chart" ADD CONSTRAINT "clinic_chart_user_id_fkey" FOREIGN KEY ("user_id") REFERENCES "health_user" ("id") ON UPDATE NO ACTION ON DELETE RESTRICT;
-- rollback: ALTER TABLE clinic_chart DROP CONSTRAINT clinic_chart_user_id_fkey;

-- changeset angelchang:475
ALTER TABLE "clinic_code" ADD CONSTRAINT "clinic_code_care_connect_id_fkey" FOREIGN KEY ("care_connect_id") REFERENCES "care_connect" ("id") ON UPDATE NO ACTION ON DELETE RESTRICT;
-- rollback: ALTER TABLE clinic_code DROP CONSTRAINT clinic_code_care_connect_id_fkey;

-- changeset angelchang:476
ALTER TABLE "clinic_code" ADD CONSTRAINT "clinic_code_clinic_id_fkey" FOREIGN KEY ("clinic_id") REFERENCES "clinic" ("id") ON UPDATE NO ACTION ON DELETE RESTRICT;
-- rollback: ALTER TABLE clinic_code DROP CONSTRAINT clinic_code_clinic_id_fkey;

-- changeset angelchang:477
ALTER TABLE "clinic_config" ADD CONSTRAINT "clinic_config_clinic_id_fkey" FOREIGN KEY ("clinic_id") REFERENCES "clinic" ("id") ON UPDATE NO ACTION ON DELETE RESTRICT;
-- rollback: ALTER TABLE clinic_config DROP CONSTRAINT clinic_config_clinic_id_fkey;

-- changeset angelchang:478
ALTER TABLE "clinic" ADD CONSTRAINT "clinic_country_id_fkey" FOREIGN KEY ("country_id") REFERENCES "country" ("id") ON UPDATE NO ACTION ON DELETE RESTRICT;
-- rollback: ALTER TABLE clinic DROP CONSTRAINT clinic_country_id_fkey;

-- changeset angelchang:479
ALTER TABLE "clinic_daily_comment" ADD CONSTRAINT "clinic_daily_comment_clinic_id_fkey" FOREIGN KEY ("clinic_id") REFERENCES "clinic" ("id") ON UPDATE NO ACTION ON DELETE RESTRICT;
-- rollback: ALTER TABLE clinic_daily_comment DROP CONSTRAINT clinic_daily_comment_clinic_id_fkey;

-- changeset angelchang:480
ALTER TABLE "clinic_daily_comment" ADD CONSTRAINT "clinic_daily_comment_created_by_fkey" FOREIGN KEY ("created_by") REFERENCES "health_user" ("id") ON UPDATE NO ACTION ON DELETE RESTRICT;
-- rollback: ALTER TABLE clinic_daily_comment DROP CONSTRAINT clinic_daily_comment_created_by_fkey;

-- changeset angelchang:481
ALTER TABLE "clinic_daily_comment" ADD CONSTRAINT "clinic_daily_comment_user_id_fkey" FOREIGN KEY ("user_id") REFERENCES "health_user" ("id") ON UPDATE NO ACTION ON DELETE RESTRICT;
-- rollback: ALTER TABLE clinic_daily_comment DROP CONSTRAINT clinic_daily_comment_user_id_fkey;

-- changeset angelchang:482
ALTER TABLE "clinic_discount" ADD CONSTRAINT "clinic_discount_clinic_id_fkey" FOREIGN KEY ("clinic_id") REFERENCES "clinic" ("id") ON UPDATE NO ACTION ON DELETE RESTRICT;
-- rollback: ALTER TABLE clinic_discount DROP CONSTRAINT clinic_discount_clinic_id_fkey;

-- changeset angelchang:483
ALTER TABLE "clinic_discount_code" ADD CONSTRAINT "clinic_discount_code_discount_id_fkey" FOREIGN KEY ("discount_id") REFERENCES "clinic_discount" ("id") ON UPDATE NO ACTION ON DELETE RESTRICT;
-- rollback: ALTER TABLE clinic_discount_code DROP CONSTRAINT clinic_discount_code_discount_id_fkey;

-- changeset angelchang:484
ALTER TABLE "clinic_discount_code" ADD CONSTRAINT "clinic_discount_code_subscription_id_fkey" FOREIGN KEY ("subscription_id") REFERENCES "clinic_subscription" ("id") ON UPDATE NO ACTION ON DELETE RESTRICT;
-- rollback: ALTER TABLE clinic_discount_code DROP CONSTRAINT clinic_discount_code_subscription_id_fkey;

-- changeset angelchang:485
ALTER TABLE "clinic_discount_code" ADD CONSTRAINT "clinic_discount_code_user_id_fkey" FOREIGN KEY ("user_id") REFERENCES "health_user" ("id") ON UPDATE NO ACTION ON DELETE RESTRICT;
-- rollback: ALTER TABLE clinic_discount_code DROP CONSTRAINT clinic_discount_code_user_id_fkey;

-- changeset angelchang:486
ALTER TABLE "clinic_discount" ADD CONSTRAINT "clinic_discount_plan_id_fkey" FOREIGN KEY ("plan_id") REFERENCES "clinic_plan" ("id") ON UPDATE NO ACTION ON DELETE RESTRICT;
-- rollback: ALTER TABLE clinic_discount DROP CONSTRAINT clinic_discount_plan_id_fkey;

-- changeset angelchang:487
ALTER TABLE "clinic_exam_chart" ADD CONSTRAINT "clinic_exam_chart_clinic_id_fkey" FOREIGN KEY ("clinic_id") REFERENCES "clinic" ("id") ON UPDATE NO ACTION ON DELETE CASCADE;
-- rollback: ALTER TABLE clinic_exam_chart DROP CONSTRAINT clinic_exam_chart_clinic_id_fkey;

-- changeset angelchang:488
ALTER TABLE "clinic_exam_unit" ADD CONSTRAINT "clinic_exam_unit_clinic_id_fkey" FOREIGN KEY ("clinic_id") REFERENCES "clinic" ("id") ON UPDATE NO ACTION ON DELETE CASCADE;
-- rollback: ALTER TABLE clinic_exam_unit DROP CONSTRAINT clinic_exam_unit_clinic_id_fkey;

-- changeset angelchang:489
ALTER TABLE "clinic_feature" ADD CONSTRAINT "clinic_feature_clinic_id_fkey" FOREIGN KEY ("clinic_id") REFERENCES "clinic" ("id") ON UPDATE NO ACTION ON DELETE RESTRICT;
-- rollback: ALTER TABLE clinic_feature DROP CONSTRAINT clinic_feature_clinic_id_fkey;

-- changeset angelchang:490
ALTER TABLE "clinic_group" ADD CONSTRAINT "clinic_group_clinic_id_fkey" FOREIGN KEY ("clinic_id") REFERENCES "clinic" ("id") ON UPDATE NO ACTION ON DELETE RESTRICT;
-- rollback: ALTER TABLE clinic_group DROP CONSTRAINT clinic_group_clinic_id_fkey;

-- changeset angelchang:491
ALTER TABLE "clinic_group_connect" ADD CONSTRAINT "clinic_group_connect_clinic_group_id_fkey" FOREIGN KEY ("clinic_group_id") REFERENCES "clinic_group" ("id") ON UPDATE NO ACTION ON DELETE RESTRICT;
-- rollback: ALTER TABLE clinic_group_connect DROP CONSTRAINT clinic_group_connect_clinic_group_id_fkey;

-- changeset angelchang:492
ALTER TABLE "clinic_group_connect" ADD CONSTRAINT "clinic_group_connect_user_id_fkey" FOREIGN KEY ("user_id") REFERENCES "health_user" ("id") ON UPDATE NO ACTION ON DELETE RESTRICT;
-- rollback: ALTER TABLE clinic_group_connect DROP CONSTRAINT clinic_group_connect_user_id_fkey;

-- changeset angelchang:493
ALTER TABLE "clinic_loyalty_rule" ADD CONSTRAINT "clinic_loyalty_rule_clinic_id_fkey" FOREIGN KEY ("clinic_id") REFERENCES "clinic" ("id") ON UPDATE NO ACTION ON DELETE RESTRICT;
-- rollback: ALTER TABLE clinic_loyalty_rule DROP CONSTRAINT clinic_loyalty_rule_clinic_id_fkey;

-- changeset angelchang:494
ALTER TABLE "clinic_loyalty_transaction" ADD CONSTRAINT "clinic_loyalty_transaction_care_connect_id_fkey" FOREIGN KEY ("care_connect_id") REFERENCES "care_connect" ("id") ON UPDATE NO ACTION ON DELETE RESTRICT;
-- rollback: ALTER TABLE clinic_loyalty_transaction DROP CONSTRAINT clinic_loyalty_transaction_care_connect_id_fkey;

-- changeset angelchang:495
ALTER TABLE "clinic_loyalty_transaction" ADD CONSTRAINT "clinic_loyalty_transaction_clinic_id_fkey" FOREIGN KEY ("clinic_id") REFERENCES "clinic" ("id") ON UPDATE NO ACTION ON DELETE RESTRICT;
-- rollback: ALTER TABLE clinic_loyalty_transaction DROP CONSTRAINT clinic_loyalty_transaction_clinic_id_fkey;
-- changeset angelchang:246
CREATE INDEX IF NOT EXISTS "idx_api_log_app_version_idx" ON "api_log"("app_version");
-- rollback: DROP INDEX idx_api_log_app_version_idx;

-- changeset angelchang:247
CREATE INDEX IF NOT EXISTS "idx_api_log_created_at" ON "api_log"("created_at" DESC);
-- rollback: DROP INDEX idx_api_log_created_at;

-- changeset angelchang:248
CREATE INDEX IF NOT EXISTS "idx_api_log_endpoint_idx" ON "api_log"("endpoint");
-- rollback: DROP INDEX idx_api_log_endpoint_idx;

-- changeset angelchang:249
CREATE INDEX IF NOT EXISTS "idx_app_log_created_at" ON "app_log"("created_at");
-- rollback: DROP INDEX idx_app_log_created_at;

-- changeset angelchang:250
ALTER TABLE "auth_apple" ADD CONSTRAINT "auth_apple_user_identifier_key" UNIQUE ("user_identifier");
-- rollback: ALTER TABLE auth_apple DROP CONSTRAINT auth_apple_user_identifier_key;

-- changeset angelchang:251
CREATE INDEX IF NOT EXISTS "idx_care_connect_clinic_id_role_status" ON "care_connect"("clinic_id", "role", "status");
-- rollback: DROP INDEX idx_care_connect_clinic_id_role_status;

-- changeset angelchang:252
CREATE INDEX IF NOT EXISTS idx_care_connect_role_user_id ON public.care_connect USING btree (role, user_id) WHERE (status = 'active'::text);
-- rollback: DROP INDEX idx_care_connect_role_user_id;

-- changeset angelchang:253
CREATE INDEX IF NOT EXISTS idx_care_connect_user_clinic_role ON public.care_connect USING btree (user_id, clinic_id, role) WHERE (status = 'active'::text);
-- rollback: DROP INDEX idx_care_connect_user_clinic_role;

-- changeset angelchang:254
CREATE INDEX IF NOT EXISTS idx_cvc_care_connect_id_user_stream_id ON public.care_viewed_connect USING btree (care_connect_id, user_stream_id) WHERE (NOT active);
-- rollback: DROP INDEX idx_cvc_care_connect_id_user_stream_id;

-- changeset angelchang:255
CREATE INDEX IF NOT EXISTS "idx_cvc_ids" ON "care_viewed_connect"("user_id", "care_connect_id", "user_stream_id");
-- rollback: DROP INDEX idx_cvc_ids;

-- changeset angelchang:256
CREATE INDEX IF NOT EXISTS idx_cvc_section ON public.care_viewed_connect USING btree (section) WHERE (active = true);
-- rollback: DROP INDEX idx_cvc_section;

-- changeset angelchang:257
CREATE INDEX IF NOT EXISTS "idx_cvc_section_user_stream_id" ON "care_viewed_connect"("section", "user_stream_id");
-- rollback: DROP INDEX idx_cvc_section_user_stream_id;

-- changeset angelchang:258
CREATE INDEX IF NOT EXISTS "idx_user_stream_id" ON "care_viewed_connect"("user_stream_id");
-- rollback: DROP INDEX idx_user_stream_id;

-- changeset angelchang:259
CREATE TYPE bgunit AS enum ('mg_dl', 'mmol_l');
CREATE TABLE IF NOT EXISTS "cgm_config" ("id" INTEGER GENERATED BY DEFAULT AS IDENTITY NOT NULL, "created_at" TIMESTAMP WITH TIME ZONE, "deleted_at" TIMESTAMP WITH TIME ZONE, "updated_at" TIMESTAMP WITH TIME ZONE, "user_id" INTEGER NOT NULL, "carer_id" INTEGER NOT NULL, "upper_range" FLOAT8, "lower_range" FLOAT8, "unit" BGUNIT, CONSTRAINT "cgm_config_pkey" PRIMARY KEY ("id"));
-- rollback: DROP TABLE cgm_config;

-- changeset angelchang:260
CREATE INDEX IF NOT EXISTS idx_active_clinic_chart ON public.clinic_chart USING btree (care_connect_id, status) WHERE (status = 'active'::text);
-- rollback: DROP INDEX idx_active_clinic_chart;

-- changeset angelchang:261
CREATE INDEX IF NOT EXISTS "idx_clinic_chart_clinic_id_user_id" ON "clinic_chart"("clinic_id", "user_id");
-- rollback: DROP INDEX idx_clinic_chart_clinic_id_user_id;

-- changeset angelchang:262
CREATE TABLE IF NOT EXISTS "oral_medicine" ("id" INTEGER GENERATED BY DEFAULT AS IDENTITY NOT NULL, "created_at" TIMESTAMP WITHOUT TIME ZONE DEFAULT NOW(), "updated_at" TIMESTAMP WITHOUT TIME ZONE DEFAULT NOW(), "name" TEXT NOT NULL, "uid" INTEGER DEFAULT 0 NOT NULL, "languages" VARCHAR DEFAULT '[]' NOT NULL, "deprecated" BOOLEAN DEFAULT FALSE, CONSTRAINT "oral_medicine_pkey" PRIMARY KEY ("id"));
-- rollback: DROP TABLE oral_medicine;

-- changeset angelchang:263
CREATE INDEX IF NOT EXISTS "idx_clinic_monthly_year_month_is_pseudo_included_country" ON "clinic_default_analytics_monthly_stats"("year", "month", "is_pseudo_included", "country_iso_2");
-- rollback: DROP INDEX idx_clinic_monthly_year_month_is_pseudo_included_country;

-- changeset angelchang:264
CREATE INDEX IF NOT EXISTS "idx_clinic_quarterly_year_quarter_is_pseudo_included_country" ON "clinic_default_analytics_quarterly_stats"("year", "quarter", "is_pseudo_included", "country_iso_2");
-- rollback: DROP INDEX idx_clinic_quarterly_year_quarter_is_pseudo_included_country;

-- changeset angelchang:265
CREATE INDEX IF NOT EXISTS "idx_clinic_yearly_year_is_pseudo_included_country" ON "clinic_default_analytics_yearly_stats"("year", "is_pseudo_included", "country_iso_2");
-- rollback: DROP INDEX idx_clinic_yearly_year_is_pseudo_included_country;

-- changeset angelchang:266
ALTER TABLE "clinic_discount_code" ADD CONSTRAINT "clinic_discount_code_code_key" UNIQUE ("code");
-- rollback: ALTER TABLE clinic_discount_code DROP CONSTRAINT clinic_discount_code_code_key;

-- changeset angelchang:267
CREATE INDEX IF NOT EXISTS "idx_clinic_exam_chart_clinic_id" ON "clinic_exam_chart"("clinic_id");
-- rollback: DROP INDEX idx_clinic_exam_chart_clinic_id;

-- changeset angelchang:268
CREATE INDEX IF NOT EXISTS "idx_clinic_exam_unit_clinic_id" ON "clinic_exam_unit"("clinic_id");
-- rollback: DROP INDEX idx_clinic_exam_unit_clinic_id;

-- changeset angelchang:269
ALTER TABLE "clinic_group_connect" ADD CONSTRAINT "clinic_group_connect_unique_key" UNIQUE ("user_id", "clinic_group_id");
-- rollback: ALTER TABLE clinic_group_connect DROP CONSTRAINT clinic_group_connect_unique_key;

-- changeset angelchang:270
CREATE INDEX IF NOT EXISTS "idx_clinic_loyalty_transaction_clinic_id_user_id" ON "clinic_loyalty_transaction"("clinic_id", "user_id");
-- rollback: DROP INDEX idx_clinic_loyalty_transaction_clinic_id_user_id;

-- changeset angelchang:271
CREATE INDEX IF NOT EXISTS "idx_clinic_loyalty_transaction_diary_id" ON "clinic_loyalty_transaction"("diary_id");
-- rollback: DROP INDEX idx_clinic_loyalty_transaction_diary_id;

-- changeset angelchang:272
CREATE INDEX IF NOT EXISTS "idx_clinic_id_deleted_at_pm_display_name" ON "clinic_medicine"("clinic_id", "deleted_at", "pm_display_name");
-- rollback: DROP INDEX idx_clinic_id_deleted_at_pm_display_name;

-- changeset angelchang:273
CREATE INDEX IF NOT EXISTS "idx_clinic_notification_setting_clinic_id_user_id" ON "clinic_notification_setting"("clinic_id", "user_id");
-- rollback: DROP INDEX idx_clinic_notification_setting_clinic_id_user_id;

-- changeset angelchang:274
CREATE INDEX IF NOT EXISTS "idx_clinic_prescription_clinic_id_user_id" ON "clinic_prescription"("clinic_id", "user_id");
-- rollback: DROP INDEX idx_clinic_prescription_clinic_id_user_id;

-- changeset angelchang:275
CREATE INDEX IF NOT EXISTS "idx_clinic_prescription_clinic_id_user_id_start_date_deleted_at" ON "clinic_prescription"("clinic_id", "user_id", "start_date", "deleted_at");
-- rollback: DROP INDEX idx_clinic_prescription_clinic_id_user_id_start_date_deleted_at;

-- changeset angelchang:276
CREATE INDEX IF NOT EXISTS "idx_clinic_prescription_parent_clinic_prescription_id" ON "clinic_prescription"("parent_clinic_prescription_id");
-- rollback: DROP INDEX idx_clinic_prescription_parent_clinic_prescription_id;

-- changeset angelchang:277
CREATE INDEX IF NOT EXISTS idx_clinic_reminder_cache ON public.clinic_reminder USING btree (clinic_id) WHERE (((status)::text = 'active'::text) AND ((category)::text = 'cache'::text));
-- rollback: DROP INDEX idx_clinic_reminder_cache;

-- changeset angelchang:278
CREATE INDEX IF NOT EXISTS "idx_clinic_reminder_examine_at_user_clinic_v2" ON "clinic_reminder"("user_id", "clinic_id", "examine_at");
-- rollback: DROP INDEX idx_clinic_reminder_examine_at_user_clinic_v2;

-- changeset angelchang:279
CREATE TABLE IF NOT EXISTS "feedback" ("id" INTEGER GENERATED BY DEFAULT AS IDENTITY NOT NULL, "created_at" TIMESTAMP WITHOUT TIME ZONE DEFAULT NOW(), "type" VARCHAR NOT NULL, "values" TEXT DEFAULT '{}' NOT NULL, "user_id" INTEGER NOT NULL, CONSTRAINT "feedback_pkey" PRIMARY KEY ("id"));
-- rollback: DROP TABLE feedback;

-- changeset angelchang:280
CREATE INDEX IF NOT EXISTS idx_clinic_subscription_clinic_id_user_id_with_status_active ON public.clinic_subscription USING btree (clinic_id, user_id) WHERE (status = 'active'::text);
-- rollback: DROP INDEX idx_clinic_subscription_clinic_id_user_id_with_status_active;

-- changeset angelchang:281
ALTER TABLE "collaboration_content" ADD CONSTRAINT "collaboration_content_clinic_id_key" UNIQUE ("clinic_id");
-- rollback: ALTER TABLE collaboration_content DROP CONSTRAINT collaboration_content_clinic_id_key;

-- changeset angelchang:282
CREATE INDEX IF NOT EXISTS "idx_custom_diary_tag_user_id_type" ON "custom_diary_tag"("user_id", "type");
-- rollback: DROP INDEX idx_custom_diary_tag_user_id_type;

-- changeset angelchang:283
CREATE INDEX IF NOT EXISTS "idx_custom_medicine_user_id" ON "custom_medicine"("user_id");
-- rollback: DROP INDEX idx_custom_medicine_user_id;

-- changeset angelchang:284
CREATE INDEX IF NOT EXISTS "idx_daily_step_user_id_recorded_date" ON "daily_step"("user_id", "recorded_date");
-- rollback: DROP INDEX idx_daily_step_user_id_recorded_date;

-- changeset angelchang:285
CREATE UNIQUE INDEX IF NOT EXISTS "idx_unique_dashboard_cache_user_id_ctype" ON "dashboard_cache"("user_id", "ctype");
-- rollback: DROP INDEX idx_unique_dashboard_cache_user_id_ctype;

-- changeset angelchang:286
ALTER TABLE "dashboard_setting" ADD CONSTRAINT "dashboard_setting_care_connect_id_unique_key" UNIQUE ("care_connect_id");
-- rollback: ALTER TABLE dashboard_setting DROP CONSTRAINT dashboard_setting_care_connect_id_unique_key;

-- changeset angelchang:287
ALTER TABLE "dashboard_status" ADD CONSTRAINT "dashboard_status_user_id_care_connect_id_ukey" UNIQUE ("user_id", "care_connect_id");
-- rollback: ALTER TABLE dashboard_status DROP CONSTRAINT dashboard_status_user_id_care_connect_id_ukey;

-- changeset angelchang:288
CREATE INDEX IF NOT EXISTS "diary_user_id_recorded_at_idx" ON "diary"("user_id", "recorded_at");
-- rollback: DROP INDEX diary_user_id_recorded_at_idx;

-- changeset angelchang:289
CREATE INDEX IF NOT EXISTS "idx_diary_batch_uuid" ON "diary"("batch_uuid");
-- rollback: DROP INDEX idx_diary_batch_uuid;

-- changeset angelchang:290
CREATE INDEX IF NOT EXISTS "idx_diary_created_at" ON "diary"("created_at" DESC);
-- rollback: DROP INDEX idx_diary_created_at;

-- changeset angelchang:291
CREATE INDEX IF NOT EXISTS "idx_diary_glucose_value_in_mg_dl" ON "diary"("glucose_value_in_mg_dl");
-- rollback: DROP INDEX idx_diary_glucose_value_in_mg_dl;

-- changeset angelchang:292
CREATE INDEX IF NOT EXISTS "idx_diary_glucose_value_user_id" ON "diary"("glucose_value", "user_id");
-- rollback: DROP INDEX idx_diary_glucose_value_user_id;

-- changeset angelchang:293
CREATE INDEX IF NOT EXISTS "idx_diary_recorded_created_at" ON "diary"("recorded_at", "created_at");
-- rollback: DROP INDEX idx_diary_recorded_created_at;

-- changeset angelchang:294
CREATE INDEX IF NOT EXISTS "idx_diary_setting_id" ON "diary"("setting_id");
-- rollback: DROP INDEX idx_diary_setting_id;

-- changeset angelchang:295
CREATE INDEX IF NOT EXISTS "idx_diary_updated_at" ON "diary"("updated_at");
-- rollback: DROP INDEX idx_diary_updated_at;

-- changeset angelchang:296
CREATE INDEX IF NOT EXISTS "idx_diary_user_id_created_at_idx" ON "diary"("user_id", "created_at" DESC);
-- rollback: DROP INDEX idx_diary_user_id_created_at_idx;

-- changeset angelchang:297
CREATE INDEX IF NOT EXISTS "idx_diary_user_id_glucose_recorded_at" ON "diary"("user_id", "glucose_value", "recorded_at");
-- rollback: DROP INDEX idx_diary_user_id_glucose_recorded_at;

-- changeset angelchang:298
CREATE INDEX IF NOT EXISTS "idx_diary_user_id_glucose_value_in_mg_dl_recorded_at" ON "diary"("user_id", "glucose_value_in_mg_dl", "recorded_at");
-- rollback: DROP INDEX idx_diary_user_id_glucose_value_in_mg_dl_recorded_at;

-- changeset angelchang:299
CREATE INDEX IF NOT EXISTS "idx_diary_user_id_systolic_recorded_at" ON "diary"("user_id", "systolic", "recorded_at");
-- rollback: DROP INDEX idx_diary_user_id_systolic_recorded_at;

-- changeset angelchang:300
CREATE INDEX IF NOT EXISTS "idx_diary_user_id_updated_at" ON "diary"("user_id", "updated_at");
-- rollback: DROP INDEX idx_diary_user_id_updated_at;

-- changeset angelchang:301
CREATE INDEX IF NOT EXISTS "idx_diary_user_id_weight_recorded_at" ON "diary"("user_id", "weight", "recorded_at");
-- rollback: DROP INDEX idx_diary_user_id_weight_recorded_at;

-- changeset angelchang:302
CREATE INDEX IF NOT EXISTS "idx_diary_attachment_diary_id" ON "diary_attachment"("diary_id");
-- rollback: DROP INDEX idx_diary_attachment_diary_id;

-- changeset angelchang:303
ALTER TABLE "diary_batch_record" ADD CONSTRAINT "diary_batch_record_batch_uuid_key" UNIQUE ("batch_uuid");
-- rollback: ALTER TABLE diary_batch_record DROP CONSTRAINT diary_batch_record_batch_uuid_key;

-- changeset angelchang:304
CREATE INDEX IF NOT EXISTS idx_diary_logged_cache_user_id_recorded_date ON public.diary_logged_data_cache USING btree (user_id, recorded_date) WHERE (deleted_at IS NULL);
-- rollback: DROP INDEX idx_diary_logged_cache_user_id_recorded_date;

-- changeset angelchang:305
CREATE INDEX IF NOT EXISTS "diary_tag_diary_id_type" ON "diary_tag"("diary_id", "type");
-- rollback: DROP INDEX diary_tag_diary_id_type;

-- changeset angelchang:306
CREATE INDEX IF NOT EXISTS "idx_email_reminder_event_user_id" ON "email_reminder_event"("user_id");
-- rollback: DROP INDEX idx_email_reminder_event_user_id;

-- changeset angelchang:307
CREATE INDEX IF NOT EXISTS "idx_institution_patient_date" ON "emr_record"("medical_institution_code", "patient_chart_number", "date");
-- rollback: DROP INDEX idx_institution_patient_date;

-- changeset angelchang:308
CREATE INDEX IF NOT EXISTS "idx_examination_care_connect_id_source_id_diagnosed_at" ON "examination"("care_connect_id", "source_id", "diagnosed_at");
-- rollback: DROP INDEX idx_examination_care_connect_id_source_id_diagnosed_at;

-- changeset angelchang:309
CREATE INDEX IF NOT EXISTS "idx_examination_clinic_id_user_id_diagnosed_at" ON "examination"("clinic_id", "user_id", "diagnosed_at");
-- rollback: DROP INDEX idx_examination_clinic_id_user_id_diagnosed_at;

-- changeset angelchang:310
CREATE UNIQUE INDEX IF NOT EXISTS "name_ukey" ON "feature_toggle"("name");
-- rollback: DROP INDEX name_ukey;

-- changeset angelchang:311
CREATE INDEX IF NOT EXISTS "idx_food_database_source_id" ON "food_database"("source_id");
-- rollback: DROP INDEX idx_food_database_source_id;

-- changeset angelchang:312
CREATE INDEX IF NOT EXISTS "idx_food_db_user_id" ON "food_database"("user_id");
-- rollback: DROP INDEX idx_food_db_user_id;

-- changeset angelchang:313
CREATE INDEX IF NOT EXISTS "food_database_connect_diary_id_idx" ON "food_database_connect"("diary_id");
-- rollback: DROP INDEX food_database_connect_diary_id_idx;

-- changeset angelchang:314
CREATE INDEX IF NOT EXISTS "idx_food_db_connect_user_id" ON "food_database_connect"("user_id");
-- rollback: DROP INDEX idx_food_db_connect_user_id;

-- changeset angelchang:315
ALTER TABLE "food_database_favorited" ADD CONSTRAINT "user_food_database_favorite_unique_key" UNIQUE ("user_id", "food_database_id");
-- rollback: ALTER TABLE food_database_favorited DROP CONSTRAINT user_food_database_favorite_unique_key;

-- changeset angelchang:316
ALTER TABLE "friend_notification_setting" ADD CONSTRAINT "friend_notification_setting_from_id_to_id_key" UNIQUE ("from_id", "to_id");
-- rollback: ALTER TABLE friend_notification_setting DROP CONSTRAINT friend_notification_setting_from_id_to_id_key;

-- changeset angelchang:317
CREATE INDEX IF NOT EXISTS "idx_friends_from_id" ON "friends"("from_id");
-- rollback: DROP INDEX idx_friends_from_id;

-- changeset angelchang:318
CREATE INDEX IF NOT EXISTS "idx_friends_to_id" ON "friends"("to_id");
-- rollback: DROP INDEX idx_friends_to_id;

-- changeset angelchang:319
ALTER TABLE "friends" ADD CONSTRAINT "friends_from_id_to_id_key" UNIQUE ("from_id", "to_id");
-- rollback: ALTER TABLE friends DROP CONSTRAINT friends_from_id_to_id_key;

-- changeset angelchang:320
CREATE INDEX IF NOT EXISTS "idx_user_identity" ON "fubon_insurance_promotion"("user_identity");
-- rollback: DROP INDEX idx_user_identity;

-- changeset angelchang:321
CREATE TABLE IF NOT EXISTS "email_verify" ("id" INTEGER GENERATED BY DEFAULT AS IDENTITY NOT NULL, "created_at" TIMESTAMP WITHOUT TIME ZONE DEFAULT NOW(), "updated_at" TIMESTAMP WITHOUT TIME ZONE DEFAULT NOW(), "email" TEXT NOT NULL, "code" TEXT NOT NULL, "user_id" INTEGER NOT NULL, "status" TEXT NOT NULL, CONSTRAINT "email_verify_pkey" PRIMARY KEY ("id"));
-- rollback: DROP TABLE email_verify;

-- changeset angelchang:322
CREATE INDEX IF NOT EXISTS "idx_health_user_avatar_id" ON "health_user"("avatar_id");
-- rollback: DROP INDEX idx_health_user_avatar_id;

-- changeset angelchang:323
CREATE INDEX IF NOT EXISTS "idx_health_user_created_at_country" ON "health_user"("created_at", "country");
-- rollback: DROP INDEX idx_health_user_created_at_country;

-- changeset angelchang:324
CREATE INDEX IF NOT EXISTS "idx_health_user_identity" ON "health_user"("identity");
-- rollback: DROP INDEX idx_health_user_identity;

-- changeset angelchang:325
CREATE INDEX IF NOT EXISTS "idx_health_user_tester_pseudo_status" ON "health_user"("is_tester", "is_pseudo", "status");
-- rollback: DROP INDEX idx_health_user_tester_pseudo_status;

-- changeset angelchang:326
ALTER TABLE "health_user" ADD CONSTRAINT "health_user_email_key" UNIQUE ("email");
-- rollback: ALTER TABLE health_user DROP CONSTRAINT health_user_email_key;

-- changeset angelchang:327
CREATE INDEX IF NOT EXISTS "idx_heartbeat_user_id_sync_time" ON "heartbeat"("user_id", "sync_time");
-- rollback: DROP INDEX idx_heartbeat_user_id_sync_time;

-- changeset angelchang:328
CREATE INDEX IF NOT EXISTS "idx_hl_cgm_1m_message_event_user_id" ON "hl_cgm_1m_message_event"("user_id");
-- rollback: DROP INDEX idx_hl_cgm_1m_message_event_user_id;

-- changeset angelchang:329
CREATE INDEX IF NOT EXISTS "idx_hl_cgm_1m_v2_message_event_user_id" ON "hl_cgm_1m_v2_message_event"("user_id");
-- rollback: DROP INDEX idx_hl_cgm_1m_v2_message_event_user_id;

-- changeset angelchang:330
CREATE INDEX IF NOT EXISTS "idx_hl_cgm_2m_message_event_user_id" ON "hl_cgm_2m_message_event"("user_id");
-- rollback: DROP INDEX idx_hl_cgm_2m_message_event_user_id;

-- changeset angelchang:331
CREATE INDEX IF NOT EXISTS "idx_hl_cgm_3m_message_event_user_id" ON "hl_cgm_3m_message_event"("user_id");
-- rollback: DROP INDEX idx_hl_cgm_3m_message_event_user_id;

-- changeset angelchang:332
CREATE INDEX IF NOT EXISTS "idx_hl_cgm_message_event_user_id" ON "hl_cgm_message_event"("user_id");
-- rollback: DROP INDEX idx_hl_cgm_message_event_user_id;

-- changeset angelchang:333
CREATE INDEX IF NOT EXISTS "idx_hl_cgm_policyholder_message_event_user_id" ON "hl_cgm_policyholder_message_event"("user_id");
-- rollback: DROP INDEX idx_hl_cgm_policyholder_message_event_user_id;

-- changeset angelchang:334
CREATE INDEX IF NOT EXISTS "idx_hourly_steps_created_at" ON "hourly_steps"("created_at");
-- rollback: DROP INDEX idx_hourly_steps_created_at;

-- changeset angelchang:335
CREATE INDEX IF NOT EXISTS "idx_hourly_steps_recorded_at" ON "hourly_steps"("recorded_at");
-- rollback: DROP INDEX idx_hourly_steps_recorded_at;

-- changeset angelchang:336
CREATE UNIQUE INDEX IF NOT EXISTS "idx_step_user_id_recorded_at_source" ON "hourly_steps"("user_id", "recorded_at", "source");
-- rollback: DROP INDEX idx_step_user_id_recorded_at_source;

-- changeset angelchang:337
CREATE INDEX IF NOT EXISTS "idx_insulin_conn_diary_ids" ON "insulin_connect"("diary_id");
-- rollback: DROP INDEX idx_insulin_conn_diary_ids;

-- changeset angelchang:338
ALTER TABLE "insulin_connect" ADD CONSTRAINT "insulin_connect_ukey" UNIQUE ("user_id", "role", "insulin_id", "diary_id");
-- rollback: ALTER TABLE insulin_connect DROP CONSTRAINT insulin_connect_ukey;

-- changeset angelchang:339
CREATE INDEX IF NOT EXISTS "idx_interactive_form_created_at_status" ON "interactive_form"("created_at" DESC, "status");
-- rollback: DROP INDEX idx_interactive_form_created_at_status;

-- changeset angelchang:340
CREATE INDEX IF NOT EXISTS "idx_interactive_form_connect_ifid_status" ON "interactive_form_connect"("interactive_form_id", "status");
-- rollback: DROP INDEX idx_interactive_form_connect_ifid_status;

-- changeset angelchang:341
CREATE INDEX IF NOT EXISTS "idx_interactive_form_connect_send_to" ON "interactive_form_connect"("send_to");
-- rollback: DROP INDEX idx_interactive_form_connect_send_to;

-- changeset angelchang:342
CREATE INDEX IF NOT EXISTS "idx_interactive_form_connect_status" ON "interactive_form_connect"("status");
-- rollback: DROP INDEX idx_interactive_form_connect_status;

-- changeset angelchang:343
CREATE INDEX IF NOT EXISTS "idx_invitation_invitee_id" ON "invitation"("invitee_id");
-- rollback: DROP INDEX idx_invitation_invitee_id;

-- changeset angelchang:344
CREATE UNIQUE INDEX IF NOT EXISTS unique_unused_invite_code ON public.invitation USING btree (invite_code) WHERE (invite_code IS NOT NULL);
-- rollback: DROP INDEX unique_unused_invite_code;

-- changeset angelchang:345
CREATE INDEX IF NOT EXISTS idx_lab_result_identify ON public.lab_result USING btree (identify) WHERE (NOT exported);
-- rollback: DROP INDEX idx_lab_result_identify;

-- changeset angelchang:346
ALTER TABLE "libreview_subscription_plan" ADD CONSTRAINT "libreview_subscription_plan_product_id_key" UNIQUE ("product_id");
-- rollback: ALTER TABLE libreview_subscription_plan DROP CONSTRAINT libreview_subscription_plan_product_id_key;

-- changeset angelchang:347
CREATE UNIQUE INDEX IF NOT EXISTS "unique_medicine_reminder_user_id_medicine_type_uid" ON "medicine_reminder"("user_id", "medicine_type", "uid");
-- rollback: DROP INDEX unique_medicine_reminder_user_id_medicine_type_uid;

-- changeset angelchang:348
ALTER TABLE "meter" ADD CONSTRAINT "meter_brand_model_unique_key" UNIQUE ("brand", "model");
-- rollback: ALTER TABLE meter DROP CONSTRAINT meter_brand_model_unique_key;

-- changeset angelchang:349
ALTER TABLE "meter" ADD CONSTRAINT "meter_refer_number_unique_key" UNIQUE ("refer_number");
-- rollback: ALTER TABLE meter DROP CONSTRAINT meter_refer_number_unique_key;

-- changeset angelchang:350
CREATE INDEX IF NOT EXISTS idx_moshi_campaign_id ON public.moshi USING btree (moshi_campaign_id, status) WHERE (moshi_campaign_id IS NOT NULL);
-- rollback: DROP INDEX idx_moshi_campaign_id;

-- changeset angelchang:351
CREATE INDEX IF NOT EXISTS "idx_moshi_clinic_receiver_status_created_at_sender" ON "moshi"("clinic_id", "receiver_id", "status", "created_at" DESC, "sender_id");
-- rollback: DROP INDEX idx_moshi_clinic_receiver_status_created_at_sender;

-- changeset angelchang:352
CREATE INDEX IF NOT EXISTS idx_moshi_receiver_created_at_status ON public.moshi USING btree (receiver_id, created_at DESC) WHERE (status <> ALL (ARRAY['deleted'::text, 'archived'::text]));
-- rollback: DROP INDEX idx_moshi_receiver_created_at_status;

-- changeset angelchang:353
CREATE INDEX IF NOT EXISTS "idx_moshi_receiver_sender_status" ON "moshi"("receiver_id", "sender_id", "status");
-- rollback: DROP INDEX idx_moshi_receiver_sender_status;

-- changeset angelchang:354
CREATE INDEX IF NOT EXISTS "idx_moshi_sender_created_at" ON "moshi"("created_at", "sender_id");
-- rollback: DROP INDEX idx_moshi_sender_created_at;

-- changeset angelchang:355
CREATE INDEX IF NOT EXISTS "idx_moshi_sender_receiver_clinic_created_at_status" ON "moshi"("sender_id", "receiver_id", "clinic_id", "status", "created_at");
-- rollback: DROP INDEX idx_moshi_sender_receiver_clinic_created_at_status;

-- changeset angelchang:356
CREATE INDEX IF NOT EXISTS "idx_moshi_attachment_moshi_id" ON "moshi_attachment"("moshi_id");
-- rollback: DROP INDEX idx_moshi_attachment_moshi_id;

-- changeset angelchang:357
CREATE INDEX IF NOT EXISTS "idx_niigata_dm_message_event_user_id" ON "niigata_dm_message_event"("user_id");
-- rollback: DROP INDEX idx_niigata_dm_message_event_user_id;

-- changeset angelchang:358
CREATE INDEX IF NOT EXISTS "idx_om_conn_diary_id" ON "oral_medicine_connect"("diary_id");
-- rollback: DROP INDEX idx_om_conn_diary_id;

-- changeset angelchang:359
ALTER TABLE "oral_medicine_connect" ADD CONSTRAINT "oral_medicine_connect_ukey" UNIQUE ("user_id", "role", "oral_medicine_id", "diary_id");
-- rollback: ALTER TABLE oral_medicine_connect DROP CONSTRAINT oral_medicine_connect_ukey;

-- changeset angelchang:360
CREATE INDEX IF NOT EXISTS "idx_data_monthly_stats_year_month_care_connect_id" ON "origin_medical_data_monthly_stats"("year", "month", "care_connect_id");
-- rollback: DROP INDEX idx_data_monthly_stats_year_month_care_connect_id;

-- changeset angelchang:361
CREATE INDEX IF NOT EXISTS "idx_data_monthly_stats_year_month_clinic_id_is_pseudo" ON "origin_medical_data_monthly_stats"("year", "month", "clinic_id", "is_pseudo");
-- rollback: DROP INDEX idx_data_monthly_stats_year_month_clinic_id_is_pseudo;

-- changeset angelchang:362
CREATE INDEX IF NOT EXISTS "idx_data_monthly_stats_year_month_clinic_id_user_id_is_pseudo" ON "origin_medical_data_monthly_stats"("year", "month", "clinic_id", "user_id", "is_pseudo");
-- rollback: DROP INDEX idx_data_monthly_stats_year_month_clinic_id_user_id_is_pseudo;

-- changeset angelchang:363
CREATE INDEX IF NOT EXISTS "idx_data_quarterly_stats_year_quarter_care_connect_id" ON "origin_medical_data_quarterly_stats"("year", "quarter", "care_connect_id");
-- rollback: DROP INDEX idx_data_quarterly_stats_year_quarter_care_connect_id;

-- changeset angelchang:364
CREATE INDEX IF NOT EXISTS "idx_data_quarterly_year_quarter_clinic_id_is_pseudo" ON "origin_medical_data_quarterly_stats"("year", "quarter", "clinic_id", "is_pseudo");
-- rollback: DROP INDEX idx_data_quarterly_year_quarter_clinic_id_is_pseudo;

-- changeset angelchang:365
CREATE INDEX IF NOT EXISTS "idx_data_quarterly_year_quarter_clinic_id_user_id_is_pseudo" ON "origin_medical_data_quarterly_stats"("year", "quarter", "clinic_id", "user_id", "is_pseudo");
-- rollback: DROP INDEX idx_data_quarterly_year_quarter_clinic_id_user_id_is_pseudo;

-- changeset angelchang:366
CREATE INDEX IF NOT EXISTS "idx_data_yearly_stats_year_care_connect_id" ON "origin_medical_data_yearly_stats"("year", "care_connect_id");
-- rollback: DROP INDEX idx_data_yearly_stats_year_care_connect_id;

-- changeset angelchang:367
CREATE INDEX IF NOT EXISTS "idx_self_measured_monthly_year_month_user_id" ON "origin_self_measured_monthly_stats"("year", "month", "user_id");
-- rollback: DROP INDEX idx_self_measured_monthly_year_month_user_id;

-- changeset angelchang:368
CREATE INDEX IF NOT EXISTS "idx_self_measured_quarterly_year_quarter_user_id" ON "origin_self_measured_quarterly_stats"("year", "quarter", "user_id");
-- rollback: DROP INDEX idx_self_measured_quarterly_year_quarter_user_id;

-- changeset angelchang:369
ALTER TABLE "partner_nanshan_policy_score" ADD CONSTRAINT "partner_nanshan_policy_score_policy_no_key" UNIQUE ("policy_no");
-- rollback: ALTER TABLE partner_nanshan_policy_score DROP CONSTRAINT partner_nanshan_policy_score_policy_no_key;

-- changeset angelchang:370
ALTER TABLE "partner_quaker_user_info" ADD CONSTRAINT "partner_quaker_user_info_user_id_key" UNIQUE ("user_id");
-- rollback: ALTER TABLE partner_quaker_user_info DROP CONSTRAINT partner_quaker_user_info_user_id_key;

-- changeset angelchang:371
ALTER TABLE "password_reset" ADD CONSTRAINT "password_reset_code_key" UNIQUE ("code");
-- rollback: ALTER TABLE password_reset DROP CONSTRAINT password_reset_code_key;

-- changeset angelchang:372
CREATE INDEX IF NOT EXISTS idx_peer_profile_user_id_enabled ON public.peer_profile USING btree (user_id) WHERE enabled;
-- rollback: DROP INDEX idx_peer_profile_user_id_enabled;

-- changeset angelchang:373
CREATE INDEX IF NOT EXISTS "idx_owner_id" ON "peer_recommend_connect"("owner_id");
-- rollback: DROP INDEX idx_owner_id;

-- changeset angelchang:374
CREATE INDEX IF NOT EXISTS idx_owner_recommended_at ON public.peer_recommend_connect USING btree (owner_id, recommended_at) WHERE (recommended_at IS NOT NULL);
-- rollback: DROP INDEX idx_owner_recommended_at;

-- changeset angelchang:375
CREATE INDEX IF NOT EXISTS "idx_peer_recommend_connect_owner_user_id" ON "peer_recommend_connect"("user_id", "owner_id");
-- rollback: DROP INDEX idx_peer_recommend_connect_owner_user_id;

-- changeset angelchang:376
CREATE INDEX IF NOT EXISTS "idx_peer_recommend_connect_recommended_at" ON "peer_recommend_connect"("recommended_at");
-- rollback: DROP INDEX idx_peer_recommend_connect_recommended_at;

-- changeset angelchang:377
CREATE TABLE IF NOT EXISTS "notification" ("id" INTEGER GENERATED BY DEFAULT AS IDENTITY NOT NULL, "created_at" TIMESTAMP WITHOUT TIME ZONE DEFAULT NOW(), "type" TEXT NOT NULL, "receiver_id" INTEGER NOT NULL, "data" TEXT, "model" TEXT NOT NULL, "model_id" INTEGER, "viewed_at" TIMESTAMP WITHOUT TIME ZONE, CONSTRAINT "notification_pkey" PRIMARY KEY ("id"));
-- rollback: DROP TABLE notification;

-- changeset angelchang:378
CREATE INDEX IF NOT EXISTS "idx_peer_status_user_id" ON "peer_status"("user_id");
-- rollback: DROP INDEX idx_peer_status_user_id;

-- changeset angelchang:379
CREATE INDEX IF NOT EXISTS idx_pm_alert_conn_patient_id ON public.pm_alert USING btree (care_connect_id, patient_id) WHERE (status = 'unread'::text);
-- rollback: DROP INDEX idx_pm_alert_conn_patient_id;

-- changeset angelchang:380
CREATE INDEX IF NOT EXISTS "pm_alert_care_connect_scheduled_at_idx" ON "pm_alert"("care_connect_id", "scheduled_at");
-- rollback: DROP INDEX pm_alert_care_connect_scheduled_at_idx;

-- changeset angelchang:381
CREATE INDEX IF NOT EXISTS "pm_alert_created_at_patient_idx_category" ON "pm_alert"("created_at", "patient_id", "category");
-- rollback: DROP INDEX pm_alert_created_at_patient_idx_category;

-- changeset angelchang:382
CREATE INDEX IF NOT EXISTS "idx_premium_subscriptio_user_id" ON "premium_subscription"("user_id");
-- rollback: DROP INDEX idx_premium_subscriptio_user_id;

-- changeset angelchang:383
ALTER TABLE "pseudo_account_history" ADD CONSTRAINT "pseudo_account_history_user_id_key" UNIQUE ("user_id");
-- rollback: ALTER TABLE pseudo_account_history DROP CONSTRAINT pseudo_account_history_user_id_key;

-- changeset angelchang:384
CREATE INDEX IF NOT EXISTS "idx_report_history_owner_id" ON "report_history"("owner_id");
-- rollback: DROP INDEX idx_report_history_owner_id;

-- changeset angelchang:385
CREATE INDEX IF NOT EXISTS "idx_token" ON "si_access_token"("token");
-- rollback: DROP INDEX idx_token;

-- changeset angelchang:386
CREATE INDEX IF NOT EXISTS "idx_slider_event_user_id_expiration_date" ON "slider_event"("user_id", "expiration_date");
-- rollback: DROP INDEX idx_slider_event_user_id_expiration_date;

-- changeset angelchang:387
CREATE INDEX IF NOT EXISTS "idx_slider_record_user_id_expiration_date" ON "slider_record"("user_id", "expiration_date");
-- rollback: DROP INDEX idx_slider_record_user_id_expiration_date;

-- changeset angelchang:388
CREATE INDEX IF NOT EXISTS "idx_step_created_at_user_id" ON "step"("created_at", "user_id");
-- rollback: DROP INDEX idx_step_created_at_user_id;

-- changeset angelchang:389
CREATE INDEX IF NOT EXISTS "idx_step_start_time" ON "step"("start_time");
-- rollback: DROP INDEX idx_step_start_time;

-- changeset angelchang:390
CREATE INDEX IF NOT EXISTS "idx_step_user_id_start_time_end_time" ON "step"("user_id", "start_time", "end_time");
-- rollback: DROP INDEX idx_step_user_id_start_time_end_time;

-- changeset angelchang:391
CREATE INDEX IF NOT EXISTS "idx_step_user_id_sync_time" ON "step"("user_id", "sync_time");
-- rollback: DROP INDEX idx_step_user_id_sync_time;

-- changeset angelchang:392
CREATE INDEX IF NOT EXISTS "idx_client_id" ON "system_integrator"("client_id");
-- rollback: DROP INDEX idx_client_id;

-- changeset angelchang:393
ALTER TABLE "system_integrator" ADD CONSTRAINT "system_integrator_client_id_key" UNIQUE ("client_id");
-- rollback: ALTER TABLE system_integrator DROP CONSTRAINT system_integrator_client_id_key;

-- changeset angelchang:394
CREATE UNIQUE INDEX IF NOT EXISTS toolbox_answer_campaign_user_form_id_key ON public.toolbox_answer USING btree (moshi_campaign_id, toolbox_form_id, user_id) WHERE (deleted_at IS NULL);
-- rollback: DROP INDEX toolbox_answer_campaign_user_form_id_key;

-- changeset angelchang:395
CREATE UNIQUE INDEX IF NOT EXISTS toolbox_answer_program_user_form_id_key ON public.toolbox_answer USING btree (toolbox_program_id, toolbox_form_id, user_id) WHERE (deleted_at IS NULL);
-- rollback: DROP INDEX toolbox_answer_program_user_form_id_key;

-- changeset angelchang:396
CREATE UNIQUE INDEX IF NOT EXISTS toolbox_attachment_producer_id_filename_deleted_at_null_key ON public.toolbox_attachment USING btree (producer_id, filename) WHERE (deleted_at IS NULL);
-- rollback: DROP INDEX toolbox_attachment_producer_id_filename_deleted_at_null_key;

-- changeset angelchang:397
CREATE UNIQUE INDEX IF NOT EXISTS toolbox_form_producer_id_name_deleted_at_null_key ON public.toolbox_form USING btree (producer_id, name) WHERE (deleted_at IS NULL);
-- rollback: DROP INDEX toolbox_form_producer_id_name_deleted_at_null_key;

-- changeset angelchang:398
CREATE INDEX IF NOT EXISTS idx_toolbox_form_connect_form_id_user_connect_id_status ON public.toolbox_form_connect USING btree (user_id, toolbox_form_id, status) WHERE (deleted_at IS NULL);
-- rollback: DROP INDEX idx_toolbox_form_connect_form_id_user_connect_id_status;

-- changeset angelchang:399
CREATE UNIQUE INDEX IF NOT EXISTS toolbox_form_connect_campaign_user_form_id_key ON public.toolbox_form_connect USING btree (moshi_campaign_id, user_id, toolbox_form_id) WHERE (deleted_at IS NULL);
-- rollback: DROP INDEX toolbox_form_connect_campaign_user_form_id_key;

-- changeset angelchang:400
CREATE UNIQUE INDEX IF NOT EXISTS toolbox_form_connect_program_user_form_id_key ON public.toolbox_form_connect USING btree (toolbox_program_id, user_id, toolbox_form_id) WHERE (deleted_at IS NULL);
-- rollback: DROP INDEX toolbox_form_connect_program_user_form_id_key;

-- changeset angelchang:401
CREATE UNIQUE INDEX IF NOT EXISTS toolbox_message_group_producer_id_name_deleted_at_null_key ON public.toolbox_message_group USING btree (producer_id, name) WHERE (deleted_at IS NULL);
-- rollback: DROP INDEX toolbox_message_group_producer_id_name_deleted_at_null_key;

-- changeset angelchang:402
CREATE INDEX IF NOT EXISTS "toolbox_message_group_connect_toolbox_message_group_id" ON "toolbox_message_group_connect"("toolbox_message_group_id");
-- rollback: DROP INDEX toolbox_message_group_connect_toolbox_message_group_id;

-- changeset angelchang:403
CREATE UNIQUE INDEX IF NOT EXISTS toolbox_message_group_id_seq_deleted_at_null_key ON public.toolbox_message_group_connect USING btree (toolbox_message_group_id, seq) WHERE (deleted_at IS NULL);
-- rollback: DROP INDEX toolbox_message_group_id_seq_deleted_at_null_key;

-- changeset angelchang:404
CREATE UNIQUE INDEX IF NOT EXISTS toolbox_program_producer_id_internal_name_deleted_at_null_key ON public.toolbox_program USING btree (producer_id, name) WHERE (deleted_at IS NULL);
-- rollback: DROP INDEX toolbox_program_producer_id_internal_name_deleted_at_null_key;

-- changeset angelchang:405
CREATE INDEX IF NOT EXISTS "idx_toolbox_program_article_connect_article_user_status" ON "toolbox_program_article_connect"("toolbox_program_user_connect_id", "toolbox_article_id", "status");
-- rollback: DROP INDEX idx_toolbox_program_article_connect_article_user_status;

-- changeset angelchang:406
CREATE INDEX IF NOT EXISTS "idx_toolbox_program_moshi_connect_moshi_status" ON "toolbox_program_moshi_connect"("moshi_id", "status");
-- rollback: DROP INDEX idx_toolbox_program_moshi_connect_moshi_status;

-- changeset angelchang:407
CREATE INDEX IF NOT EXISTS "idx_toolbox_program_user_connect_clinic_sub_user_status" ON "toolbox_program_user_connect"("clinic_subscription_id", "status");
-- rollback: DROP INDEX idx_toolbox_program_user_connect_clinic_sub_user_status;

-- changeset angelchang:408
CREATE INDEX IF NOT EXISTS "idx_toolbox_program_user_connect_user_status" ON "toolbox_program_user_connect"("user_id", "status");
-- rollback: DROP INDEX idx_toolbox_program_user_connect_user_status;

-- changeset angelchang:409
CREATE INDEX IF NOT EXISTS "toolbox_schedule_toolbox_program_id" ON "toolbox_schedule"("toolbox_program_id");
-- rollback: DROP INDEX toolbox_schedule_toolbox_program_id;

-- changeset angelchang:410
CREATE INDEX IF NOT EXISTS "idx_user_a1c_source_id" ON "user_a1c"("source", "source_id");
-- rollback: DROP INDEX idx_user_a1c_source_id;

-- changeset angelchang:411
CREATE INDEX IF NOT EXISTS "idx_user_a1c_user_id_recorded_at" ON "user_a1c"("user_id", "recorded_at");
-- rollback: DROP INDEX idx_user_a1c_user_id_recorded_at;

-- changeset angelchang:412
CREATE INDEX IF NOT EXISTS "idx_user_analysis_user_id" ON "user_analysis"("user_id");
-- rollback: DROP INDEX idx_user_analysis_user_id;

-- changeset angelchang:413
CREATE INDEX IF NOT EXISTS "idx_user_cache_user_id" ON "user_cache"("user_id");
-- rollback: DROP INDEX idx_user_cache_user_id;

-- changeset angelchang:414
CREATE UNIQUE INDEX IF NOT EXISTS user_consent_document_null_clinic_id_unique_key ON user_consent_document (category, (clinic_id IS NULL), language, fingerprint) WHERE clinic_id is NULL;
-- rollback: DROP INDEX user_consent_document_null_clinic_id_unique_key;

-- changeset angelchang:415
ALTER TABLE "user_consent_document" ADD CONSTRAINT "user_consent_document_unique_key" UNIQUE ("category", "clinic_id", "language", "fingerprint");
-- rollback: ALTER TABLE user_consent_document DROP CONSTRAINT user_consent_document_unique_key;

-- changeset angelchang:416
CREATE INDEX IF NOT EXISTS "idx_user_consent_history_user_id_category" ON "user_consent_history"("user_id", "category");
-- rollback: DROP INDEX idx_user_consent_history_user_id_category;

-- changeset angelchang:417
CREATE INDEX IF NOT EXISTS "idx_user_daily_routine_user_id_status" ON "user_daily_routine"("user_id", "status");
-- rollback: DROP INDEX idx_user_daily_routine_user_id_status;

-- changeset angelchang:418
CREATE INDEX IF NOT EXISTS "idx_user_exam_unit_user_id" ON "user_exam_unit"("user_id");
-- rollback: DROP INDEX idx_user_exam_unit_user_id;

-- changeset angelchang:419
CREATE INDEX IF NOT EXISTS idx_user_measurement_plan_active_user_id ON public.user_measurement_plan USING btree (user_id) WHERE (status = 'active'::text);
-- rollback: DROP INDEX idx_user_measurement_plan_active_user_id;

-- changeset angelchang:420
ALTER TABLE "user_meter" ADD CONSTRAINT "user_meter_unique_key" UNIQUE ("user_id", "meter_id", "user_tag_id", "serial_number", "mac_address");
-- rollback: ALTER TABLE user_meter DROP CONSTRAINT user_meter_unique_key;

-- changeset angelchang:421
CREATE INDEX IF NOT EXISTS "idx_unt_user_token_id_v1" ON "user_notification_token"("user_token_id");
-- rollback: DROP INDEX idx_unt_user_token_id_v1;

-- changeset angelchang:422
CREATE INDEX IF NOT EXISTS idx_user_pref_user_id_with_status_active ON public.user_pref USING btree (user_id) WHERE ((status)::text = 'active'::text);
-- rollback: DROP INDEX idx_user_pref_user_id_with_status_active;

-- changeset angelchang:423
CREATE INDEX IF NOT EXISTS idx_created_at_user_id_category_clinic_id ON public.user_stream USING btree (created_at DESC, user_id, category, clinic_id) WHERE (active = true);
-- rollback: DROP INDEX idx_created_at_user_id_category_clinic_id;

-- changeset angelchang:424
CREATE UNIQUE INDEX IF NOT EXISTS "idx_unique_user_stream_source_id_category" ON "user_stream"("source_id", "category");
-- rollback: DROP INDEX idx_unique_user_stream_source_id_category;

-- changeset angelchang:425
CREATE INDEX IF NOT EXISTS idx_user_id_created_at ON public.user_stream USING btree (user_id, created_at DESC) WHERE (active = true);
-- rollback: DROP INDEX idx_user_id_created_at;

-- changeset angelchang:426
CREATE INDEX IF NOT EXISTS idx_user_stream_clinic_id_active ON public.user_stream USING btree (clinic_id) WHERE (active AND (clinic_id IS NOT NULL));
-- rollback: DROP INDEX idx_user_stream_clinic_id_active;

-- changeset angelchang:427
CREATE INDEX IF NOT EXISTS idx_user_stream_user_id_active ON public.user_stream USING btree (user_id) WHERE active;
-- rollback: DROP INDEX idx_user_stream_user_id_active;

-- changeset angelchang:428
CREATE INDEX IF NOT EXISTS "idx_user_token_device_user_id" ON "user_token"("device_id", "user_id");
-- rollback: DROP INDEX idx_user_token_device_user_id;

-- changeset angelchang:429
CREATE INDEX IF NOT EXISTS idx_user_token_idx ON public.user_token USING btree (device_id, access_token) WHERE (is_valid = true);
-- rollback: DROP INDEX idx_user_token_idx;

-- changeset angelchang:430
CREATE INDEX IF NOT EXISTS idx_user_token_user_id ON public.user_token USING btree (user_id) WHERE is_valid;
-- rollback: DROP INDEX idx_user_token_user_id;

-- changeset angelchang:431
CREATE INDEX IF NOT EXISTS "idx_avatar_id" ON "warp_session"("avatar_id");
-- rollback: DROP INDEX idx_avatar_id;

-- changeset angelchang:432
CREATE INDEX IF NOT EXISTS "idx_avatar_id_uid" ON "warp_session"("avatar_id", "uid");
-- rollback: DROP INDEX idx_avatar_id_uid;

-- changeset angelchang:433
CREATE INDEX IF NOT EXISTS "idx_web_log_created_at" ON "web_log"("created_at" DESC);
-- rollback: DROP INDEX idx_web_log_created_at;

-- changeset angelchang:434
CREATE INDEX IF NOT EXISTS "idx_web_log_endpoint_btree" ON "web_log"("endpoint");
-- rollback: DROP INDEX idx_web_log_endpoint_btree;

-- changeset angelchang:435
CREATE INDEX IF NOT EXISTS "idx_web_log_user_id_created_at" ON "web_log"("user_id", "created_at" DESC);
-- rollback: DROP INDEX idx_web_log_user_id_created_at;

-- changeset angelchang:436
CREATE INDEX IF NOT EXISTS "idx_web_session_touched" ON "web_session"("touched");
-- rollback: DROP INDEX idx_web_session_touched;

-- changeset angelchang:437
CREATE INDEX IF NOT EXISTS "idx_web_session_uid" ON "web_session"("uid");
-- rollback: DROP INDEX idx_web_session_uid;

-- changeset angelchang:438
ALTER TABLE "diary_tag_name" ADD CONSTRAINT "diary_tag_name_tag_value_type_key" UNIQUE ("tag_value", "type");
-- rollback: ALTER TABLE diary_tag_name DROP CONSTRAINT diary_tag_name_tag_value_type_key;

-- changeset angelchang:439
ALTER TABLE "country" ADD CONSTRAINT "country_iso_2_key" UNIQUE ("iso_2");
-- rollback: ALTER TABLE country DROP CONSTRAINT country_iso_2_key;

-- changeset angelchang:440
ALTER TABLE "country" ADD CONSTRAINT "country_name_key" UNIQUE ("name");
-- rollback: ALTER TABLE country DROP CONSTRAINT country_name_key;

-- changeset angelchang:441
ALTER TABLE "warp_avatar" ADD CONSTRAINT "warp_avatar_email_key" UNIQUE ("email");
-- rollback: ALTER TABLE warp_avatar DROP CONSTRAINT warp_avatar_email_key;

-- changeset angelchang:442
ALTER TABLE "warp_avatar" ADD CONSTRAINT "warp_avatar_phone_number_key" UNIQUE ("phone_number");
-- rollback: ALTER TABLE warp_avatar DROP CONSTRAINT warp_avatar_phone_number_key;

-- changeset angelchang:443
CREATE INDEX IF NOT EXISTS "idx_notification_created_at" ON "notification"("created_at");
-- rollback: DROP INDEX idx_notification_created_at;

-- changeset angelchang:444
CREATE TABLE IF NOT EXISTS "alembic_version" ("version_num" VARCHAR(32) NOT NULL, CONSTRAINT "alembic_version_pkc" PRIMARY KEY ("version_num"));
-- rollback: DROP TABLE alembic_version;

-- changeset angelchang:445
CREATE TABLE IF NOT EXISTS "awsdms_ddl_audit" ("c_key" BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL, "c_time" TIMESTAMP WITHOUT TIME ZONE, "c_user" VARCHAR(64), "c_txn" VARCHAR(16), "c_tag" VARCHAR(24), "c_oid" INTEGER, "c_name" VARCHAR(64), "c_schema" VARCHAR(64), "c_ddlqry" TEXT, CONSTRAINT "awsdms_ddl_audit_pkey" PRIMARY KEY ("c_key"));
-- rollback: DROP TABLE awsdms_ddl_audit;

-- changeset angelchang:446
CREATE TABLE IF NOT EXISTS "clinic_promotion_profile" ("id" INTEGER GENERATED BY DEFAULT AS IDENTITY NOT NULL, "clinic_id" INTEGER NOT NULL, "area_id" INTEGER, "city_id" INTEGER, "district_id" INTEGER, "address" TEXT, "outpatient_time" TEXT DEFAULT '[]', "phone" TEXT, "registered_url" TEXT, "introduction" TEXT, "lat" numeric, "lon" numeric, "temporary_flag" BOOLEAN DEFAULT TRUE, "usable_flag" BOOLEAN DEFAULT FALSE, "good_clinic_flag" BOOLEAN DEFAULT FALSE, "created_at" TIMESTAMP WITHOUT TIME ZONE DEFAULT NOW(), "updated_at" TIMESTAMP WITHOUT TIME ZONE DEFAULT NOW(), "deleted_at" TIMESTAMP WITHOUT TIME ZONE, "rating_count" INTEGER DEFAULT 0 NOT NULL, "total_rating" INTEGER DEFAULT 0 NOT NULL, "average_rating" numeric DEFAULT 0 NOT NULL, "geog_point" GEOGRAPHY, CONSTRAINT "clinic_promotion_profile_pkey" PRIMARY KEY ("id"));
-- rollback: DROP TABLE clinic_promotion_profile;

-- changeset angelchang:447
CREATE TABLE IF NOT EXISTS "examination_backup" ("id" INTEGER, "created_at" TIMESTAMP WITHOUT TIME ZONE, "updated_at" TIMESTAMP WITHOUT TIME ZONE, "hba1c" numeric, "total_cholesterol" numeric, "ldl_c" numeric, "hdl_c" numeric, "tg" numeric, "creatinine" numeric, "egfr" numeric, "gpt" VARCHAR(128), "urine_acr" numeric, "urine_pcr" numeric, "ckd_stage" TEXT, "alb" numeric, "bun" numeric, "type" TEXT, "diagnosed_at" date, "care_connect_id" INTEGER, "created_by" INTEGER, "fpg" numeric, "ppg" numeric, "got" numeric, "lab_result_id" INTEGER, "units" TEXT);
-- rollback: DROP TABLE examination_backup;

-- changeset angelchang:448
CREATE TABLE IF NOT EXISTS "user_picture" ("id" INTEGER GENERATED BY DEFAULT AS IDENTITY NOT NULL, "url" TEXT, "user_id" INTEGER NOT NULL, CONSTRAINT "user_picture_pkey" PRIMARY KEY ("id"));
-- rollback: DROP TABLE user_picture;

-- changeset angelchang:449
ALTER TABLE "admin_role" ADD CONSTRAINT "admin_role_user_id_fkey" FOREIGN KEY ("user_id") REFERENCES "health_user" ("id") ON UPDATE NO ACTION ON DELETE RESTRICT;
-- rollback: ALTER TABLE admin_role DROP CONSTRAINT admin_role_user_id_fkey;

-- changeset angelchang:450
ALTER TABLE "affiliate_code" ADD CONSTRAINT "affiliate_code_affiliate_id_fkey" FOREIGN KEY ("affiliate_id") REFERENCES "affiliate" ("id") ON UPDATE NO ACTION ON DELETE RESTRICT;
-- rollback: ALTER TABLE affiliate_code DROP CONSTRAINT affiliate_code_affiliate_id_fkey;

-- changeset angelchang:451
ALTER TABLE "affiliate_connect" ADD CONSTRAINT "affiliate_connect_affiliate_code_id_fkey" FOREIGN KEY ("affiliate_code_id") REFERENCES "affiliate_code" ("id") ON UPDATE NO ACTION ON DELETE RESTRICT;
-- rollback: ALTER TABLE affiliate_connect DROP CONSTRAINT affiliate_connect_affiliate_code_id_fkey;

-- changeset angelchang:452
ALTER TABLE "affiliate_connect" ADD CONSTRAINT "affiliate_connect_affiliate_id_fkey" FOREIGN KEY ("affiliate_id") REFERENCES "affiliate" ("id") ON UPDATE NO ACTION ON DELETE RESTRICT;
-- rollback: ALTER TABLE affiliate_connect DROP CONSTRAINT affiliate_connect_affiliate_id_fkey;

-- changeset angelchang:453
ALTER TABLE "affiliate_connect" ADD CONSTRAINT "affiliate_connect_user_id_fkey" FOREIGN KEY ("user_id") REFERENCES "health_user" ("id") ON UPDATE NO ACTION ON DELETE RESTRICT;
-- rollback: ALTER TABLE affiliate_connect DROP CONSTRAINT affiliate_connect_user_id_fkey;

-- changeset angelchang:454
ALTER TABLE "alert_setting" ADD CONSTRAINT "alert_setting_care_connect_id_fkey" FOREIGN KEY ("care_connect_id") REFERENCES "care_connect" ("id") ON UPDATE NO ACTION ON DELETE RESTRICT;
-- rollback: ALTER TABLE alert_setting DROP CONSTRAINT alert_setting_care_connect_id_fkey;

-- changeset angelchang:455
ALTER TABLE "android_device_pattern" ADD CONSTRAINT "android_device_pattern_user_id_fkey" FOREIGN KEY ("user_id") REFERENCES "health_user" ("id") ON UPDATE NO ACTION ON DELETE RESTRICT;
-- rollback: ALTER TABLE android_device_pattern DROP CONSTRAINT android_device_pattern_user_id_fkey;

-- changeset angelchang:456
ALTER TABLE "antz" ADD CONSTRAINT "antz_subscribed_id_fkey" FOREIGN KEY ("subscribed_id") REFERENCES "health_user" ("id") ON UPDATE NO ACTION ON DELETE RESTRICT;
-- rollback: ALTER TABLE antz DROP CONSTRAINT antz_subscribed_id_fkey;

-- changeset angelchang:457
ALTER TABLE "antz" ADD CONSTRAINT "antz_user_id_fkey" FOREIGN KEY ("user_id") REFERENCES "health_user" ("id") ON UPDATE NO ACTION ON DELETE RESTRICT;
-- rollback: ALTER TABLE antz DROP CONSTRAINT antz_user_id_fkey;

-- changeset angelchang:458
ALTER TABLE "app_alert_setting" ADD CONSTRAINT "app_alert_setting_user_id_fkey" FOREIGN KEY ("user_id") REFERENCES "health_user" ("id") ON UPDATE NO ACTION ON DELETE RESTRICT;
-- rollback: ALTER TABLE app_alert_setting DROP CONSTRAINT app_alert_setting_user_id_fkey;

-- changeset angelchang:459
ALTER TABLE "app_log" ADD CONSTRAINT "app_log_user_id_fkey" FOREIGN KEY ("user_id") REFERENCES "health_user" ("id") ON UPDATE NO ACTION ON DELETE RESTRICT;
-- rollback: ALTER TABLE app_log DROP CONSTRAINT app_log_user_id_fkey;

-- changeset angelchang:460
ALTER TABLE "care_connect" ADD CONSTRAINT "care_connect_clinic_code_id_fkey" FOREIGN KEY ("clinic_code_id") REFERENCES "clinic_code" ("id") ON UPDATE NO ACTION ON DELETE RESTRICT;
-- rollback: ALTER TABLE care_connect DROP CONSTRAINT care_connect_clinic_code_id_fkey;

-- changeset angelchang:461
ALTER TABLE "care_connect" ADD CONSTRAINT "care_connect_clinic_id_fkey" FOREIGN KEY ("clinic_id") REFERENCES "clinic" ("id") ON UPDATE NO ACTION ON DELETE RESTRICT;
-- rollback: ALTER TABLE care_connect DROP CONSTRAINT care_connect_clinic_id_fkey;

-- changeset angelchang:462
ALTER TABLE "care_connect" ADD CONSTRAINT "care_connect_educator_id_fkey" FOREIGN KEY ("educator_id") REFERENCES "health_user" ("id") ON UPDATE NO ACTION ON DELETE RESTRICT;
-- rollback: ALTER TABLE care_connect DROP CONSTRAINT care_connect_educator_id_fkey;

-- changeset angelchang:463
ALTER TABLE "care_connect" ADD CONSTRAINT "care_connect_last_viewed_user_id_fkey" FOREIGN KEY ("last_viewed_user_id") REFERENCES "health_user" ("id") ON UPDATE NO ACTION ON DELETE RESTRICT;
-- rollback: ALTER TABLE care_connect DROP CONSTRAINT care_connect_last_viewed_user_id_fkey;

-- changeset angelchang:464
ALTER TABLE "care_connect" ADD CONSTRAINT "care_connect_user_id_fkey" FOREIGN KEY ("user_id") REFERENCES "health_user" ("id") ON UPDATE NO ACTION ON DELETE RESTRICT;
-- rollback: ALTER TABLE care_connect DROP CONSTRAINT care_connect_user_id_fkey;

-- changeset angelchang:465
ALTER TABLE "care_viewed_connect" ADD CONSTRAINT "care_viewed_connect_care_connect_id_fkey" FOREIGN KEY ("care_connect_id") REFERENCES "care_connect" ("id") ON UPDATE NO ACTION ON DELETE RESTRICT;
-- rollback: ALTER TABLE care_viewed_connect DROP CONSTRAINT care_viewed_connect_care_connect_id_fkey;

-- changeset angelchang:466
ALTER TABLE "care_viewed_connect" ADD CONSTRAINT "care_viewed_connect_user_id_fkey" FOREIGN KEY ("user_id") REFERENCES "health_user" ("id") ON UPDATE NO ACTION ON DELETE RESTRICT;
-- rollback: ALTER TABLE care_viewed_connect DROP CONSTRAINT care_viewed_connect_user_id_fkey;

-- changeset angelchang:467
ALTER TABLE "cgm_sync_history" ADD CONSTRAINT "cgm_sync_history_clinic_id_fkey" FOREIGN KEY ("clinic_id") REFERENCES "clinic" ("id") ON UPDATE NO ACTION ON DELETE RESTRICT;
-- rollback: ALTER TABLE cgm_sync_history DROP CONSTRAINT cgm_sync_history_clinic_id_fkey;

-- changeset angelchang:468
ALTER TABLE "cgm_sync_history" ADD CONSTRAINT "cgm_sync_history_updated_by_fkey" FOREIGN KEY ("updated_by") REFERENCES "health_user" ("id") ON UPDATE NO ACTION ON DELETE RESTRICT;
-- rollback: ALTER TABLE cgm_sync_history DROP CONSTRAINT cgm_sync_history_updated_by_fkey;

-- changeset angelchang:469
ALTER TABLE "cgm_sync_history" ADD CONSTRAINT "cgm_sync_history_user_id_fkey" FOREIGN KEY ("user_id") REFERENCES "health_user" ("id") ON UPDATE NO ACTION ON DELETE RESTRICT;
-- rollback: ALTER TABLE cgm_sync_history DROP CONSTRAINT cgm_sync_history_user_id_fkey;

-- changeset angelchang:470
ALTER TABLE "clinic" ADD CONSTRAINT "clinic_account_manager_id_fkey" FOREIGN KEY ("account_manager_id") REFERENCES "health_user" ("id") ON UPDATE NO ACTION ON DELETE RESTRICT;
-- rollback: ALTER TABLE clinic DROP CONSTRAINT clinic_account_manager_id_fkey;

-- changeset angelchang:471
ALTER TABLE "clinic_chart" ADD CONSTRAINT "clinic_chart_care_connect_id_fkey" FOREIGN KEY ("care_connect_id") REFERENCES "care_connect" ("id") ON UPDATE NO ACTION ON DELETE RESTRICT;
-- rollback: ALTER TABLE clinic_chart DROP CONSTRAINT clinic_chart_care_connect_id_fkey;

-- changeset angelchang:472
ALTER TABLE "clinic_chart" ADD CONSTRAINT "clinic_chart_clinic_id_fkey" FOREIGN KEY ("clinic_id") REFERENCES "clinic" ("id") ON UPDATE NO ACTION ON DELETE RESTRICT;
-- rollback: ALTER TABLE clinic_chart DROP CONSTRAINT clinic_chart_clinic_id_fkey;

-- changeset angelchang:473
ALTER TABLE "clinic_chart" ADD CONSTRAINT "clinic_chart_created_by_fkey" FOREIGN KEY ("created_by") REFERENCES "health_user" ("id") ON UPDATE NO ACTION ON DELETE RESTRICT;
-- rollback: ALTER TABLE clinic_chart DROP CONSTRAINT clinic_chart_created_by_fkey;

-- changeset angelchang:474
ALTER TABLE "clinic_chart" ADD CONSTRAINT "clinic_chart_user_id_fkey" FOREIGN KEY ("user_id") REFERENCES "health_user" ("id") ON UPDATE NO ACTION ON DELETE RESTRICT;
-- rollback: ALTER TABLE clinic_chart DROP CONSTRAINT clinic_chart_user_id_fkey;

-- changeset angelchang:475
ALTER TABLE "clinic_code" ADD CONSTRAINT "clinic_code_care_connect_id_fkey" FOREIGN KEY ("care_connect_id") REFERENCES "care_connect" ("id") ON UPDATE NO ACTION ON DELETE RESTRICT;
-- rollback: ALTER TABLE clinic_code DROP CONSTRAINT clinic_code_care_connect_id_fkey;

-- changeset angelchang:476
ALTER TABLE "clinic_code" ADD CONSTRAINT "clinic_code_clinic_id_fkey" FOREIGN KEY ("clinic_id") REFERENCES "clinic" ("id") ON UPDATE NO ACTION ON DELETE RESTRICT;
-- rollback: ALTER TABLE clinic_code DROP CONSTRAINT clinic_code_clinic_id_fkey;

-- changeset angelchang:477
ALTER TABLE "clinic_config" ADD CONSTRAINT "clinic_config_clinic_id_fkey" FOREIGN KEY ("clinic_id") REFERENCES "clinic" ("id") ON UPDATE NO ACTION ON DELETE RESTRICT;
-- rollback: ALTER TABLE clinic_config DROP CONSTRAINT clinic_config_clinic_id_fkey;

-- changeset angelchang:478
ALTER TABLE "clinic" ADD CONSTRAINT "clinic_country_id_fkey" FOREIGN KEY ("country_id") REFERENCES "country" ("id") ON UPDATE NO ACTION ON DELETE RESTRICT;
-- rollback: ALTER TABLE clinic DROP CONSTRAINT clinic_country_id_fkey;

-- changeset angelchang:479
ALTER TABLE "clinic_daily_comment" ADD CONSTRAINT "clinic_daily_comment_clinic_id_fkey" FOREIGN KEY ("clinic_id") REFERENCES "clinic" ("id") ON UPDATE NO ACTION ON DELETE RESTRICT;
-- rollback: ALTER TABLE clinic_daily_comment DROP CONSTRAINT clinic_daily_comment_clinic_id_fkey;

-- changeset angelchang:480
ALTER TABLE "clinic_daily_comment" ADD CONSTRAINT "clinic_daily_comment_created_by_fkey" FOREIGN KEY ("created_by") REFERENCES "health_user" ("id") ON UPDATE NO ACTION ON DELETE RESTRICT;
-- rollback: ALTER TABLE clinic_daily_comment DROP CONSTRAINT clinic_daily_comment_created_by_fkey;

-- changeset angelchang:481
ALTER TABLE "clinic_daily_comment" ADD CONSTRAINT "clinic_daily_comment_user_id_fkey" FOREIGN KEY ("user_id") REFERENCES "health_user" ("id") ON UPDATE NO ACTION ON DELETE RESTRICT;
-- rollback: ALTER TABLE clinic_daily_comment DROP CONSTRAINT clinic_daily_comment_user_id_fkey;

-- changeset angelchang:482
ALTER TABLE "clinic_discount" ADD CONSTRAINT "clinic_discount_clinic_id_fkey" FOREIGN KEY ("clinic_id") REFERENCES "clinic" ("id") ON UPDATE NO ACTION ON DELETE RESTRICT;
-- rollback: ALTER TABLE clinic_discount DROP CONSTRAINT clinic_discount_clinic_id_fkey;

-- changeset angelchang:483
ALTER TABLE "clinic_discount_code" ADD CONSTRAINT "clinic_discount_code_discount_id_fkey" FOREIGN KEY ("discount_id") REFERENCES "clinic_discount" ("id") ON UPDATE NO ACTION ON DELETE RESTRICT;
-- rollback: ALTER TABLE clinic_discount_code DROP CONSTRAINT clinic_discount_code_discount_id_fkey;

-- changeset angelchang:484
ALTER TABLE "clinic_discount_code" ADD CONSTRAINT "clinic_discount_code_subscription_id_fkey" FOREIGN KEY ("subscription_id") REFERENCES "clinic_subscription" ("id") ON UPDATE NO ACTION ON DELETE RESTRICT;
-- rollback: ALTER TABLE clinic_discount_code DROP CONSTRAINT clinic_discount_code_subscription_id_fkey;

-- changeset angelchang:485
ALTER TABLE "clinic_discount_code" ADD CONSTRAINT "clinic_discount_code_user_id_fkey" FOREIGN KEY ("user_id") REFERENCES "health_user" ("id") ON UPDATE NO ACTION ON DELETE RESTRICT;
-- rollback: ALTER TABLE clinic_discount_code DROP CONSTRAINT clinic_discount_code_user_id_fkey;

-- changeset angelchang:486
ALTER TABLE "clinic_discount" ADD CONSTRAINT "clinic_discount_plan_id_fkey" FOREIGN KEY ("plan_id") REFERENCES "clinic_plan" ("id") ON UPDATE NO ACTION ON DELETE RESTRICT;
-- rollback: ALTER TABLE clinic_discount DROP CONSTRAINT clinic_discount_plan_id_fkey;

-- changeset angelchang:487
ALTER TABLE "clinic_exam_chart" ADD CONSTRAINT "clinic_exam_chart_clinic_id_fkey" FOREIGN KEY ("clinic_id") REFERENCES "clinic" ("id") ON UPDATE NO ACTION ON DELETE CASCADE;
-- rollback: ALTER TABLE clinic_exam_chart DROP CONSTRAINT clinic_exam_chart_clinic_id_fkey;

-- changeset angelchang:488
ALTER TABLE "clinic_exam_unit" ADD CONSTRAINT "clinic_exam_unit_clinic_id_fkey" FOREIGN KEY ("clinic_id") REFERENCES "clinic" ("id") ON UPDATE NO ACTION ON DELETE CASCADE;
-- rollback: ALTER TABLE clinic_exam_unit DROP CONSTRAINT clinic_exam_unit_clinic_id_fkey;

-- changeset angelchang:489
ALTER TABLE "clinic_feature" ADD CONSTRAINT "clinic_feature_clinic_id_fkey" FOREIGN KEY ("clinic_id") REFERENCES "clinic" ("id") ON UPDATE NO ACTION ON DELETE RESTRICT;
-- rollback: ALTER TABLE clinic_feature DROP CONSTRAINT clinic_feature_clinic_id_fkey;

-- changeset angelchang:490
ALTER TABLE "clinic_group" ADD CONSTRAINT "clinic_group_clinic_id_fkey" FOREIGN KEY ("clinic_id") REFERENCES "clinic" ("id") ON UPDATE NO ACTION ON DELETE RESTRICT;
-- rollback: ALTER TABLE clinic_group DROP CONSTRAINT clinic_group_clinic_id_fkey;

-- changeset angelchang:491
ALTER TABLE "clinic_group_connect" ADD CONSTRAINT "clinic_group_connect_clinic_group_id_fkey" FOREIGN KEY ("clinic_group_id") REFERENCES "clinic_group" ("id") ON UPDATE NO ACTION ON DELETE RESTRICT;
-- rollback: ALTER TABLE clinic_group_connect DROP CONSTRAINT clinic_group_connect_clinic_group_id_fkey;

-- changeset angelchang:492
ALTER TABLE "clinic_group_connect" ADD CONSTRAINT "clinic_group_connect_user_id_fkey" FOREIGN KEY ("user_id") REFERENCES "health_user" ("id") ON UPDATE NO ACTION ON DELETE RESTRICT;
-- rollback: ALTER TABLE clinic_group_connect DROP CONSTRAINT clinic_group_connect_user_id_fkey;

-- changeset angelchang:493
ALTER TABLE "clinic_loyalty_rule" ADD CONSTRAINT "clinic_loyalty_rule_clinic_id_fkey" FOREIGN KEY ("clinic_id") REFERENCES "clinic" ("id") ON UPDATE NO ACTION ON DELETE RESTRICT;
-- rollback: ALTER TABLE clinic_loyalty_rule DROP CONSTRAINT clinic_loyalty_rule_clinic_id_fkey;

-- changeset angelchang:494
ALTER TABLE "clinic_loyalty_transaction" ADD CONSTRAINT "clinic_loyalty_transaction_care_connect_id_fkey" FOREIGN KEY ("care_connect_id") REFERENCES "care_connect" ("id") ON UPDATE NO ACTION ON DELETE RESTRICT;
-- rollback: ALTER TABLE clinic_loyalty_transaction DROP CONSTRAINT clinic_loyalty_transaction_care_connect_id_fkey;

-- changeset angelchang:495
ALTER TABLE "clinic_loyalty_transaction" ADD CONSTRAINT "clinic_loyalty_transaction_clinic_id_fkey" FOREIGN KEY ("clinic_id") REFERENCES "clinic" ("id") ON UPDATE NO ACTION ON DELETE RESTRICT;
-- rollback: ALTER TABLE clinic_loyalty_transaction DROP CONSTRAINT clinic_loyalty_transaction_clinic_id_fkey;
-- changeset angelchang:246
CREATE INDEX IF NOT EXISTS "idx_api_log_app_version_idx" ON "api_log"("app_version");
-- rollback: DROP INDEX idx_api_log_app_version_idx;

-- changeset angelchang:247
CREATE INDEX IF NOT EXISTS "idx_api_log_created_at" ON "api_log"("created_at" DESC);
-- rollback: DROP INDEX idx_api_log_created_at;

-- changeset angelchang:248
CREATE INDEX IF NOT EXISTS "idx_api_log_endpoint_idx" ON "api_log"("endpoint");
-- rollback: DROP INDEX idx_api_log_endpoint_idx;

-- changeset angelchang:249
CREATE INDEX IF NOT EXISTS "idx_app_log_created_at" ON "app_log"("created_at");
-- rollback: DROP INDEX idx_app_log_created_at;

-- changeset angelchang:250
ALTER TABLE "auth_apple" ADD CONSTRAINT "auth_apple_user_identifier_key" UNIQUE ("user_identifier");
-- rollback: ALTER TABLE auth_apple DROP CONSTRAINT auth_apple_user_identifier_key;

-- changeset angelchang:251
CREATE INDEX IF NOT EXISTS "idx_care_connect_clinic_id_role_status" ON "care_connect"("clinic_id", "role", "status");
-- rollback: DROP INDEX idx_care_connect_clinic_id_role_status;

-- changeset angelchang:252
CREATE INDEX IF NOT EXISTS idx_care_connect_role_user_id ON public.care_connect USING btree (role, user_id) WHERE (status = 'active'::text);
-- rollback: DROP INDEX idx_care_connect_role_user_id;

-- changeset angelchang:253
CREATE INDEX IF NOT EXISTS idx_care_connect_user_clinic_role ON public.care_connect USING btree (user_id, clinic_id, role) WHERE (status = 'active'::text);
-- rollback: DROP INDEX idx_care_connect_user_clinic_role;

-- changeset angelchang:254
CREATE INDEX IF NOT EXISTS idx_cvc_care_connect_id_user_stream_id ON public.care_viewed_connect USING btree (care_connect_id, user_stream_id) WHERE (NOT active);
-- rollback: DROP INDEX idx_cvc_care_connect_id_user_stream_id;

-- changeset angelchang:255
CREATE INDEX IF NOT EXISTS "idx_cvc_ids" ON "care_viewed_connect"("user_id", "care_connect_id", "user_stream_id");
-- rollback: DROP INDEX idx_cvc_ids;

-- changeset angelchang:256
CREATE INDEX IF NOT EXISTS idx_cvc_section ON public.care_viewed_connect USING btree (section) WHERE (active = true);
-- rollback: DROP INDEX idx_cvc_section;

-- changeset angelchang:257
CREATE INDEX IF NOT EXISTS "idx_cvc_section_user_stream_id" ON "care_viewed_connect"("section", "user_stream_id");
-- rollback: DROP INDEX idx_cvc_section_user_stream_id;

-- changeset angelchang:258
CREATE INDEX IF NOT EXISTS "idx_user_stream_id" ON "care_viewed_connect"("user_stream_id");
-- rollback: DROP INDEX idx_user_stream_id;

-- changeset angelchang:259
CREATE TYPE bgunit AS enum ('mg_dl', 'mmol_l');
CREATE TABLE IF NOT EXISTS "cgm_config" ("id" INTEGER GENERATED BY DEFAULT AS IDENTITY NOT NULL, "created_at" TIMESTAMP WITH TIME ZONE, "deleted_at" TIMESTAMP WITH TIME ZONE, "updated_at" TIMESTAMP WITH TIME ZONE, "user_id" INTEGER NOT NULL, "carer_id" INTEGER NOT NULL, "upper_range" FLOAT8, "lower_range" FLOAT8, "unit" BGUNIT, CONSTRAINT "cgm_config_pkey" PRIMARY KEY ("id"));
-- rollback: DROP TABLE cgm_config;

-- changeset angelchang:260
CREATE INDEX IF NOT EXISTS idx_active_clinic_chart ON public.clinic_chart USING btree (care_connect_id, status) WHERE (status = 'active'::text);
-- rollback: DROP INDEX idx_active_clinic_chart;

-- changeset angelchang:261
CREATE INDEX IF NOT EXISTS "idx_clinic_chart_clinic_id_user_id" ON "clinic_chart"("clinic_id", "user_id");
-- rollback: DROP INDEX idx_clinic_chart_clinic_id_user_id;

-- changeset angelchang:262
CREATE TABLE IF NOT EXISTS "oral_medicine" ("id" INTEGER GENERATED BY DEFAULT AS IDENTITY NOT NULL, "created_at" TIMESTAMP WITHOUT TIME ZONE DEFAULT NOW(), "updated_at" TIMESTAMP WITHOUT TIME ZONE DEFAULT NOW(), "name" TEXT NOT NULL, "uid" INTEGER DEFAULT 0 NOT NULL, "languages" VARCHAR DEFAULT '[]' NOT NULL, "deprecated" BOOLEAN DEFAULT FALSE, CONSTRAINT "oral_medicine_pkey" PRIMARY KEY ("id"));
-- rollback: DROP TABLE oral_medicine;

-- changeset angelchang:263
CREATE INDEX IF NOT EXISTS "idx_clinic_monthly_year_month_is_pseudo_included_country" ON "clinic_default_analytics_monthly_stats"("year", "month", "is_pseudo_included", "country_iso_2");
-- rollback: DROP INDEX idx_clinic_monthly_year_month_is_pseudo_included_country;

-- changeset angelchang:264
CREATE INDEX IF NOT EXISTS "idx_clinic_quarterly_year_quarter_is_pseudo_included_country" ON "clinic_default_analytics_quarterly_stats"("year", "quarter", "is_pseudo_included", "country_iso_2");
-- rollback: DROP INDEX idx_clinic_quarterly_year_quarter_is_pseudo_included_country;

-- changeset angelchang:265
CREATE INDEX IF NOT EXISTS "idx_clinic_yearly_year_is_pseudo_included_country" ON "clinic_default_analytics_yearly_stats"("year", "is_pseudo_included", "country_iso_2");
-- rollback: DROP INDEX idx_clinic_yearly_year_is_pseudo_included_country;

-- changeset angelchang:266
ALTER TABLE "clinic_discount_code" ADD CONSTRAINT "clinic_discount_code_code_key" UNIQUE ("code");
-- rollback: ALTER TABLE clinic_discount_code DROP CONSTRAINT clinic_discount_code_code_key;

-- changeset angelchang:267
CREATE INDEX IF NOT EXISTS "idx_clinic_exam_chart_clinic_id" ON "clinic_exam_chart"("clinic_id");
-- rollback: DROP INDEX idx_clinic_exam_chart_clinic_id;

-- changeset angelchang:268
CREATE INDEX IF NOT EXISTS "idx_clinic_exam_unit_clinic_id" ON "clinic_exam_unit"("clinic_id");
-- rollback: DROP INDEX idx_clinic_exam_unit_clinic_id;

-- changeset angelchang:269
ALTER TABLE "clinic_group_connect" ADD CONSTRAINT "clinic_group_connect_unique_key" UNIQUE ("user_id", "clinic_group_id");
-- rollback: ALTER TABLE clinic_group_connect DROP CONSTRAINT clinic_group_connect_unique_key;

-- changeset angelchang:270
CREATE INDEX IF NOT EXISTS "idx_clinic_loyalty_transaction_clinic_id_user_id" ON "clinic_loyalty_transaction"("clinic_id", "user_id");
-- rollback: DROP INDEX idx_clinic_loyalty_transaction_clinic_id_user_id;

-- changeset angelchang:271
CREATE INDEX IF NOT EXISTS "idx_clinic_loyalty_transaction_diary_id" ON "clinic_loyalty_transaction"("diary_id");
-- rollback: DROP INDEX idx_clinic_loyalty_transaction_diary_id;

-- changeset angelchang:272
CREATE INDEX IF NOT EXISTS "idx_clinic_id_deleted_at_pm_display_name" ON "clinic_medicine"("clinic_id", "deleted_at", "pm_display_name");
-- rollback: DROP INDEX idx_clinic_id_deleted_at_pm_display_name;

-- changeset angelchang:273
CREATE INDEX IF NOT EXISTS "idx_clinic_notification_setting_clinic_id_user_id" ON "clinic_notification_setting"("clinic_id", "user_id");
-- rollback: DROP INDEX idx_clinic_notification_setting_clinic_id_user_id;

-- changeset angelchang:274
CREATE INDEX IF NOT EXISTS "idx_clinic_prescription_clinic_id_user_id" ON "clinic_prescription"("clinic_id", "user_id");
-- rollback: DROP INDEX idx_clinic_prescription_clinic_id_user_id;

-- changeset angelchang:275
CREATE INDEX IF NOT EXISTS "idx_clinic_prescription_clinic_id_user_id_start_date_deleted_at" ON "clinic_prescription"("clinic_id", "user_id", "start_date", "deleted_at");
-- rollback: DROP INDEX idx_clinic_prescription_clinic_id_user_id_start_date_deleted_at;

-- changeset angelchang:276
CREATE INDEX IF NOT EXISTS "idx_clinic_prescription_parent_clinic_prescription_id" ON "clinic_prescription"("parent_clinic_prescription_id");
-- rollback: DROP INDEX idx_clinic_prescription_parent_clinic_prescription_id;

-- changeset angelchang:277
CREATE INDEX IF NOT EXISTS idx_clinic_reminder_cache ON public.clinic_reminder USING btree (clinic_id) WHERE (((status)::text = 'active'::text) AND ((category)::text = 'cache'::text));
-- rollback: DROP INDEX idx_clinic_reminder_cache;

-- changeset angelchang:278
CREATE INDEX IF NOT EXISTS "idx_clinic_reminder_examine_at_user_clinic_v2" ON "clinic_reminder"("user_id", "clinic_id", "examine_at");
-- rollback: DROP INDEX idx_clinic_reminder_examine_at_user_clinic_v2;

-- changeset angelchang:279
CREATE TABLE IF NOT EXISTS "feedback" ("id" INTEGER GENERATED BY DEFAULT AS IDENTITY NOT NULL, "created_at" TIMESTAMP WITHOUT TIME ZONE DEFAULT NOW(), "type" VARCHAR NOT NULL, "values" TEXT DEFAULT '{}' NOT NULL, "user_id" INTEGER NOT NULL, CONSTRAINT "feedback_pkey" PRIMARY KEY ("id"));
-- rollback: DROP TABLE feedback;

-- changeset angelchang:280
CREATE INDEX IF NOT EXISTS idx_clinic_subscription_clinic_id_user_id_with_status_active ON public.clinic_subscription USING btree (clinic_id, user_id) WHERE (status = 'active'::text);
-- rollback: DROP INDEX idx_clinic_subscription_clinic_id_user_id_with_status_active;

-- changeset angelchang:281
ALTER TABLE "collaboration_content" ADD CONSTRAINT "collaboration_content_clinic_id_key" UNIQUE ("clinic_id");
-- rollback: ALTER TABLE collaboration_content DROP CONSTRAINT collaboration_content_clinic_id_key;

-- changeset angelchang:282
CREATE INDEX IF NOT EXISTS "idx_custom_diary_tag_user_id_type" ON "custom_diary_tag"("user_id", "type");
-- rollback: DROP INDEX idx_custom_diary_tag_user_id_type;

-- changeset angelchang:283
CREATE INDEX IF NOT EXISTS "idx_custom_medicine_user_id" ON "custom_medicine"("user_id");
-- rollback: DROP INDEX idx_custom_medicine_user_id;

-- changeset angelchang:284
CREATE INDEX IF NOT EXISTS "idx_daily_step_user_id_recorded_date" ON "daily_step"("user_id", "recorded_date");
-- rollback: DROP INDEX idx_daily_step_user_id_recorded_date;

-- changeset angelchang:285
CREATE UNIQUE INDEX IF NOT EXISTS "idx_unique_dashboard_cache_user_id_ctype" ON "dashboard_cache"("user_id", "ctype");
-- rollback: DROP INDEX idx_unique_dashboard_cache_user_id_ctype;

-- changeset angelchang:286
ALTER TABLE "dashboard_setting" ADD CONSTRAINT "dashboard_setting_care_connect_id_unique_key" UNIQUE ("care_connect_id");
-- rollback: ALTER TABLE dashboard_setting DROP CONSTRAINT dashboard_setting_care_connect_id_unique_key;

-- changeset angelchang:287
ALTER TABLE "dashboard_status" ADD CONSTRAINT "dashboard_status_user_id_care_connect_id_ukey" UNIQUE ("user_id", "care_connect_id");
-- rollback: ALTER TABLE dashboard_status DROP CONSTRAINT dashboard_status_user_id_care_connect_id_ukey;

-- changeset angelchang:288
CREATE INDEX IF NOT EXISTS "diary_user_id_recorded_at_idx" ON "diary"("user_id", "recorded_at");
-- rollback: DROP INDEX diary_user_id_recorded_at_idx;

-- changeset angelchang:289
CREATE INDEX IF NOT EXISTS "idx_diary_batch_uuid" ON "diary"("batch_uuid");
-- rollback: DROP INDEX idx_diary_batch_uuid;

-- changeset angelchang:290
CREATE INDEX IF NOT EXISTS "idx_diary_created_at" ON "diary"("created_at" DESC);
-- rollback: DROP INDEX idx_diary_created_at;

-- changeset angelchang:291
CREATE INDEX IF NOT EXISTS "idx_diary_glucose_value_in_mg_dl" ON "diary"("glucose_value_in_mg_dl");
-- rollback: DROP INDEX idx_diary_glucose_value_in_mg_dl;

-- changeset angelchang:292
CREATE INDEX IF NOT EXISTS "idx_diary_glucose_value_user_id" ON "diary"("glucose_value", "user_id");
-- rollback: DROP INDEX idx_diary_glucose_value_user_id;

-- changeset angelchang:293
CREATE INDEX IF NOT EXISTS "idx_diary_recorded_created_at" ON "diary"("recorded_at", "created_at");
-- rollback: DROP INDEX idx_diary_recorded_created_at;

-- changeset angelchang:294
CREATE INDEX IF NOT EXISTS "idx_diary_setting_id" ON "diary"("setting_id");
-- rollback: DROP INDEX idx_diary_setting_id;

-- changeset angelchang:295
CREATE INDEX IF NOT EXISTS "idx_diary_updated_at" ON "diary"("updated_at");
-- rollback: DROP INDEX idx_diary_updated_at;

-- changeset angelchang:296
CREATE INDEX IF NOT EXISTS "idx_diary_user_id_created_at_idx" ON "diary"("user_id", "created_at" DESC);
-- rollback: DROP INDEX idx_diary_user_id_created_at_idx;

-- changeset angelchang:297
CREATE INDEX IF NOT EXISTS "idx_diary_user_id_glucose_recorded_at" ON "diary"("user_id", "glucose_value", "recorded_at");
-- rollback: DROP INDEX idx_diary_user_id_glucose_recorded_at;

-- changeset angelchang:298
CREATE INDEX IF NOT EXISTS "idx_diary_user_id_glucose_value_in_mg_dl_recorded_at" ON "diary"("user_id", "glucose_value_in_mg_dl", "recorded_at");
-- rollback: DROP INDEX idx_diary_user_id_glucose_value_in_mg_dl_recorded_at;

-- changeset angelchang:299
CREATE INDEX IF NOT EXISTS "idx_diary_user_id_systolic_recorded_at" ON "diary"("user_id", "systolic", "recorded_at");
-- rollback: DROP INDEX idx_diary_user_id_systolic_recorded_at;

-- changeset angelchang:300
CREATE INDEX IF NOT EXISTS "idx_diary_user_id_updated_at" ON "diary"("user_id", "updated_at");
-- rollback: DROP INDEX idx_diary_user_id_updated_at;

-- changeset angelchang:301
CREATE INDEX IF NOT EXISTS "idx_diary_user_id_weight_recorded_at" ON "diary"("user_id", "weight", "recorded_at");
-- rollback: DROP INDEX idx_diary_user_id_weight_recorded_at;

-- changeset angelchang:302
CREATE INDEX IF NOT EXISTS "idx_diary_attachment_diary_id" ON "diary_attachment"("diary_id");
-- rollback: DROP INDEX idx_diary_attachment_diary_id;

-- changeset angelchang:303
ALTER TABLE "diary_batch_record" ADD CONSTRAINT "diary_batch_record_batch_uuid_key" UNIQUE ("batch_uuid");
-- rollback: ALTER TABLE diary_batch_record DROP CONSTRAINT diary_batch_record_batch_uuid_key;

-- changeset angelchang:304
CREATE INDEX IF NOT EXISTS idx_diary_logged_cache_user_id_recorded_date ON public.diary_logged_data_cache USING btree (user_id, recorded_date) WHERE (deleted_at IS NULL);
-- rollback: DROP INDEX idx_diary_logged_cache_user_id_recorded_date;

-- changeset angelchang:305
CREATE INDEX IF NOT EXISTS "diary_tag_diary_id_type" ON "diary_tag"("diary_id", "type");
-- rollback: DROP INDEX diary_tag_diary_id_type;

-- changeset angelchang:306
CREATE INDEX IF NOT EXISTS "idx_email_reminder_event_user_id" ON "email_reminder_event"("user_id");
-- rollback: DROP INDEX idx_email_reminder_event_user_id;

-- changeset angelchang:307
CREATE INDEX IF NOT EXISTS "idx_institution_patient_date" ON "emr_record"("medical_institution_code", "patient_chart_number", "date");
-- rollback: DROP INDEX idx_institution_patient_date;

-- changeset angelchang:308
CREATE INDEX IF NOT EXISTS "idx_examination_care_connect_id_source_id_diagnosed_at" ON "examination"("care_connect_id", "source_id", "diagnosed_at");
-- rollback: DROP INDEX idx_examination_care_connect_id_source_id_diagnosed_at;

-- changeset angelchang:309
CREATE INDEX IF NOT EXISTS "idx_examination_clinic_id_user_id_diagnosed_at" ON "examination"("clinic_id", "user_id", "diagnosed_at");
-- rollback: DROP INDEX idx_examination_clinic_id_user_id_diagnosed_at;

-- changeset angelchang:310
CREATE UNIQUE INDEX IF NOT EXISTS "name_ukey" ON "feature_toggle"("name");
-- rollback: DROP INDEX name_ukey;

-- changeset angelchang:311
CREATE INDEX IF NOT EXISTS "idx_food_database_source_id" ON "food_database"("source_id");
-- rollback: DROP INDEX idx_food_database_source_id;

-- changeset angelchang:312
CREATE INDEX IF NOT EXISTS "idx_food_db_user_id" ON "food_database"("user_id");
-- rollback: DROP INDEX idx_food_db_user_id;

-- changeset angelchang:313
CREATE INDEX IF NOT EXISTS "food_database_connect_diary_id_idx" ON "food_database_connect"("diary_id");
-- rollback: DROP INDEX food_database_connect_diary_id_idx;

-- changeset angelchang:314
CREATE INDEX IF NOT EXISTS "idx_food_db_connect_user_id" ON "food_database_connect"("user_id");
-- rollback: DROP INDEX idx_food_db_connect_user_id;

-- changeset angelchang:315
ALTER TABLE "food_database_favorited" ADD CONSTRAINT "user_food_database_favorite_unique_key" UNIQUE ("user_id", "food_database_id");
-- rollback: ALTER TABLE food_database_favorited DROP CONSTRAINT user_food_database_favorite_unique_key;

-- changeset angelchang:316
ALTER TABLE "friend_notification_setting" ADD CONSTRAINT "friend_notification_setting_from_id_to_id_key" UNIQUE ("from_id", "to_id");
-- rollback: ALTER TABLE friend_notification_setting DROP CONSTRAINT friend_notification_setting_from_id_to_id_key;

-- changeset angelchang:317
CREATE INDEX IF NOT EXISTS "idx_friends_from_id" ON "friends"("from_id");
-- rollback: DROP INDEX idx_friends_from_id;

-- changeset angelchang:318
CREATE INDEX IF NOT EXISTS "idx_friends_to_id" ON "friends"("to_id");
-- rollback: DROP INDEX idx_friends_to_id;

-- changeset angelchang:319
ALTER TABLE "friends" ADD CONSTRAINT "friends_from_id_to_id_key" UNIQUE ("from_id", "to_id");
-- rollback: ALTER TABLE friends DROP CONSTRAINT friends_from_id_to_id_key;

-- changeset angelchang:320
CREATE INDEX IF NOT EXISTS "idx_user_identity" ON "fubon_insurance_promotion"("user_identity");
-- rollback: DROP INDEX idx_user_identity;

-- changeset angelchang:321
CREATE TABLE IF NOT EXISTS "email_verify" ("id" INTEGER GENERATED BY DEFAULT AS IDENTITY NOT NULL, "created_at" TIMESTAMP WITHOUT TIME ZONE DEFAULT NOW(), "updated_at" TIMESTAMP WITHOUT TIME ZONE DEFAULT NOW(), "email" TEXT NOT NULL, "code" TEXT NOT NULL, "user_id" INTEGER NOT NULL, "status" TEXT NOT NULL, CONSTRAINT "email_verify_pkey" PRIMARY KEY ("id"));
-- rollback: DROP TABLE email_verify;

-- changeset angelchang:322
CREATE INDEX IF NOT EXISTS "idx_health_user_avatar_id" ON "health_user"("avatar_id");
-- rollback: DROP INDEX idx_health_user_avatar_id;

-- changeset angelchang:323
CREATE INDEX IF NOT EXISTS "idx_health_user_created_at_country" ON "health_user"("created_at", "country");
-- rollback: DROP INDEX idx_health_user_created_at_country;

-- changeset angelchang:324
CREATE INDEX IF NOT EXISTS "idx_health_user_identity" ON "health_user"("identity");
-- rollback: DROP INDEX idx_health_user_identity;

-- changeset angelchang:325
CREATE INDEX IF NOT EXISTS "idx_health_user_tester_pseudo_status" ON "health_user"("is_tester", "is_pseudo", "status");
-- rollback: DROP INDEX idx_health_user_tester_pseudo_status;

-- changeset angelchang:326
ALTER TABLE "health_user" ADD CONSTRAINT "health_user_email_key" UNIQUE ("email");
-- rollback: ALTER TABLE health_user DROP CONSTRAINT health_user_email_key;

-- changeset angelchang:327
CREATE INDEX IF NOT EXISTS "idx_heartbeat_user_id_sync_time" ON "heartbeat"("user_id", "sync_time");
-- rollback: DROP INDEX idx_heartbeat_user_id_sync_time;

-- changeset angelchang:328
CREATE INDEX IF NOT EXISTS "idx_hl_cgm_1m_message_event_user_id" ON "hl_cgm_1m_message_event"("user_id");
-- rollback: DROP INDEX idx_hl_cgm_1m_message_event_user_id;

-- changeset angelchang:329
CREATE INDEX IF NOT EXISTS "idx_hl_cgm_1m_v2_message_event_user_id" ON "hl_cgm_1m_v2_message_event"("user_id");
-- rollback: DROP INDEX idx_hl_cgm_1m_v2_message_event_user_id;

-- changeset angelchang:330
CREATE INDEX IF NOT EXISTS "idx_hl_cgm_2m_message_event_user_id" ON "hl_cgm_2m_message_event"("user_id");
-- rollback: DROP INDEX idx_hl_cgm_2m_message_event_user_id;

-- changeset angelchang:331
CREATE INDEX IF NOT EXISTS "idx_hl_cgm_3m_message_event_user_id" ON "hl_cgm_3m_message_event"("user_id");
-- rollback: DROP INDEX idx_hl_cgm_3m_message_event_user_id;

-- changeset angelchang:332
CREATE INDEX IF NOT EXISTS "idx_hl_cgm_message_event_user_id" ON "hl_cgm_message_event"("user_id");
-- rollback: DROP INDEX idx_hl_cgm_message_event_user_id;

-- changeset angelchang:333
CREATE INDEX IF NOT EXISTS "idx_hl_cgm_policyholder_message_event_user_id" ON "hl_cgm_policyholder_message_event"("user_id");
-- rollback: DROP INDEX idx_hl_cgm_policyholder_message_event_user_id;

-- changeset angelchang:334
CREATE INDEX IF NOT EXISTS "idx_hourly_steps_created_at" ON "hourly_steps"("created_at");
-- rollback: DROP INDEX idx_hourly_steps_created_at;

-- changeset angelchang:335
CREATE INDEX IF NOT EXISTS "idx_hourly_steps_recorded_at" ON "hourly_steps"("recorded_at");
-- rollback: DROP INDEX idx_hourly_steps_recorded_at;

-- changeset angelchang:336
CREATE UNIQUE INDEX IF NOT EXISTS "idx_step_user_id_recorded_at_source" ON "hourly_steps"("user_id", "recorded_at", "source");
-- rollback: DROP INDEX idx_step_user_id_recorded_at_source;

-- changeset angelchang:337
CREATE INDEX IF NOT EXISTS "idx_insulin_conn_diary_ids" ON "insulin_connect"("diary_id");
-- rollback: DROP INDEX idx_insulin_conn_diary_ids;

-- changeset angelchang:338
ALTER TABLE "insulin_connect" ADD CONSTRAINT "insulin_connect_ukey" UNIQUE ("user_id", "role", "insulin_id", "diary_id");
-- rollback: ALTER TABLE insulin_connect DROP CONSTRAINT insulin_connect_ukey;

-- changeset angelchang:339
CREATE INDEX IF NOT EXISTS "idx_interactive_form_created_at_status" ON "interactive_form"("created_at" DESC, "status");
-- rollback: DROP INDEX idx_interactive_form_created_at_status;

-- changeset angelchang:340
CREATE INDEX IF NOT EXISTS "idx_interactive_form_connect_ifid_status" ON "interactive_form_connect"("interactive_form_id", "status");
-- rollback: DROP INDEX idx_interactive_form_connect_ifid_status;

-- changeset angelchang:341
CREATE INDEX IF NOT EXISTS "idx_interactive_form_connect_send_to" ON "interactive_form_connect"("send_to");
-- rollback: DROP INDEX idx_interactive_form_connect_send_to;

-- changeset angelchang:342
CREATE INDEX IF NOT EXISTS "idx_interactive_form_connect_status" ON "interactive_form_connect"("status");
-- rollback: DROP INDEX idx_interactive_form_connect_status;

-- changeset angelchang:343
CREATE INDEX IF NOT EXISTS "idx_invitation_invitee_id" ON "invitation"("invitee_id");
-- rollback: DROP INDEX idx_invitation_invitee_id;

-- changeset angelchang:344
CREATE UNIQUE INDEX IF NOT EXISTS unique_unused_invite_code ON public.invitation USING btree (invite_code) WHERE (invite_code IS NOT NULL);
-- rollback: DROP INDEX unique_unused_invite_code;

-- changeset angelchang:345
CREATE INDEX IF NOT EXISTS idx_lab_result_identify ON public.lab_result USING btree (identify) WHERE (NOT exported);
-- rollback: DROP INDEX idx_lab_result_identify;

-- changeset angelchang:346
ALTER TABLE "libreview_subscription_plan" ADD CONSTRAINT "libreview_subscription_plan_product_id_key" UNIQUE ("product_id");
-- rollback: ALTER TABLE libreview_subscription_plan DROP CONSTRAINT libreview_subscription_plan_product_id_key;

-- changeset angelchang:347
CREATE UNIQUE INDEX IF NOT EXISTS "unique_medicine_reminder_user_id_medicine_type_uid" ON "medicine_reminder"("user_id", "medicine_type", "uid");
-- rollback: DROP INDEX unique_medicine_reminder_user_id_medicine_type_uid;

-- changeset angelchang:348
ALTER TABLE "meter" ADD CONSTRAINT "meter_brand_model_unique_key" UNIQUE ("brand", "model");
-- rollback: ALTER TABLE meter DROP CONSTRAINT meter_brand_model_unique_key;

-- changeset angelchang:349
ALTER TABLE "meter" ADD CONSTRAINT "meter_refer_number_unique_key" UNIQUE ("refer_number");
-- rollback: ALTER TABLE meter DROP CONSTRAINT meter_refer_number_unique_key;

-- changeset angelchang:350
CREATE INDEX IF NOT EXISTS idx_moshi_campaign_id ON public.moshi USING btree (moshi_campaign_id, status) WHERE (moshi_campaign_id IS NOT NULL);
-- rollback: DROP INDEX idx_moshi_campaign_id;

-- changeset angelchang:351
CREATE INDEX IF NOT EXISTS "idx_moshi_clinic_receiver_status_created_at_sender" ON "moshi"("clinic_id", "receiver_id", "status", "created_at" DESC, "sender_id");
-- rollback: DROP INDEX idx_moshi_clinic_receiver_status_created_at_sender;

-- changeset angelchang:352
CREATE INDEX IF NOT EXISTS idx_moshi_receiver_created_at_status ON public.moshi USING btree (receiver_id, created_at DESC) WHERE (status <> ALL (ARRAY['deleted'::text, 'archived'::text]));
-- rollback: DROP INDEX idx_moshi_receiver_created_at_status;

-- changeset angelchang:353
CREATE INDEX IF NOT EXISTS "idx_moshi_receiver_sender_status" ON "moshi"("receiver_id", "sender_id", "status");
-- rollback: DROP INDEX idx_moshi_receiver_sender_status;

-- changeset angelchang:354
CREATE INDEX IF NOT EXISTS "idx_moshi_sender_created_at" ON "moshi"("created_at", "sender_id");
-- rollback: DROP INDEX idx_moshi_sender_created_at;

-- changeset angelchang:355
CREATE INDEX IF NOT EXISTS "idx_moshi_sender_receiver_clinic_created_at_status" ON "moshi"("sender_id", "receiver_id", "clinic_id", "status", "created_at");
-- rollback: DROP INDEX idx_moshi_sender_receiver_clinic_created_at_status;

-- changeset angelchang:356
CREATE INDEX IF NOT EXISTS "idx_moshi_attachment_moshi_id" ON "moshi_attachment"("moshi_id");
-- rollback: DROP INDEX idx_moshi_attachment_moshi_id;

-- changeset angelchang:357
CREATE INDEX IF NOT EXISTS "idx_niigata_dm_message_event_user_id" ON "niigata_dm_message_event"("user_id");
-- rollback: DROP INDEX idx_niigata_dm_message_event_user_id;

-- changeset angelchang:358
CREATE INDEX IF NOT EXISTS "idx_om_conn_diary_id" ON "oral_medicine_connect"("diary_id");
-- rollback: DROP INDEX idx_om_conn_diary_id;

-- changeset angelchang:359
ALTER TABLE "oral_medicine_connect" ADD CONSTRAINT "oral_medicine_connect_ukey" UNIQUE ("user_id", "role", "oral_medicine_id", "diary_id");
-- rollback: ALTER TABLE oral_medicine_connect DROP CONSTRAINT oral_medicine_connect_ukey;

-- changeset angelchang:360
CREATE INDEX IF NOT EXISTS "idx_data_monthly_stats_year_month_care_connect_id" ON "origin_medical_data_monthly_stats"("year", "month", "care_connect_id");
-- rollback: DROP INDEX idx_data_monthly_stats_year_month_care_connect_id;

-- changeset angelchang:361
CREATE INDEX IF NOT EXISTS "idx_data_monthly_stats_year_month_clinic_id_is_pseudo" ON "origin_medical_data_monthly_stats"("year", "month", "clinic_id", "is_pseudo");
-- rollback: DROP INDEX idx_data_monthly_stats_year_month_clinic_id_is_pseudo;

-- changeset angelchang:362
CREATE INDEX IF NOT EXISTS "idx_data_monthly_stats_year_month_clinic_id_user_id_is_pseudo" ON "origin_medical_data_monthly_stats"("year", "month", "clinic_id", "user_id", "is_pseudo");
-- rollback: DROP INDEX idx_data_monthly_stats_year_month_clinic_id_user_id_is_pseudo;

-- changeset angelchang:363
CREATE INDEX IF NOT EXISTS "idx_data_quarterly_stats_year_quarter_care_connect_id" ON "origin_medical_data_quarterly_stats"("year", "quarter", "care_connect_id");
-- rollback: DROP INDEX idx_data_quarterly_stats_year_quarter_care_connect_id;

-- changeset angelchang:364
CREATE INDEX IF NOT EXISTS "idx_data_quarterly_year_quarter_clinic_id_is_pseudo" ON "origin_medical_data_quarterly_stats"("year", "quarter", "clinic_id", "is_pseudo");
-- rollback: DROP INDEX idx_data_quarterly_year_quarter_clinic_id_is_pseudo;

-- changeset angelchang:365
CREATE INDEX IF NOT EXISTS "idx_data_quarterly_year_quarter_clinic_id_user_id_is_pseudo" ON "origin_medical_data_quarterly_stats"("year", "quarter", "clinic_id", "user_id", "is_pseudo");
-- rollback: DROP INDEX idx_data_quarterly_year_quarter_clinic_id_user_id_is_pseudo;

-- changeset angelchang:366
CREATE INDEX IF NOT EXISTS "idx_data_yearly_stats_year_care_connect_id" ON "origin_medical_data_yearly_stats"("year", "care_connect_id");
-- rollback: DROP INDEX idx_data_yearly_stats_year_care_connect_id;

-- changeset angelchang:367
CREATE INDEX IF NOT EXISTS "idx_self_measured_monthly_year_month_user_id" ON "origin_self_measured_monthly_stats"("year", "month", "user_id");
-- rollback: DROP INDEX idx_self_measured_monthly_year_month_user_id;

-- changeset angelchang:368
CREATE INDEX IF NOT EXISTS "idx_self_measured_quarterly_year_quarter_user_id" ON "origin_self_measured_quarterly_stats"("year", "quarter", "user_id");
-- rollback: DROP INDEX idx_self_measured_quarterly_year_quarter_user_id;

-- changeset angelchang:369
ALTER TABLE "partner_nanshan_policy_score" ADD CONSTRAINT "partner_nanshan_policy_score_policy_no_key" UNIQUE ("policy_no");
-- rollback: ALTER TABLE partner_nanshan_policy_score DROP CONSTRAINT partner_nanshan_policy_score_policy_no_key;

-- changeset angelchang:370
ALTER TABLE "partner_quaker_user_info" ADD CONSTRAINT "partner_quaker_user_info_user_id_key" UNIQUE ("user_id");
-- rollback: ALTER TABLE partner_quaker_user_info DROP CONSTRAINT partner_quaker_user_info_user_id_key;

-- changeset angelchang:371
ALTER TABLE "password_reset" ADD CONSTRAINT "password_reset_code_key" UNIQUE ("code");
-- rollback: ALTER TABLE password_reset DROP CONSTRAINT password_reset_code_key;

-- changeset angelchang:372
CREATE INDEX IF NOT EXISTS idx_peer_profile_user_id_enabled ON public.peer_profile USING btree (user_id) WHERE enabled;
-- rollback: DROP INDEX idx_peer_profile_user_id_enabled;

-- changeset angelchang:373
CREATE INDEX IF NOT EXISTS "idx_owner_id" ON "peer_recommend_connect"("owner_id");
-- rollback: DROP INDEX idx_owner_id;

-- changeset angelchang:374
CREATE INDEX IF NOT EXISTS idx_owner_recommended_at ON public.peer_recommend_connect USING btree (owner_id, recommended_at) WHERE (recommended_at IS NOT NULL);
-- rollback: DROP INDEX idx_owner_recommended_at;

-- changeset angelchang:375
CREATE INDEX IF NOT EXISTS "idx_peer_recommend_connect_owner_user_id" ON "peer_recommend_connect"("user_id", "owner_id");
-- rollback: DROP INDEX idx_peer_recommend_connect_owner_user_id;

-- changeset angelchang:376
CREATE INDEX IF NOT EXISTS "idx_peer_recommend_connect_recommended_at" ON "peer_recommend_connect"("recommended_at");
-- rollback: DROP INDEX idx_peer_recommend_connect_recommended_at;

-- changeset angelchang:377
CREATE TABLE IF NOT EXISTS "notification" ("id" INTEGER GENERATED BY DEFAULT AS IDENTITY NOT NULL, "created_at" TIMESTAMP WITHOUT TIME ZONE DEFAULT NOW(), "type" TEXT NOT NULL, "receiver_id" INTEGER NOT NULL, "data" TEXT, "model" TEXT NOT NULL, "model_id" INTEGER, "viewed_at" TIMESTAMP WITHOUT TIME ZONE, CONSTRAINT "notification_pkey" PRIMARY KEY ("id"));
-- rollback: DROP TABLE notification;

-- changeset angelchang:378
CREATE INDEX IF NOT EXISTS "idx_peer_status_user_id" ON "peer_status"("user_id");
-- rollback: DROP INDEX idx_peer_status_user_id;

-- changeset angelchang:379
CREATE INDEX IF NOT EXISTS idx_pm_alert_conn_patient_id ON public.pm_alert USING btree (care_connect_id, patient_id) WHERE (status = 'unread'::text);
-- rollback: DROP INDEX idx_pm_alert_conn_patient_id;

-- changeset angelchang:380
CREATE INDEX IF NOT EXISTS "pm_alert_care_connect_scheduled_at_idx" ON "pm_alert"("care_connect_id", "scheduled_at");
-- rollback: DROP INDEX pm_alert_care_connect_scheduled_at_idx;

-- changeset angelchang:381
CREATE INDEX IF NOT EXISTS "pm_alert_created_at_patient_idx_category" ON "pm_alert"("created_at", "patient_id", "category");
-- rollback: DROP INDEX pm_alert_created_at_patient_idx_category;

-- changeset angelchang:382
CREATE INDEX IF NOT EXISTS "idx_premium_subscriptio_user_id" ON "premium_subscription"("user_id");
-- rollback: DROP INDEX idx_premium_subscriptio_user_id;

-- changeset angelchang:383
ALTER TABLE "pseudo_account_history" ADD CONSTRAINT "pseudo_account_history_user_id_key" UNIQUE ("user_id");
-- rollback: ALTER TABLE pseudo_account_history DROP CONSTRAINT pseudo_account_history_user_id_key;

-- changeset angelchang:384
CREATE INDEX IF NOT EXISTS "idx_report_history_owner_id" ON "report_history"("owner_id");
-- rollback: DROP INDEX idx_report_history_owner_id;

-- changeset angelchang:385
CREATE INDEX IF NOT EXISTS "idx_token" ON "si_access_token"("token");
-- rollback: DROP INDEX idx_token;

-- changeset angelchang:386
CREATE INDEX IF NOT EXISTS "idx_slider_event_user_id_expiration_date" ON "slider_event"("user_id", "expiration_date");
-- rollback: DROP INDEX idx_slider_event_user_id_expiration_date;

-- changeset angelchang:387
CREATE INDEX IF NOT EXISTS "idx_slider_record_user_id_expiration_date" ON "slider_record"("user_id", "expiration_date");
-- rollback: DROP INDEX idx_slider_record_user_id_expiration_date;

-- changeset angelchang:388
CREATE INDEX IF NOT EXISTS "idx_step_created_at_user_id" ON "step"("created_at", "user_id");
-- rollback: DROP INDEX idx_step_created_at_user_id;

-- changeset angelchang:389
CREATE INDEX IF NOT EXISTS "idx_step_start_time" ON "step"("start_time");
-- rollback: DROP INDEX idx_step_start_time;

-- changeset angelchang:390
CREATE INDEX IF NOT EXISTS "idx_step_user_id_start_time_end_time" ON "step"("user_id", "start_time", "end_time");
-- rollback: DROP INDEX idx_step_user_id_start_time_end_time;

-- changeset angelchang:391
CREATE INDEX IF NOT EXISTS "idx_step_user_id_sync_time" ON "step"("user_id", "sync_time");
-- rollback: DROP INDEX idx_step_user_id_sync_time;

-- changeset angelchang:392
CREATE INDEX IF NOT EXISTS "idx_client_id" ON "system_integrator"("client_id");
-- rollback: DROP INDEX idx_client_id;

-- changeset angelchang:393
ALTER TABLE "system_integrator" ADD CONSTRAINT "system_integrator_client_id_key" UNIQUE ("client_id");
-- rollback: ALTER TABLE system_integrator DROP CONSTRAINT system_integrator_client_id_key;

-- changeset angelchang:394
CREATE UNIQUE INDEX IF NOT EXISTS toolbox_answer_campaign_user_form_id_key ON public.toolbox_answer USING btree (moshi_campaign_id, toolbox_form_id, user_id) WHERE (deleted_at IS NULL);
-- rollback: DROP INDEX toolbox_answer_campaign_user_form_id_key;

-- changeset angelchang:395
CREATE UNIQUE INDEX IF NOT EXISTS toolbox_answer_program_user_form_id_key ON public.toolbox_answer USING btree (toolbox_program_id, toolbox_form_id, user_id) WHERE (deleted_at IS NULL);
-- rollback: DROP INDEX toolbox_answer_program_user_form_id_key;

-- changeset angelchang:396
CREATE UNIQUE INDEX IF NOT EXISTS toolbox_attachment_producer_id_filename_deleted_at_null_key ON public.toolbox_attachment USING btree (producer_id, filename) WHERE (deleted_at IS NULL);
-- rollback: DROP INDEX toolbox_attachment_producer_id_filename_deleted_at_null_key;

-- changeset angelchang:397
CREATE UNIQUE INDEX IF NOT EXISTS toolbox_form_producer_id_name_deleted_at_null_key ON public.toolbox_form USING btree (producer_id, name) WHERE (deleted_at IS NULL);
-- rollback: DROP INDEX toolbox_form_producer_id_name_deleted_at_null_key;

-- changeset angelchang:398
CREATE INDEX IF NOT EXISTS idx_toolbox_form_connect_form_id_user_connect_id_status ON public.toolbox_form_connect USING btree (user_id, toolbox_form_id, status) WHERE (deleted_at IS NULL);
-- rollback: DROP INDEX idx_toolbox_form_connect_form_id_user_connect_id_status;

-- changeset angelchang:399
CREATE UNIQUE INDEX IF NOT EXISTS toolbox_form_connect_campaign_user_form_id_key ON public.toolbox_form_connect USING btree (moshi_campaign_id, user_id, toolbox_form_id) WHERE (deleted_at IS NULL);
-- rollback: DROP INDEX toolbox_form_connect_campaign_user_form_id_key;

-- changeset angelchang:400
CREATE UNIQUE INDEX IF NOT EXISTS toolbox_form_connect_program_user_form_id_key ON public.toolbox_form_connect USING btree (toolbox_program_id, user_id, toolbox_form_id) WHERE (deleted_at IS NULL);
-- rollback: DROP INDEX toolbox_form_connect_program_user_form_id_key;

-- changeset angelchang:401
CREATE UNIQUE INDEX IF NOT EXISTS toolbox_message_group_producer_id_name_deleted_at_null_key ON public.toolbox_message_group USING btree (producer_id, name) WHERE (deleted_at IS NULL);
-- rollback: DROP INDEX toolbox_message_group_producer_id_name_deleted_at_null_key;

-- changeset angelchang:402
CREATE INDEX IF NOT EXISTS "toolbox_message_group_connect_toolbox_message_group_id" ON "toolbox_message_group_connect"("toolbox_message_group_id");
-- rollback: DROP INDEX toolbox_message_group_connect_toolbox_message_group_id;

-- changeset angelchang:403
CREATE UNIQUE INDEX IF NOT EXISTS toolbox_message_group_id_seq_deleted_at_null_key ON public.toolbox_message_group_connect USING btree (toolbox_message_group_id, seq) WHERE (deleted_at IS NULL);
-- rollback: DROP INDEX toolbox_message_group_id_seq_deleted_at_null_key;

-- changeset angelchang:404
CREATE UNIQUE INDEX IF NOT EXISTS toolbox_program_producer_id_internal_name_deleted_at_null_key ON public.toolbox_program USING btree (producer_id, name) WHERE (deleted_at IS NULL);
-- rollback: DROP INDEX toolbox_program_producer_id_internal_name_deleted_at_null_key;

-- changeset angelchang:405
CREATE INDEX IF NOT EXISTS "idx_toolbox_program_article_connect_article_user_status" ON "toolbox_program_article_connect"("toolbox_program_user_connect_id", "toolbox_article_id", "status");
-- rollback: DROP INDEX idx_toolbox_program_article_connect_article_user_status;

-- changeset angelchang:406
CREATE INDEX IF NOT EXISTS "idx_toolbox_program_moshi_connect_moshi_status" ON "toolbox_program_moshi_connect"("moshi_id", "status");
-- rollback: DROP INDEX idx_toolbox_program_moshi_connect_moshi_status;

-- changeset angelchang:407
CREATE INDEX IF NOT EXISTS "idx_toolbox_program_user_connect_clinic_sub_user_status" ON "toolbox_program_user_connect"("clinic_subscription_id", "status");
-- rollback: DROP INDEX idx_toolbox_program_user_connect_clinic_sub_user_status;

-- changeset angelchang:408
CREATE INDEX IF NOT EXISTS "idx_toolbox_program_user_connect_user_status" ON "toolbox_program_user_connect"("user_id", "status");
-- rollback: DROP INDEX idx_toolbox_program_user_connect_user_status;

-- changeset angelchang:409
CREATE INDEX IF NOT EXISTS "toolbox_schedule_toolbox_program_id" ON "toolbox_schedule"("toolbox_program_id");
-- rollback: DROP INDEX toolbox_schedule_toolbox_program_id;

-- changeset angelchang:410
CREATE INDEX IF NOT EXISTS "idx_user_a1c_source_id" ON "user_a1c"("source", "source_id");
-- rollback: DROP INDEX idx_user_a1c_source_id;

-- changeset angelchang:411
CREATE INDEX IF NOT EXISTS "idx_user_a1c_user_id_recorded_at" ON "user_a1c"("user_id", "recorded_at");
-- rollback: DROP INDEX idx_user_a1c_user_id_recorded_at;

-- changeset angelchang:412
CREATE INDEX IF NOT EXISTS "idx_user_analysis_user_id" ON "user_analysis"("user_id");
-- rollback: DROP INDEX idx_user_analysis_user_id;

-- changeset angelchang:413
CREATE INDEX IF NOT EXISTS "idx_user_cache_user_id" ON "user_cache"("user_id");
-- rollback: DROP INDEX idx_user_cache_user_id;

-- changeset angelchang:414
CREATE UNIQUE INDEX IF NOT EXISTS user_consent_document_null_clinic_id_unique_key ON user_consent_document (category, (clinic_id IS NULL), language, fingerprint) WHERE clinic_id is NULL;
-- rollback: DROP INDEX user_consent_document_null_clinic_id_unique_key;

-- changeset angelchang:415
ALTER TABLE "user_consent_document" ADD CONSTRAINT "user_consent_document_unique_key" UNIQUE ("category", "clinic_id", "language", "fingerprint");
-- rollback: ALTER TABLE user_consent_document DROP CONSTRAINT user_consent_document_unique_key;

-- changeset angelchang:416
CREATE INDEX IF NOT EXISTS "idx_user_consent_history_user_id_category" ON "user_consent_history"("user_id", "category");
-- rollback: DROP INDEX idx_user_consent_history_user_id_category;

-- changeset angelchang:417
CREATE INDEX IF NOT EXISTS "idx_user_daily_routine_user_id_status" ON "user_daily_routine"("user_id", "status");
-- rollback: DROP INDEX idx_user_daily_routine_user_id_status;

-- changeset angelchang:418
CREATE INDEX IF NOT EXISTS "idx_user_exam_unit_user_id" ON "user_exam_unit"("user_id");
-- rollback: DROP INDEX idx_user_exam_unit_user_id;

-- changeset angelchang:419
CREATE INDEX IF NOT EXISTS idx_user_measurement_plan_active_user_id ON public.user_measurement_plan USING btree (user_id) WHERE (status = 'active'::text);
-- rollback: DROP INDEX idx_user_measurement_plan_active_user_id;

-- changeset angelchang:420
ALTER TABLE "user_meter" ADD CONSTRAINT "user_meter_unique_key" UNIQUE ("user_id", "meter_id", "user_tag_id", "serial_number", "mac_address");
-- rollback: ALTER TABLE user_meter DROP CONSTRAINT user_meter_unique_key;

-- changeset angelchang:421
CREATE INDEX IF NOT EXISTS "idx_unt_user_token_id_v1" ON "user_notification_token"("user_token_id");
-- rollback: DROP INDEX idx_unt_user_token_id_v1;

-- changeset angelchang:422
CREATE INDEX IF NOT EXISTS idx_user_pref_user_id_with_status_active ON public.user_pref USING btree (user_id) WHERE ((status)::text = 'active'::text);
-- rollback: DROP INDEX idx_user_pref_user_id_with_status_active;

-- changeset angelchang:423
CREATE INDEX IF NOT EXISTS idx_created_at_user_id_category_clinic_id ON public.user_stream USING btree (created_at DESC, user_id, category, clinic_id) WHERE (active = true);
-- rollback: DROP INDEX idx_created_at_user_id_category_clinic_id;

-- changeset angelchang:424
CREATE UNIQUE INDEX IF NOT EXISTS "idx_unique_user_stream_source_id_category" ON "user_stream"("source_id", "category");
-- rollback: DROP INDEX idx_unique_user_stream_source_id_category;

-- changeset angelchang:425
CREATE INDEX IF NOT EXISTS idx_user_id_created_at ON public.user_stream USING btree (user_id, created_at DESC) WHERE (active = true);
-- rollback: DROP INDEX idx_user_id_created_at;

-- changeset angelchang:426
CREATE INDEX IF NOT EXISTS idx_user_stream_clinic_id_active ON public.user_stream USING btree (clinic_id) WHERE (active AND (clinic_id IS NOT NULL));
-- rollback: DROP INDEX idx_user_stream_clinic_id_active;

-- changeset angelchang:427
CREATE INDEX IF NOT EXISTS idx_user_stream_user_id_active ON public.user_stream USING btree (user_id) WHERE active;
-- rollback: DROP INDEX idx_user_stream_user_id_active;

-- changeset angelchang:428
CREATE INDEX IF NOT EXISTS "idx_user_token_device_user_id" ON "user_token"("device_id", "user_id");
-- rollback: DROP INDEX idx_user_token_device_user_id;

-- changeset angelchang:429
CREATE INDEX IF NOT EXISTS idx_user_token_idx ON public.user_token USING btree (device_id, access_token) WHERE (is_valid = true);
-- rollback: DROP INDEX idx_user_token_idx;

-- changeset angelchang:430
CREATE INDEX IF NOT EXISTS idx_user_token_user_id ON public.user_token USING btree (user_id) WHERE is_valid;
-- rollback: DROP INDEX idx_user_token_user_id;

-- changeset angelchang:431
CREATE INDEX IF NOT EXISTS "idx_avatar_id" ON "warp_session"("avatar_id");
-- rollback: DROP INDEX idx_avatar_id;

-- changeset angelchang:432
CREATE INDEX IF NOT EXISTS "idx_avatar_id_uid" ON "warp_session"("avatar_id", "uid");
-- rollback: DROP INDEX idx_avatar_id_uid;

-- changeset angelchang:433
CREATE INDEX IF NOT EXISTS "idx_web_log_created_at" ON "web_log"("created_at" DESC);
-- rollback: DROP INDEX idx_web_log_created_at;

-- changeset angelchang:434
CREATE INDEX IF NOT EXISTS "idx_web_log_endpoint_btree" ON "web_log"("endpoint");
-- rollback: DROP INDEX idx_web_log_endpoint_btree;

-- changeset angelchang:435
CREATE INDEX IF NOT EXISTS "idx_web_log_user_id_created_at" ON "web_log"("user_id", "created_at" DESC);
-- rollback: DROP INDEX idx_web_log_user_id_created_at;

-- changeset angelchang:436
CREATE INDEX IF NOT EXISTS "idx_web_session_touched" ON "web_session"("touched");
-- rollback: DROP INDEX idx_web_session_touched;

-- changeset angelchang:437
CREATE INDEX IF NOT EXISTS "idx_web_session_uid" ON "web_session"("uid");
-- rollback: DROP INDEX idx_web_session_uid;

-- changeset angelchang:438
ALTER TABLE "diary_tag_name" ADD CONSTRAINT "diary_tag_name_tag_value_type_key" UNIQUE ("tag_value", "type");
-- rollback: ALTER TABLE diary_tag_name DROP CONSTRAINT diary_tag_name_tag_value_type_key;

-- changeset angelchang:439
ALTER TABLE "country" ADD CONSTRAINT "country_iso_2_key" UNIQUE ("iso_2");
-- rollback: ALTER TABLE country DROP CONSTRAINT country_iso_2_key;

-- changeset angelchang:440
ALTER TABLE "country" ADD CONSTRAINT "country_name_key" UNIQUE ("name");
-- rollback: ALTER TABLE country DROP CONSTRAINT country_name_key;

-- changeset angelchang:441
ALTER TABLE "warp_avatar" ADD CONSTRAINT "warp_avatar_email_key" UNIQUE ("email");
-- rollback: ALTER TABLE warp_avatar DROP CONSTRAINT warp_avatar_email_key;

-- changeset angelchang:442
ALTER TABLE "warp_avatar" ADD CONSTRAINT "warp_avatar_phone_number_key" UNIQUE ("phone_number");
-- rollback: ALTER TABLE warp_avatar DROP CONSTRAINT warp_avatar_phone_number_key;

-- changeset angelchang:443
CREATE INDEX IF NOT EXISTS "idx_notification_created_at" ON "notification"("created_at");
-- rollback: DROP INDEX idx_notification_created_at;

-- changeset angelchang:444
CREATE TABLE IF NOT EXISTS "alembic_version" ("version_num" VARCHAR(32) NOT NULL, CONSTRAINT "alembic_version_pkc" PRIMARY KEY ("version_num"));
-- rollback: DROP TABLE alembic_version;

-- changeset angelchang:445
CREATE TABLE IF NOT EXISTS "awsdms_ddl_audit" ("c_key" BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL, "c_time" TIMESTAMP WITHOUT TIME ZONE, "c_user" VARCHAR(64), "c_txn" VARCHAR(16), "c_tag" VARCHAR(24), "c_oid" INTEGER, "c_name" VARCHAR(64), "c_schema" VARCHAR(64), "c_ddlqry" TEXT, CONSTRAINT "awsdms_ddl_audit_pkey" PRIMARY KEY ("c_key"));
-- rollback: DROP TABLE awsdms_ddl_audit;

-- changeset angelchang:446
CREATE TABLE IF NOT EXISTS "clinic_promotion_profile" ("id" INTEGER GENERATED BY DEFAULT AS IDENTITY NOT NULL, "clinic_id" INTEGER NOT NULL, "area_id" INTEGER, "city_id" INTEGER, "district_id" INTEGER, "address" TEXT, "outpatient_time" TEXT DEFAULT '[]', "phone" TEXT, "registered_url" TEXT, "introduction" TEXT, "lat" numeric, "lon" numeric, "temporary_flag" BOOLEAN DEFAULT TRUE, "usable_flag" BOOLEAN DEFAULT FALSE, "good_clinic_flag" BOOLEAN DEFAULT FALSE, "created_at" TIMESTAMP WITHOUT TIME ZONE DEFAULT NOW(), "updated_at" TIMESTAMP WITHOUT TIME ZONE DEFAULT NOW(), "deleted_at" TIMESTAMP WITHOUT TIME ZONE, "rating_count" INTEGER DEFAULT 0 NOT NULL, "total_rating" INTEGER DEFAULT 0 NOT NULL, "average_rating" numeric DEFAULT 0 NOT NULL, "geog_point" GEOGRAPHY, CONSTRAINT "clinic_promotion_profile_pkey" PRIMARY KEY ("id"));
-- rollback: DROP TABLE clinic_promotion_profile;

-- changeset angelchang:447
CREATE TABLE IF NOT EXISTS "examination_backup" ("id" INTEGER, "created_at" TIMESTAMP WITHOUT TIME ZONE, "updated_at" TIMESTAMP WITHOUT TIME ZONE, "hba1c" numeric, "total_cholesterol" numeric, "ldl_c" numeric, "hdl_c" numeric, "tg" numeric, "creatinine" numeric, "egfr" numeric, "gpt" VARCHAR(128), "urine_acr" numeric, "urine_pcr" numeric, "ckd_stage" TEXT, "alb" numeric, "bun" numeric, "type" TEXT, "diagnosed_at" date, "care_connect_id" INTEGER, "created_by" INTEGER, "fpg" numeric, "ppg" numeric, "got" numeric, "lab_result_id" INTEGER, "units" TEXT);
-- rollback: DROP TABLE examination_backup;

-- changeset angelchang:448
CREATE TABLE IF NOT EXISTS "user_picture" ("id" INTEGER GENERATED BY DEFAULT AS IDENTITY NOT NULL, "url" TEXT, "user_id" INTEGER NOT NULL, CONSTRAINT "user_picture_pkey" PRIMARY KEY ("id"));
-- rollback: DROP TABLE user_picture;

-- changeset angelchang:449
ALTER TABLE "admin_role" ADD CONSTRAINT "admin_role_user_id_fkey" FOREIGN KEY ("user_id") REFERENCES "health_user" ("id") ON UPDATE NO ACTION ON DELETE RESTRICT;
-- rollback: ALTER TABLE admin_role DROP CONSTRAINT admin_role_user_id_fkey;

-- changeset angelchang:450
ALTER TABLE "affiliate_code" ADD CONSTRAINT "affiliate_code_affiliate_id_fkey" FOREIGN KEY ("affiliate_id") REFERENCES "affiliate" ("id") ON UPDATE NO ACTION ON DELETE RESTRICT;
-- rollback: ALTER TABLE affiliate_code DROP CONSTRAINT affiliate_code_affiliate_id_fkey;

-- changeset angelchang:451
ALTER TABLE "affiliate_connect" ADD CONSTRAINT "affiliate_connect_affiliate_code_id_fkey" FOREIGN KEY ("affiliate_code_id") REFERENCES "affiliate_code" ("id") ON UPDATE NO ACTION ON DELETE RESTRICT;
-- rollback: ALTER TABLE affiliate_connect DROP CONSTRAINT affiliate_connect_affiliate_code_id_fkey;

-- changeset angelchang:452
ALTER TABLE "affiliate_connect" ADD CONSTRAINT "affiliate_connect_affiliate_id_fkey" FOREIGN KEY ("affiliate_id") REFERENCES "affiliate" ("id") ON UPDATE NO ACTION ON DELETE RESTRICT;
-- rollback: ALTER TABLE affiliate_connect DROP CONSTRAINT affiliate_connect_affiliate_id_fkey;

-- changeset angelchang:453
ALTER TABLE "affiliate_connect" ADD CONSTRAINT "affiliate_connect_user_id_fkey" FOREIGN KEY ("user_id") REFERENCES "health_user" ("id") ON UPDATE NO ACTION ON DELETE RESTRICT;
-- rollback: ALTER TABLE affiliate_connect DROP CONSTRAINT affiliate_connect_user_id_fkey;

-- changeset angelchang:454
ALTER TABLE "alert_setting" ADD CONSTRAINT "alert_setting_care_connect_id_fkey" FOREIGN KEY ("care_connect_id") REFERENCES "care_connect" ("id") ON UPDATE NO ACTION ON DELETE RESTRICT;
-- rollback: ALTER TABLE alert_setting DROP CONSTRAINT alert_setting_care_connect_id_fkey;

-- changeset angelchang:455
ALTER TABLE "android_device_pattern" ADD CONSTRAINT "android_device_pattern_user_id_fkey" FOREIGN KEY ("user_id") REFERENCES "health_user" ("id") ON UPDATE NO ACTION ON DELETE RESTRICT;
-- rollback: ALTER TABLE android_device_pattern DROP CONSTRAINT android_device_pattern_user_id_fkey;

-- changeset angelchang:456
ALTER TABLE "antz" ADD CONSTRAINT "antz_subscribed_id_fkey" FOREIGN KEY ("subscribed_id") REFERENCES "health_user" ("id") ON UPDATE NO ACTION ON DELETE RESTRICT;
-- rollback: ALTER TABLE antz DROP CONSTRAINT antz_subscribed_id_fkey;

-- changeset angelchang:457
ALTER TABLE "antz" ADD CONSTRAINT "antz_user_id_fkey" FOREIGN KEY ("user_id") REFERENCES "health_user" ("id") ON UPDATE NO ACTION ON DELETE RESTRICT;
-- rollback: ALTER TABLE antz DROP CONSTRAINT antz_user_id_fkey;

-- changeset angelchang:458
ALTER TABLE "app_alert_setting" ADD CONSTRAINT "app_alert_setting_user_id_fkey" FOREIGN KEY ("user_id") REFERENCES "health_user" ("id") ON UPDATE NO ACTION ON DELETE RESTRICT;
-- rollback: ALTER TABLE app_alert_setting DROP CONSTRAINT app_alert_setting_user_id_fkey;

-- changeset angelchang:459
ALTER TABLE "app_log" ADD CONSTRAINT "app_log_user_id_fkey" FOREIGN KEY ("user_id") REFERENCES "health_user" ("id") ON UPDATE NO ACTION ON DELETE RESTRICT;
-- rollback: ALTER TABLE app_log DROP CONSTRAINT app_log_user_id_fkey;

-- changeset angelchang:460
ALTER TABLE "care_connect" ADD CONSTRAINT "care_connect_clinic_code_id_fkey" FOREIGN KEY ("clinic_code_id") REFERENCES "clinic_code" ("id") ON UPDATE NO ACTION ON DELETE RESTRICT;
-- rollback: ALTER TABLE care_connect DROP CONSTRAINT care_connect_clinic_code_id_fkey;

-- changeset angelchang:461
ALTER TABLE "care_connect" ADD CONSTRAINT "care_connect_clinic_id_fkey" FOREIGN KEY ("clinic_id") REFERENCES "clinic" ("id") ON UPDATE NO ACTION ON DELETE RESTRICT;
-- rollback: ALTER TABLE care_connect DROP CONSTRAINT care_connect_clinic_id_fkey;

-- changeset angelchang:462
ALTER TABLE "care_connect" ADD CONSTRAINT "care_connect_educator_id_fkey" FOREIGN KEY ("educator_id") REFERENCES "health_user" ("id") ON UPDATE NO ACTION ON DELETE RESTRICT;
-- rollback: ALTER TABLE care_connect DROP CONSTRAINT care_connect_educator_id_fkey;

-- changeset angelchang:463
ALTER TABLE "care_connect" ADD CONSTRAINT "care_connect_last_viewed_user_id_fkey" FOREIGN KEY ("last_viewed_user_id") REFERENCES "health_user" ("id") ON UPDATE NO ACTION ON DELETE RESTRICT;
-- rollback: ALTER TABLE care_connect DROP CONSTRAINT care_connect_last_viewed_user_id_fkey;

-- changeset angelchang:464
ALTER TABLE "care_connect" ADD CONSTRAINT "care_connect_user_id_fkey" FOREIGN KEY ("user_id") REFERENCES "health_user" ("id") ON UPDATE NO ACTION ON DELETE RESTRICT;
-- rollback: ALTER TABLE care_connect DROP CONSTRAINT care_connect_user_id_fkey;

-- changeset angelchang:465
ALTER TABLE "care_viewed_connect" ADD CONSTRAINT "care_viewed_connect_care_connect_id_fkey" FOREIGN KEY ("care_connect_id") REFERENCES "care_connect" ("id") ON UPDATE NO ACTION ON DELETE RESTRICT;
-- rollback: ALTER TABLE care_viewed_connect DROP CONSTRAINT care_viewed_connect_care_connect_id_fkey;

-- changeset angelchang:466
ALTER TABLE "care_viewed_connect" ADD CONSTRAINT "care_viewed_connect_user_id_fkey" FOREIGN KEY ("user_id") REFERENCES "health_user" ("id") ON UPDATE NO ACTION ON DELETE RESTRICT;
-- rollback: ALTER TABLE care_viewed_connect DROP CONSTRAINT care_viewed_connect_user_id_fkey;

-- changeset angelchang:467
ALTER TABLE "cgm_sync_history" ADD CONSTRAINT "cgm_sync_history_clinic_id_fkey" FOREIGN KEY ("clinic_id") REFERENCES "clinic" ("id") ON UPDATE NO ACTION ON DELETE RESTRICT;
-- rollback: ALTER TABLE cgm_sync_history DROP CONSTRAINT cgm_sync_history_clinic_id_fkey;

-- changeset angelchang:468
ALTER TABLE "cgm_sync_history" ADD CONSTRAINT "cgm_sync_history_updated_by_fkey" FOREIGN KEY ("updated_by") REFERENCES "health_user" ("id") ON UPDATE NO ACTION ON DELETE RESTRICT;
-- rollback: ALTER TABLE cgm_sync_history DROP CONSTRAINT cgm_sync_history_updated_by_fkey;

-- changeset angelchang:469
ALTER TABLE "cgm_sync_history" ADD CONSTRAINT "cgm_sync_history_user_id_fkey" FOREIGN KEY ("user_id") REFERENCES "health_user" ("id") ON UPDATE NO ACTION ON DELETE RESTRICT;
-- rollback: ALTER TABLE cgm_sync_history DROP CONSTRAINT cgm_sync_history_user_id_fkey;

-- changeset angelchang:470
ALTER TABLE "clinic" ADD CONSTRAINT "clinic_account_manager_id_fkey" FOREIGN KEY ("account_manager_id") REFERENCES "health_user" ("id") ON UPDATE NO ACTION ON DELETE RESTRICT;
-- rollback: ALTER TABLE clinic DROP CONSTRAINT clinic_account_manager_id_fkey;

-- changeset angelchang:471
ALTER TABLE "clinic_chart" ADD CONSTRAINT "clinic_chart_care_connect_id_fkey" FOREIGN KEY ("care_connect_id") REFERENCES "care_connect" ("id") ON UPDATE NO ACTION ON DELETE RESTRICT;
-- rollback: ALTER TABLE clinic_chart DROP CONSTRAINT clinic_chart_care_connect_id_fkey;

-- changeset angelchang:472
ALTER TABLE "clinic_chart" ADD CONSTRAINT "clinic_chart_clinic_id_fkey" FOREIGN KEY ("clinic_id") REFERENCES "clinic" ("id") ON UPDATE NO ACTION ON DELETE RESTRICT;
-- rollback: ALTER TABLE clinic_chart DROP CONSTRAINT clinic_chart_clinic_id_fkey;

-- changeset angelchang:473
ALTER TABLE "clinic_chart" ADD CONSTRAINT "clinic_chart_created_by_fkey" FOREIGN KEY ("created_by") REFERENCES "health_user" ("id") ON UPDATE NO ACTION ON DELETE RESTRICT;
-- rollback: ALTER TABLE clinic_chart DROP CONSTRAINT clinic_chart_created_by_fkey;

-- changeset angelchang:474
ALTER TABLE "clinic_chart" ADD CONSTRAINT "clinic_chart_user_id_fkey" FOREIGN KEY ("user_id") REFERENCES "health_user" ("id") ON UPDATE NO ACTION ON DELETE RESTRICT;
-- rollback: ALTER TABLE clinic_chart DROP CONSTRAINT clinic_chart_user_id_fkey;

-- changeset angelchang:475
ALTER TABLE "clinic_code" ADD CONSTRAINT "clinic_code_care_connect_id_fkey" FOREIGN KEY ("care_connect_id") REFERENCES "care_connect" ("id") ON UPDATE NO ACTION ON DELETE RESTRICT;
-- rollback: ALTER TABLE clinic_code DROP CONSTRAINT clinic_code_care_connect_id_fkey;

-- changeset angelchang:476
ALTER TABLE "clinic_code" ADD CONSTRAINT "clinic_code_clinic_id_fkey" FOREIGN KEY ("clinic_id") REFERENCES "clinic" ("id") ON UPDATE NO ACTION ON DELETE RESTRICT;
-- rollback: ALTER TABLE clinic_code DROP CONSTRAINT clinic_code_clinic_id_fkey;

-- changeset angelchang:477
ALTER TABLE "clinic_config" ADD CONSTRAINT "clinic_config_clinic_id_fkey" FOREIGN KEY ("clinic_id") REFERENCES "clinic" ("id") ON UPDATE NO ACTION ON DELETE RESTRICT;
-- rollback: ALTER TABLE clinic_config DROP CONSTRAINT clinic_config_clinic_id_fkey;

-- changeset angelchang:478
ALTER TABLE "clinic" ADD CONSTRAINT "clinic_country_id_fkey" FOREIGN KEY ("country_id") REFERENCES "country" ("id") ON UPDATE NO ACTION ON DELETE RESTRICT;
-- rollback: ALTER TABLE clinic DROP CONSTRAINT clinic_country_id_fkey;

-- changeset angelchang:479
ALTER TABLE "clinic_daily_comment" ADD CONSTRAINT "clinic_daily_comment_clinic_id_fkey" FOREIGN KEY ("clinic_id") REFERENCES "clinic" ("id") ON UPDATE NO ACTION ON DELETE RESTRICT;
-- rollback: ALTER TABLE clinic_daily_comment DROP CONSTRAINT clinic_daily_comment_clinic_id_fkey;

-- changeset angelchang:480
ALTER TABLE "clinic_daily_comment" ADD CONSTRAINT "clinic_daily_comment_created_by_fkey" FOREIGN KEY ("created_by") REFERENCES "health_user" ("id") ON UPDATE NO ACTION ON DELETE RESTRICT;
-- rollback: ALTER TABLE clinic_daily_comment DROP CONSTRAINT clinic_daily_comment_created_by_fkey;

-- changeset angelchang:481
ALTER TABLE "clinic_daily_comment" ADD CONSTRAINT "clinic_daily_comment_user_id_fkey" FOREIGN KEY ("user_id") REFERENCES "health_user" ("id") ON UPDATE NO ACTION ON DELETE RESTRICT;
-- rollback: ALTER TABLE clinic_daily_comment DROP CONSTRAINT clinic_daily_comment_user_id_fkey;

-- changeset angelchang:482
ALTER TABLE "clinic_discount" ADD CONSTRAINT "clinic_discount_clinic_id_fkey" FOREIGN KEY ("clinic_id") REFERENCES "clinic" ("id") ON UPDATE NO ACTION ON DELETE RESTRICT;
-- rollback: ALTER TABLE clinic_discount DROP CONSTRAINT clinic_discount_clinic_id_fkey;

-- changeset angelchang:483
ALTER TABLE "clinic_discount_code" ADD CONSTRAINT "clinic_discount_code_discount_id_fkey" FOREIGN KEY ("discount_id") REFERENCES "clinic_discount" ("id") ON UPDATE NO ACTION ON DELETE RESTRICT;
-- rollback: ALTER TABLE clinic_discount_code DROP CONSTRAINT clinic_discount_code_discount_id_fkey;

-- changeset angelchang:484
ALTER TABLE "clinic_discount_code" ADD CONSTRAINT "clinic_discount_code_subscription_id_fkey" FOREIGN KEY ("subscription_id") REFERENCES "clinic_subscription" ("id") ON UPDATE NO ACTION ON DELETE RESTRICT;
-- rollback: ALTER TABLE clinic_discount_code DROP CONSTRAINT clinic_discount_code_subscription_id_fkey;

-- changeset angelchang:485
ALTER TABLE "clinic_discount_code" ADD CONSTRAINT "clinic_discount_code_user_id_fkey" FOREIGN KEY ("user_id") REFERENCES "health_user" ("id") ON UPDATE NO ACTION ON DELETE RESTRICT;
-- rollback: ALTER TABLE clinic_discount_code DROP CONSTRAINT clinic_discount_code_user_id_fkey;

-- changeset angelchang:486
ALTER TABLE "clinic_discount" ADD CONSTRAINT "clinic_discount_plan_id_fkey" FOREIGN KEY ("plan_id") REFERENCES "clinic_plan" ("id") ON UPDATE NO ACTION ON DELETE RESTRICT;
-- rollback: ALTER TABLE clinic_discount DROP CONSTRAINT clinic_discount_plan_id_fkey;

-- changeset angelchang:487
ALTER TABLE "clinic_exam_chart" ADD CONSTRAINT "clinic_exam_chart_clinic_id_fkey" FOREIGN KEY ("clinic_id") REFERENCES "clinic" ("id") ON UPDATE NO ACTION ON DELETE CASCADE;
-- rollback: ALTER TABLE clinic_exam_chart DROP CONSTRAINT clinic_exam_chart_clinic_id_fkey;

-- changeset angelchang:488
ALTER TABLE "clinic_exam_unit" ADD CONSTRAINT "clinic_exam_unit_clinic_id_fkey" FOREIGN KEY ("clinic_id") REFERENCES "clinic" ("id") ON UPDATE NO ACTION ON DELETE CASCADE;
-- rollback: ALTER TABLE clinic_exam_unit DROP CONSTRAINT clinic_exam_unit_clinic_id_fkey;

-- changeset angelchang:489
ALTER TABLE "clinic_feature" ADD CONSTRAINT "clinic_feature_clinic_id_fkey" FOREIGN KEY ("clinic_id") REFERENCES "clinic" ("id") ON UPDATE NO ACTION ON DELETE RESTRICT;
-- rollback: ALTER TABLE clinic_feature DROP CONSTRAINT clinic_feature_clinic_id_fkey;

-- changeset angelchang:490
ALTER TABLE "clinic_group" ADD CONSTRAINT "clinic_group_clinic_id_fkey" FOREIGN KEY ("clinic_id") REFERENCES "clinic" ("id") ON UPDATE NO ACTION ON DELETE RESTRICT;
-- rollback: ALTER TABLE clinic_group DROP CONSTRAINT clinic_group_clinic_id_fkey;

-- changeset angelchang:491
ALTER TABLE "clinic_group_connect" ADD CONSTRAINT "clinic_group_connect_clinic_group_id_fkey" FOREIGN KEY ("clinic_group_id") REFERENCES "clinic_group" ("id") ON UPDATE NO ACTION ON DELETE RESTRICT;
-- rollback: ALTER TABLE clinic_group_connect DROP CONSTRAINT clinic_group_connect_clinic_group_id_fkey;

-- changeset angelchang:492
ALTER TABLE "clinic_group_connect" ADD CONSTRAINT "clinic_group_connect_user_id_fkey" FOREIGN KEY ("user_id") REFERENCES "health_user" ("id") ON UPDATE NO ACTION ON DELETE RESTRICT;
-- rollback: ALTER TABLE clinic_group_connect DROP CONSTRAINT clinic_group_connect_user_id_fkey;

-- changeset angelchang:493
ALTER TABLE "clinic_loyalty_rule" ADD CONSTRAINT "clinic_loyalty_rule_clinic_id_fkey" FOREIGN KEY ("clinic_id") REFERENCES "clinic" ("id") ON UPDATE NO ACTION ON DELETE RESTRICT;
-- rollback: ALTER TABLE clinic_loyalty_rule DROP CONSTRAINT clinic_loyalty_rule_clinic_id_fkey;

-- changeset angelchang:494
ALTER TABLE "clinic_loyalty_transaction" ADD CONSTRAINT "clinic_loyalty_transaction_care_connect_id_fkey" FOREIGN KEY ("care_connect_id") REFERENCES "care_connect" ("id") ON UPDATE NO ACTION ON DELETE RESTRICT;
-- rollback: ALTER TABLE clinic_loyalty_transaction DROP CONSTRAINT clinic_loyalty_transaction_care_connect_id_fkey;

-- changeset angelchang:495
ALTER TABLE "clinic_loyalty_transaction" ADD CONSTRAINT "clinic_loyalty_transaction_clinic_id_fkey" FOREIGN KEY ("clinic_id") REFERENCES "clinic" ("id") ON UPDATE NO ACTION ON DELETE RESTRICT;
-- rollback: ALTER TABLE clinic_loyalty_transaction DROP CONSTRAINT clinic_loyalty_transaction_clinic_id_fkey;
